{
  "id": "77bc1b6d5e2b2ada61dc3741ec905c99",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/core/merge/BBroMerge.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IMergeV2.sol\";\nimport \"../../interfaces/IWeweReceiver.sol\";\nimport {Eater} from \"./Eater.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract BBroMerge is Eater, IMergeV2 {\n    function getToken() external view returns (address) {\n        return _token;\n    }\n\n    constructor() {\n        _rate = 100;\n        _token = 0xdE74eB14FB3f6F7236550819934065Acc9890622;\n        wewe = 0x6b9bb36519538e0C073894E964E90172E1c0B41F;\n\n        _pause();\n    }\n\n    function getRate() external view returns (uint256) {\n        return _rate;\n    }\n\n    function setRate(uint256 rate) external onlyOwner {\n        _setRate(rate);\n    }\n\n    function mergeAll() external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        _merge(balance, _token, msg.sender);\n    }\n\n    function merge(uint256 amount) external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"BBroMerge: Insufficient balance\");\n\n        _merge(amount, _token, msg.sender);\n    }\n\n    // @notice Fund this contract with wewe token\n    function deposit(uint256 amount) external onlyOwner {\n        _deposit(amount);\n    }\n}\n"
      },
      "contracts/core/merge/BroMerge.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IMergeV2.sol\";\nimport \"../../interfaces/IWeweReceiver.sol\";\nimport {Eater} from \"./Eater.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract BroMerge is Eater, IMergeV2 {\n    function getToken() external view returns (address) {\n        return _token;\n    }\n\n    constructor() {\n        _rate = 100;\n        _token = 0x93750140C2EcEA27a53c6ed30380829607815A31;\n        wewe = 0x6b9bb36519538e0C073894E964E90172E1c0B41F;\n\n        _pause();\n    }\n\n    function getRate() external view returns (uint256) {\n        return _rate;\n    }\n\n    function setRate(uint256 rate) external onlyOwner {\n        _setRate(rate);\n    }\n\n    function mergeAll() external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        _merge(balance, _token, msg.sender);\n    }\n\n    function merge(uint256 amount) external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"BroMerge: Insufficient balance\");\n\n        _merge(amount, _token, msg.sender);\n    }\n\n    // @notice Fund this contract with wewe token\n    function deposit(uint256 amount) external onlyOwner {\n        _deposit(amount);\n    }\n}\n"
      },
      "contracts/core/merge/Eater.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../../interfaces/IWeweReceiver.sol\";\n\nstruct Vesting {\n    uint256 amount;\n    uint256 end;\n}\n\nabstract contract Eater is IWeweReceiver, ReentrancyGuard, Pausable, Ownable {\n    uint256 internal _rate;\n    address internal _token;\n    address public wewe;\n\n    uint8 internal vestingDuration;\n    mapping(address => Vesting) public vestings;\n\n    function _setRate(uint256 rate) internal {\n        require(rate > 0, \"Eater: Rate must be greater than 0\");\n\n        if (_rate != rate) {\n            _rate = rate;\n            emit RateChanged(rate);\n        }\n    }\n\n    function _merge(uint256 amount, address token, address from) internal {\n        uint256 vestedAmount = vestings[from].amount;\n        uint256 weweToTransfer = vestedAmount + (amount * _rate) / 100;\n        require(\n            weweToTransfer <= IERC20(wewe).balanceOf(address(this)),\n            \"Eater: Insufficient token balance to transfer\"\n        );\n\n        // Merge tokens from sender\n        IERC20(token).transferFrom(from, address(this), amount);\n\n        // If transfer, dont vest\n        if (vestingDuration != 0) {\n            vestings[msg.sender] = Vesting({amount: weweToTransfer, end: block.timestamp + vestingDuration * 1 days});\n        } else {\n            // Transfer Wewe tokens to sender\n            IERC20(wewe).transfer(from, weweToTransfer);\n        }\n\n        emit Merged(amount, from);\n    }\n\n    function sweep() external onlyOwner {\n        uint256 balance = IERC20(wewe).balanceOf(address(this));\n        require(balance > 0, \"Eater: No balance to sweep\");\n        IERC20(wewe).transfer(owner(), balance);\n    }\n\n    /// @notice Wewe token approveAndCall function\n    function receiveApproval(\n        address from,\n        uint256 amount,\n        address,\n        bytes calldata\n    ) external nonReentrant whenNotPaused {\n        // After wewe approve and call, it will call this function\n        require(_token != address(0), \"Eater: Token address not set\");\n\n        // Eat the underlying token \"_token\" with the amount of \"amount\"\n        _merge(amount, _token, from);\n    }\n\n    function togglePause() external onlyOwner {\n        paused() ? _unpause() : _pause();\n    }\n\n    function _deposit(uint256 amount) internal {\n        IERC20(wewe).transferFrom(msg.sender, address(this), amount);\n    }\n\n    modifier whenClaimable(address account) {\n        // Set to 0 to disable vesting\n        if (vestingDuration == 0) {\n            _;\n        }\n\n        require(vestings[account].end <= block.timestamp, \"Eater: Vesting not ended\");\n        _;\n    }\n\n    event Merged(uint256 amount, address indexed account);\n    event RateChanged(uint256 newRate);\n}\n"
      },
      "contracts/core/merge/GenericMerge.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IMergeV2.sol\";\nimport {Eater} from \"./Eater.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract GenericMerge is Eater, IMergeV2 {\n    constructor(address _wewe, address token, uint8 _vestingDuration) {\n        _rate = 100;\n        wewe = _wewe;\n        _token = token;\n        vestingDuration = _vestingDuration;\n    }\n\n    function canClaim(address account) external view returns (bool) {\n        return vestings[account].end <= block.timestamp;\n    }\n\n    function balanceOf(address account) external view returns (uint256) {\n        return vestings[account].amount;\n    }\n\n    function getToken() external view returns (address) {\n        return _token;\n    }\n\n    function getRate() external view returns (uint256) {\n        return _rate;\n    }\n\n    function setRate(uint256 rate) external onlyOwner {\n        _setRate(rate);\n    }\n\n    function mergeAll() external whenNotPaused {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        _merge(balance, _token, msg.sender);\n    }\n\n    function merge(uint256 amount) external whenNotPaused {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"GenericMerge: Insufficient balance to eat\");\n\n        _merge(amount, _token, msg.sender);\n    }\n\n    function claim() external whenNotPaused whenClaimable(msg.sender) {\n        uint256 amount = vestings[msg.sender].amount;\n        vestings[msg.sender].amount = 0;\n\n        IERC20(wewe).transfer(msg.sender, amount);\n    }\n\n    // @notice Fund this contract with wewe token\n    function deposit(uint256 amount) external onlyOwner {\n        _deposit(amount);\n    }\n}\n"
      },
      "contracts/core/merge/MergeFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IMergeV2.sol\";\nimport {MergeWithMarket} from \"./MergeWithMarket.sol\";\nimport {GenericMerge} from \"./GenericMerge.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MergeFactory is Ownable {\n\n    enum MergeType {\n        Generic,\n        WithMarket\n    }\n\n    address public constant wewe = 0x6b9bb36519538e0C073894E964E90172E1c0B41F;\n    address[] public tokens;\n    // token => merge\n    mapping(address => address) public merges;\n    mapping(address => MergeType) public mergeTypes;\n    mapping(address => bool) public allowedDeployers;\n\n    constructor() {\n        allowedDeployers[msg.sender] = true;\n    }\n\n    function getMergeCount() external view returns (uint256) {\n        return tokens.length;\n    }\n\n    function createMerge(address token, uint256 rate, uint8 vestingDuration) external onlyDeployer returns (address) {\n        require(merges[token] == address(0), \"MergeFactory: Merge already exists\");\n        address merge = address(new MergeWithMarket(token, wewe, vestingDuration));\n        IMergeV2(merge).setRate(rate);\n        _setMerge(token, merge);\n        return merge;\n    }\n\n    function createMergeWithType(address token, uint256 rate, uint8 vestingDuration, MergeType mergeType) external onlyDeployer returns (address) {\n        require(merges[token] == address(0), \"MergeFactory: Merge already exists\");\n\n        if (mergeType == MergeType.Generic) {\n            address merge = address(new GenericMerge(wewe, token, vestingDuration));\n            IMergeV2(merge).setRate(rate);\n            _setMerge(token, merge);\n            return merge;\n        }\n\n        if (mergeType == MergeType.WithMarket) {\n            address merge = address(new MergeWithMarket(token, wewe, vestingDuration));\n            IMergeV2(merge).setRate(rate);\n            _setMerge(token, merge);\n            return merge;\n        }\n\n        revert(\"MergeFactory: Invalid merge type\");\n    }\n\n    function setMerge(address merge) external onlyOwner {\n        address token = IMergeV2(merge).getToken();\n        _setMerge(token, merge);\n    }\n\n    function setMergeWithType(address merge, MergeType mergeType) external onlyOwner {\n        address token = IMergeV2(merge).getToken();\n        _setMerge(token, merge);\n        mergeTypes[token] = mergeType;\n    }\n\n    function setType(address token, MergeType mergeType) external onlyOwner {\n        mergeTypes[token] = mergeType;\n    }\n\n    function _setMerge(address token, address merge) internal {\n        require(token != address(0), \"MergeFactory: Invalid merge\");\n        require(merges[token] == address(0), \"MergeFactory: Merge already exists\");\n        tokens.push(token);\n        merges[token] = merge;\n\n        emit MergeCreated(token, merge);\n    }\n\n    function setAllowedDeployer(address deployer, bool allowed) external onlyOwner {\n        allowedDeployers[deployer] = allowed;\n    }\n\n    modifier onlyDeployer() {\n        require(allowedDeployers[msg.sender], \"MergeFactory: Not allowed to deploy\");\n        _;\n    }\n\n    event MergeCreated(address indexed token, address indexed merge);\n}\n"
      },
      "contracts/core/merge/MergeWithMarket.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IAMM.sol\";\nimport {GenericMerge} from \"./GenericMerge.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract MergeWithMarket is GenericMerge {\n    address public treasury;\n\n    constructor(address _wewe, address token, uint8 _vestingDuration) GenericMerge(_wewe, token, _vestingDuration) {}\n\n    function setTreasury(address _treasury) external onlyOwner {\n        treasury = _treasury;\n    }\n\n    function mergeAndSell(uint256 amount, IAMM amm, bytes calldata extraData) external nonReentrant {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"MergeWithMarket: Insufficient balance to eat\");\n\n        _merge(amount, _token, msg.sender);\n\n        // Approve the AMM to use the tokens now in this contract\n        IERC20(_token).approve(address(amm), amount);\n\n        // Sell the tokens, can fund the contract with the token\n        address recipient = treasury == address(0) ? address(this) : treasury;\n        amm.sell(amount, _token, recipient, extraData);\n    }\n}\n"
      },
      "contracts/interfaces/IAMM.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface IAMM {\n    function buy(uint256 amount, address token, address recipient, bytes calldata extraData) external returns (uint256);\n\n    function sell(\n        uint256 amount,\n        address token,\n        address recipient,\n        bytes calldata extraData\n    ) external returns (uint256);\n\n    function sellAndBuy(\n        uint256 amount,\n        address token,\n        address recipient,\n        bytes calldata extraData\n    ) external returns (uint256);\n\n    event Bought(uint256 amount, uint256 amountOut, address token, address indexed recipient);\n    event Sold(uint256 amount, uint256 amountOut, address token, address indexed recipient);\n}\n"
      },
      "contracts/interfaces/IMergeV2.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IMergeV2 {\n    function deposit(uint256 amount) external;\n    function getRate() external view returns (uint256);\n    function setRate(uint256 rate) external;\n    function getToken() external view returns (address);\n    function merge(uint256 amount) external;\n    function mergeAll() external;\n}\n"
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IWeweReceiver {\n    function receiveApproval(address from, uint256 amount, address token, bytes calldata extraData) external;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "viaIR": true,
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "Ownable": [
              112
            ]
          },
          "id": 113,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 113,
              "sourceUnit": 419,
              "src": "127:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nameLocations": [
                      "683:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "683:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "683:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "159:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 112,
              "linearizedBaseContracts": [
                112,
                418
              ],
              "name": "Ownable",
              "nameLocation": "672:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "713:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "697:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "732:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "769:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "753:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "800:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "784:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "752:57:0"
                  },
                  "src": "726:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "926:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "955:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "955:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "936:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "936:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "816:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "926:0:0"
                  },
                  "scope": 112,
                  "src": "912:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 30,
                    "nodeType": "Block",
                    "src": "1084:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1094:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:13:0"
                      },
                      {
                        "id": 29,
                        "nodeType": "PlaceholderStatement",
                        "src": "1117:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "981:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 31,
                  "name": "onlyOwner",
                  "nameLocation": "1072:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1081:2:0"
                  },
                  "src": "1063:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "1256:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 37,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1273:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 36,
                        "id": 38,
                        "nodeType": "Return",
                        "src": "1266:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 40,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1210:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1215:2:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1247:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:9:0"
                  },
                  "scope": 112,
                  "src": "1201:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1404:85:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 45,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "1422:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1422:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 47,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "1433:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1433:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1422:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1447:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 44,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1414:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:68:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1368:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1379:2:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:0:0"
                  },
                  "scope": 112,
                  "src": "1359:130:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "1878:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1915:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 62,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1907:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 61,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1907:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1907:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1888:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66,
                        "nodeType": "ExpressionStatement",
                        "src": "1888:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1495:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 68,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 58,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 57,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1868:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1868:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1868:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1833:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1850:2:0"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1878:0:0"
                  },
                  "scope": 112,
                  "src": "1824:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "2144:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "2162:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2182:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2174:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 78,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2174:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2174:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2162:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2186:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 76,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2154:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "2154:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2256:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2237:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2237:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "2237:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "1931:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 91,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 74,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 73,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2134:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2134:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2134:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2083:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2109:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "2101:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2101:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2100:18:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2144:0:0"
                  },
                  "scope": 112,
                  "src": "2074:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2489:124:0",
                    "statements": [
                      {
                        "assignments": [
                          98
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2507:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 110,
                            "src": "2499:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 97,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2499:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "id": 99,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2518:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2499:25:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2534:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 102,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2543:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2534:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2534:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 106,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "2587:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 107,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2597:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 105,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2566:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2566:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "EmitStatement",
                        "src": "2561:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 92,
                    "nodeType": "StructuredDocumentation",
                    "src": "2278:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2435:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2462:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "2454:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2454:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2453:18:0"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:0:0"
                  },
                  "scope": 112,
                  "src": "2426:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 113,
              "src": "654:1961:0",
              "usedErrors": []
            }
          ],
          "src": "102:2514:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "Pausable": [
              220
            ]
          },
          "id": 221,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 114,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 115,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 221,
              "sourceUnit": 419,
              "src": "130:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 117,
                    "name": "Context",
                    "nameLocations": [
                      "632:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "632:7:1"
                  },
                  "id": 118,
                  "nodeType": "InheritanceSpecifier",
                  "src": "632:7:1"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 116,
                "nodeType": "StructuredDocumentation",
                "src": "162:439:1",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 220,
              "linearizedBaseContracts": [
                220,
                418
              ],
              "name": "Pausable",
              "nameLocation": "620:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "646:73:1",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 123,
                  "name": "Paused",
                  "nameLocation": "730:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "745:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "737:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:17:1"
                  },
                  "src": "724:30:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "760:70:1",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 128,
                  "name": "Unpaused",
                  "nameLocation": "841:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "858:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "850:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:17:1"
                  },
                  "src": "835:32:1"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "886:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "873:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "986:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 134,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "996:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1006:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "996:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 137,
                        "nodeType": "ExpressionStatement",
                        "src": "996:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "900:67:1",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 139,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "983:2:1"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:0:1"
                  },
                  "scope": 220,
                  "src": "972:46:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1229:47:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1239:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:19:1"
                      },
                      {
                        "id": 145,
                        "nodeType": "PlaceholderStatement",
                        "src": "1268:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 140,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:175:1",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 147,
                  "name": "whenNotPaused",
                  "nameLocation": "1213:13:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1226:2:1"
                  },
                  "src": "1204:72:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "1476:44:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 150,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "1486:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:16:1"
                      },
                      {
                        "id": 153,
                        "nodeType": "PlaceholderStatement",
                        "src": "1512:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "1282:167:1",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 155,
                  "name": "whenPaused",
                  "nameLocation": "1463:10:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1473:2:1"
                  },
                  "src": "1454:66:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "1668:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 161,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "1685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 160,
                        "id": 162,
                        "nodeType": "Return",
                        "src": "1678:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 156,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:84:1",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1624:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1630:2:1"
                  },
                  "returnParameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "1662:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1662:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1661:6:1"
                  },
                  "scope": 220,
                  "src": "1615:84:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "1818:55:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1836:9:1",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 169,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "1837:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1837:8:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1847:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 168,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1828:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "1828:38:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "1705:57:1",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1776:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1818:0:1"
                  },
                  "scope": 220,
                  "src": "1767:106:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "1993:58:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 181,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2011:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2011:8:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2021:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 180,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2003:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "2003:41:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:61:1",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 187,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "1954:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1968:2:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1993:0:1"
                  },
                  "scope": 220,
                  "src": "1945:106:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "2235:66:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 193,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2245:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2255:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2245:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:14:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 198,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2281:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2281:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 197,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "EmitStatement",
                        "src": "2269:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 188,
                    "nodeType": "StructuredDocumentation",
                    "src": "2057:124:1",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 191,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 190,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2221:13:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2221:13:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2221:13:1"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2195:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2201:2:1"
                  },
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2235:0:1"
                  },
                  "scope": 220,
                  "src": "2186:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "2481:69:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 209,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2491:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2501:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2491:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "2491:15:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 214,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2530:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2530:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 213,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "2521:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2521:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "EmitStatement",
                        "src": "2516:27:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "2307:121:1",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 207,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 206,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2470:10:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 155,
                        "src": "2470:10:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2470:10:1"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2442:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2450:2:1"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:0:1"
                  },
                  "scope": 220,
                  "src": "2433:117:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 221,
              "src": "602:1950:1",
              "usedErrors": []
            }
          ],
          "src": "105:2448:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              285
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 222,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 223,
                "nodeType": "StructuredDocumentation",
                "src": "137:750:2",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "906:15:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 226,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1701:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1676:41:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 229,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1748:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1723:37:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1783:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1767:23:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1811:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 234,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "1821:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 235,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "1831:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1821:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:22:2"
                      }
                    ]
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1808:2:2"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1811:0:2"
                  },
                  "scope": 285,
                  "src": "1797:53:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 249,
                    "nodeType": "Block",
                    "src": "2251:79:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 242,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "2261:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:21:2"
                      },
                      {
                        "id": 245,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 246,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2303:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2303:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:20:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "1856:366:2",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 250,
                  "name": "nonReentrant",
                  "nameLocation": "2236:12:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2248:2:2"
                  },
                  "src": "2227:103:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "2375:248:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 254,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "2468:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 255,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "2479:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2468:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2489:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2460:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:63:2"
                      },
                      {
                        "expression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 260,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2598:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 261,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2608:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2598:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "2598:18:2"
                      }
                    ]
                  },
                  "id": 265,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2345:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2364:2:2"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:2"
                  },
                  "scope": 285,
                  "src": "2336:287:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "2667:171:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 268,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2809:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 269,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "2819:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2809:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "2809:22:2"
                      }
                    ]
                  },
                  "id": 273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2638:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2656:2:2"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2667:0:2"
                  },
                  "scope": 285,
                  "src": "2629:209:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3081:43:2",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 279,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "3098:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 280,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3109:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3098:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 278,
                        "id": 282,
                        "nodeType": "Return",
                        "src": "3091:26:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "2844:168:2",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3026:23:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3049:2:2"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "3075:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3075:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3074:6:2"
                  },
                  "scope": 285,
                  "src": "3017:107:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 286,
              "src": "888:2238:2",
              "usedErrors": []
            }
          ],
          "src": "112:3015:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ]
          },
          "id": 364,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 363,
              "linearizedBaseContracts": [
                363
              ],
              "name": "IERC20",
              "nameLocation": "212:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 297,
                  "name": "Transfer",
                  "nameLocation": "394:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "403:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 293,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "425:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "445:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:3"
                  },
                  "src": "388:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 298,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 306,
                  "name": "Approval",
                  "nameLocation": "625:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "634:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 302,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "657:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 304,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "682:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:3"
                  },
                  "src": "619:78:3"
                },
                {
                  "documentation": {
                    "id": 307,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:3",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 312,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:3"
                  },
                  "returnParameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "820:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:3"
                  },
                  "scope": 363,
                  "src": "774:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:3",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "931:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:3"
                  },
                  "returnParameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "971:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:3"
                  },
                  "scope": 363,
                  "src": "912:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:3",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1211:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1223:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:3"
                  },
                  "returnParameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1257:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:3"
                  },
                  "scope": 363,
                  "src": "1193:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 331,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1557:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1572:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:3"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:3"
                  },
                  "scope": 363,
                  "src": "1538:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:3",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2291:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2308:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:3"
                  },
                  "returnParameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2342:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:3"
                  },
                  "scope": 363,
                  "src": "2274:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 351,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:3",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 362,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2676:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2668:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 355,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2690:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2682:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2702:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2694:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2694:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:42:3"
                  },
                  "returnParameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2728:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2727:6:3"
                  },
                  "scope": 363,
                  "src": "2646:88:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 364,
              "src": "202:2534:3",
              "usedErrors": []
            }
          ],
          "src": "106:2631:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ]
          },
          "id": 389,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 366,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 389,
              "sourceUnit": 364,
              "src": "135:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 368,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "305:6:4"
                  },
                  "id": 369,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 367,
                "nodeType": "StructuredDocumentation",
                "src": "160:116:4",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
              },
              "fullyImplemented": false,
              "id": 388,
              "linearizedBaseContracts": [
                388,
                363
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:4"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "416:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:4"
                  },
                  "scope": 388,
                  "src": "377:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 376,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:4"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "539:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:4"
                  },
                  "scope": 388,
                  "src": "498:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 387,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:4"
                  },
                  "returnParameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "673:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:4"
                  },
                  "scope": 388,
                  "src": "630:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 389,
              "src": "277:405:4",
              "usedErrors": []
            }
          ],
          "src": "110:573:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              418
            ]
          },
          "id": 419,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 390,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 391,
                "nodeType": "StructuredDocumentation",
                "src": "126:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 418,
              "linearizedBaseContracts": [
                418
              ],
              "name": "Context",
              "nameLocation": "641:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "717:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "734:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "738:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "734:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 395,
                        "id": 398,
                        "nodeType": "Return",
                        "src": "727:17:5"
                      }
                    ]
                  },
                  "id": 400,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "664:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "674:2:5"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "708:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "707:9:5"
                  },
                  "scope": 418,
                  "src": "655:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "824:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 405,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "841:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "845:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "841:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 404,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "834:15:5"
                      }
                    ]
                  },
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "766:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "774:2:5"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "808:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:16:5"
                  },
                  "scope": 418,
                  "src": "757:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "934:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "951:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 413,
                        "id": 415,
                        "nodeType": "Return",
                        "src": "944:8:5"
                      }
                    ]
                  },
                  "id": 417,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "871:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "891:2:5"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "925:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "924:9:5"
                  },
                  "scope": 418,
                  "src": "862:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 419,
              "src": "623:338:5",
              "usedErrors": []
            }
          ],
          "src": "101:861:5"
        },
        "id": 5
      },
      "contracts/core/merge/BBroMerge.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/BBroMerge.sol",
          "exportedSymbols": {
            "BBroMerge": [
              543
            ],
            "Eater": [
              954
            ],
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ],
            "IMergeV2": [
              1714
            ],
            "IWeweReceiver": [
              1728
            ]
          },
          "id": 544,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 420,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:6"
            },
            {
              "absolutePath": "contracts/interfaces/IMergeV2.sol",
              "file": "../../interfaces/IMergeV2.sol",
              "id": 421,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 544,
              "sourceUnit": 1715,
              "src": "59:39:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
              "file": "../../interfaces/IWeweReceiver.sol",
              "id": 422,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 544,
              "sourceUnit": 1729,
              "src": "99:44:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/Eater.sol",
              "file": "./Eater.sol",
              "id": 424,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 544,
              "sourceUnit": 955,
              "src": "144:34:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 423,
                    "name": "Eater",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 954,
                    "src": "152:5:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 426,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 544,
              "sourceUnit": 389,
              "src": "179:97:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 425,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 388,
                    "src": "187:14:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 428,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 544,
              "sourceUnit": 364,
              "src": "277:70:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 427,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "285:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 429,
                    "name": "Eater",
                    "nameLocations": [
                      "371:5:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 954,
                    "src": "371:5:6"
                  },
                  "id": 430,
                  "nodeType": "InheritanceSpecifier",
                  "src": "371:5:6"
                },
                {
                  "baseName": {
                    "id": 431,
                    "name": "IMergeV2",
                    "nameLocations": [
                      "378:8:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1714,
                    "src": "378:8:6"
                  },
                  "id": 432,
                  "nodeType": "InheritanceSpecifier",
                  "src": "378:8:6"
                }
              ],
              "canonicalName": "BBroMerge",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 543,
              "linearizedBaseContracts": [
                543,
                1714,
                954,
                112,
                220,
                418,
                285,
                1728
              ],
              "name": "BBroMerge",
              "nameLocation": "358:9:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1705
                  ],
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "445:30:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 437,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "462:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 436,
                        "id": 438,
                        "nodeType": "Return",
                        "src": "455:13:6"
                      }
                    ]
                  },
                  "functionSelector": "21df0da7",
                  "id": 440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "402:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 433,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "410:2:6"
                  },
                  "returnParameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "436:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "435:9:6"
                  },
                  "scope": 543,
                  "src": "393:82:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 458,
                    "nodeType": "Block",
                    "src": "495:167:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 443,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "505:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "513:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "505:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "505:11:6"
                      },
                      {
                        "expression": {
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 447,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "526:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "307864453734654231344642336636463732333635353038313939333430363541636339383930363232",
                            "id": 448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "535:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xdE74eB14FB3f6F7236550819934065Acc9890622"
                          },
                          "src": "526:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "526:51:6"
                      },
                      {
                        "expression": {
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 451,
                            "name": "wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "587:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "307836623962623336353139353338653043303733383934453936344539303137324531633042343146",
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "594:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x6b9bb36519538e0C073894E964E90172E1c0B41F"
                          },
                          "src": "587:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "587:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 455,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "647:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "647:8:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 457,
                        "nodeType": "ExpressionStatement",
                        "src": "647:8:6"
                      }
                    ]
                  },
                  "id": 459,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "492:2:6"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "495:0:6"
                  },
                  "scope": 543,
                  "src": "481:181:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1695
                  ],
                  "body": {
                    "id": 466,
                    "nodeType": "Block",
                    "src": "719:29:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 464,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "736:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 463,
                        "id": 465,
                        "nodeType": "Return",
                        "src": "729:12:6"
                      }
                    ]
                  },
                  "functionSelector": "679aefce",
                  "id": 467,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "677:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "684:2:6"
                  },
                  "returnParameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 462,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "710:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 461,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "710:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "709:9:6"
                  },
                  "scope": 543,
                  "src": "668:80:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1700
                  ],
                  "body": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "804:31:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 475,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "823:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 474,
                            "name": "_setRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "814:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "814:14:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 477,
                        "nodeType": "ExpressionStatement",
                        "src": "814:14:6"
                      }
                    ]
                  },
                  "functionSelector": "34fcf437",
                  "id": 479,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 472,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 471,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "794:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "794:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "794:9:6"
                    }
                  ],
                  "name": "setRate",
                  "nameLocation": "763:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 469,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "779:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "771:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "771:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "770:14:6"
                  },
                  "returnParameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "804:0:6"
                  },
                  "scope": 543,
                  "src": "754:81:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1713
                  ],
                  "body": {
                    "id": 499,
                    "nodeType": "Block",
                    "src": "870:116:6",
                    "statements": [
                      {
                        "assignments": [
                          483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 483,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "888:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 499,
                            "src": "880:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "880:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 491,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 488,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "923:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "927:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "923:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 485,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "905:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 484,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "898:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "898:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "913:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "898:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "898:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "880:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 493,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "951:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 494,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "960:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 495,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "968:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "972:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "968:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 492,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "944:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "944:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 498,
                        "nodeType": "ExpressionStatement",
                        "src": "944:35:6"
                      }
                    ]
                  },
                  "functionSelector": "ea9f2417",
                  "id": 500,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "850:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "858:2:6"
                  },
                  "returnParameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "870:0:6"
                  },
                  "scope": 543,
                  "src": "841:145:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1710
                  ],
                  "body": {
                    "id": 529,
                    "nodeType": "Block",
                    "src": "1032:187:6",
                    "statements": [
                      {
                        "assignments": [
                          506
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 506,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1050:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 529,
                            "src": "1042:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 505,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1042:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 514,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 511,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1085:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1089:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1085:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 508,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "1067:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 507,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1060:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1060:14:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1075:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1060:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1060:36:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1042:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 516,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "1114:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 517,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "1125:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1114:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4242726f4d657267653a20496e73756666696369656e742062616c616e6365",
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1133:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_56e8862bcdc7674b07b95aacf9dcd229fc629819deae13c756f396d891f04177",
                                "typeString": "literal_string \"BBroMerge: Insufficient balance\""
                              },
                              "value": "BBroMerge: Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_56e8862bcdc7674b07b95aacf9dcd229fc629819deae13c756f396d891f04177",
                                "typeString": "literal_string \"BBroMerge: Insufficient balance\""
                              }
                            ],
                            "id": 515,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1106:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1106:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "1106:61:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "1185:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 524,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1193:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 525,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1201:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1205:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1201:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 522,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1178:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1178:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 528,
                        "nodeType": "ExpressionStatement",
                        "src": "1178:34:6"
                      }
                    ]
                  },
                  "functionSelector": "24a47aeb",
                  "id": 530,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "1001:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1015:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "1007:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1007:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1006:16:6"
                  },
                  "returnParameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1032:0:6"
                  },
                  "scope": 543,
                  "src": "992:227:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1690
                  ],
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "1327:33:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 538,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "1346:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 537,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "1337:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1337:16:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "1337:16:6"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 535,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 534,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1317:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1317:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1317:9:6"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1284:7:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1300:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "1292:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1292:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1291:16:6"
                  },
                  "returnParameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1327:0:6"
                  },
                  "scope": 543,
                  "src": "1275:85:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 544,
              "src": "349:1013:6",
              "usedErrors": []
            }
          ],
          "src": "33:1330:6"
        },
        "id": 6
      },
      "contracts/core/merge/BroMerge.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/BroMerge.sol",
          "exportedSymbols": {
            "BroMerge": [
              668
            ],
            "Eater": [
              954
            ],
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ],
            "IMergeV2": [
              1714
            ],
            "IWeweReceiver": [
              1728
            ]
          },
          "id": 669,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 545,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:7"
            },
            {
              "absolutePath": "contracts/interfaces/IMergeV2.sol",
              "file": "../../interfaces/IMergeV2.sol",
              "id": 546,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 1715,
              "src": "59:39:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
              "file": "../../interfaces/IWeweReceiver.sol",
              "id": 547,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 1729,
              "src": "99:44:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/Eater.sol",
              "file": "./Eater.sol",
              "id": 549,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 955,
              "src": "144:34:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 548,
                    "name": "Eater",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 954,
                    "src": "152:5:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 551,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 389,
              "src": "179:97:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 550,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 388,
                    "src": "187:14:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 553,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 364,
              "src": "277:70:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 552,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "285:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 554,
                    "name": "Eater",
                    "nameLocations": [
                      "370:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 954,
                    "src": "370:5:7"
                  },
                  "id": 555,
                  "nodeType": "InheritanceSpecifier",
                  "src": "370:5:7"
                },
                {
                  "baseName": {
                    "id": 556,
                    "name": "IMergeV2",
                    "nameLocations": [
                      "377:8:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1714,
                    "src": "377:8:7"
                  },
                  "id": 557,
                  "nodeType": "InheritanceSpecifier",
                  "src": "377:8:7"
                }
              ],
              "canonicalName": "BroMerge",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 668,
              "linearizedBaseContracts": [
                668,
                1714,
                954,
                112,
                220,
                418,
                285,
                1728
              ],
              "name": "BroMerge",
              "nameLocation": "358:8:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1705
                  ],
                  "body": {
                    "id": 564,
                    "nodeType": "Block",
                    "src": "444:30:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 562,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "461:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 561,
                        "id": 563,
                        "nodeType": "Return",
                        "src": "454:13:7"
                      }
                    ]
                  },
                  "functionSelector": "21df0da7",
                  "id": 565,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "401:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "409:2:7"
                  },
                  "returnParameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "435:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "435:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "434:9:7"
                  },
                  "scope": 668,
                  "src": "392:82:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 583,
                    "nodeType": "Block",
                    "src": "494:167:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 568,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "504:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "512:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "504:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 571,
                        "nodeType": "ExpressionStatement",
                        "src": "504:11:7"
                      },
                      {
                        "expression": {
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 572,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "525:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "307839333735303134304332456345413237613533633665643330333830383239363037383135413331",
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "534:42:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x93750140C2EcEA27a53c6ed30380829607815A31"
                          },
                          "src": "525:51:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "525:51:7"
                      },
                      {
                        "expression": {
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 576,
                            "name": "wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "586:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "307836623962623336353139353338653043303733383934453936344539303137324531633042343146",
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "593:42:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x6b9bb36519538e0C073894E964E90172E1c0B41F"
                          },
                          "src": "586:49:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "586:49:7"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 580,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "646:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "646:8:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 582,
                        "nodeType": "ExpressionStatement",
                        "src": "646:8:7"
                      }
                    ]
                  },
                  "id": 584,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "491:2:7"
                  },
                  "returnParameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "494:0:7"
                  },
                  "scope": 668,
                  "src": "480:181:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1695
                  ],
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "718:29:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 589,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "735:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 588,
                        "id": 590,
                        "nodeType": "Return",
                        "src": "728:12:7"
                      }
                    ]
                  },
                  "functionSelector": "679aefce",
                  "id": 592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "676:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "683:2:7"
                  },
                  "returnParameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 668,
                  "src": "667:80:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1700
                  ],
                  "body": {
                    "id": 603,
                    "nodeType": "Block",
                    "src": "803:31:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "822:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "_setRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "813:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "813:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "813:14:7"
                      }
                    ]
                  },
                  "functionSelector": "34fcf437",
                  "id": 604,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 597,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 596,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "793:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "793:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "793:9:7"
                    }
                  ],
                  "name": "setRate",
                  "nameLocation": "762:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "778:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 604,
                        "src": "770:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "770:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "769:14:7"
                  },
                  "returnParameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "803:0:7"
                  },
                  "scope": 668,
                  "src": "753:81:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1713
                  ],
                  "body": {
                    "id": 624,
                    "nodeType": "Block",
                    "src": "869:116:7",
                    "statements": [
                      {
                        "assignments": [
                          608
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 608,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "887:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 624,
                            "src": "879:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 607,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "879:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 616,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 613,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "922:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "926:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "922:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 610,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "904:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 609,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "897:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "897:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "912:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "897:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "897:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "879:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 618,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "950:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 619,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "959:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 620,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "967:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "971:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "967:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 617,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "943:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "943:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 623,
                        "nodeType": "ExpressionStatement",
                        "src": "943:35:7"
                      }
                    ]
                  },
                  "functionSelector": "ea9f2417",
                  "id": 625,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "849:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "857:2:7"
                  },
                  "returnParameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "869:0:7"
                  },
                  "scope": 668,
                  "src": "840:145:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1710
                  ],
                  "body": {
                    "id": 654,
                    "nodeType": "Block",
                    "src": "1031:186:7",
                    "statements": [
                      {
                        "assignments": [
                          631
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 631,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1049:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 654,
                            "src": "1041:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 630,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1041:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 639,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 636,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1084:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1088:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1084:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 633,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "1066:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 632,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1059:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1059:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1074:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1059:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1059:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1041:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 641,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "1113:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 642,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "1124:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1113:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42726f4d657267653a20496e73756666696369656e742062616c616e6365",
                              "id": 644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1132:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_372d105a34ce4f58f4592d7e62facaf46074249ee8a6c164445c02a0e003f670",
                                "typeString": "literal_string \"BroMerge: Insufficient balance\""
                              },
                              "value": "BroMerge: Insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_372d105a34ce4f58f4592d7e62facaf46074249ee8a6c164445c02a0e003f670",
                                "typeString": "literal_string \"BroMerge: Insufficient balance\""
                              }
                            ],
                            "id": 640,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1105:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1105:60:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 646,
                        "nodeType": "ExpressionStatement",
                        "src": "1105:60:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 648,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "1183:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 649,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1191:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 650,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1199:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1203:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1199:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 647,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1176:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1176:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 653,
                        "nodeType": "ExpressionStatement",
                        "src": "1176:34:7"
                      }
                    ]
                  },
                  "functionSelector": "24a47aeb",
                  "id": 655,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "1000:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1014:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "1006:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1006:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1005:16:7"
                  },
                  "returnParameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1031:0:7"
                  },
                  "scope": 668,
                  "src": "991:226:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1690
                  ],
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "1325:33:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "1344:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "1335:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1335:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "1335:16:7"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 667,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 660,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 659,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1315:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1315:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1315:9:7"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1282:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1298:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 667,
                        "src": "1290:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1290:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1289:16:7"
                  },
                  "returnParameters": {
                    "id": 661,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1325:0:7"
                  },
                  "scope": 668,
                  "src": "1273:85:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 669,
              "src": "349:1011:7",
              "usedErrors": []
            }
          ],
          "src": "33:1328:7"
        },
        "id": 7
      },
      "contracts/core/merge/Eater.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/Eater.sol",
          "exportedSymbols": {
            "Eater": [
              954
            ],
            "IERC20": [
              363
            ],
            "IWeweReceiver": [
              1728
            ],
            "Ownable": [
              112
            ],
            "Pausable": [
              220
            ],
            "ReentrancyGuard": [
              285
            ],
            "Vesting": [
              684
            ]
          },
          "id": 955,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 670,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 672,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 955,
              "sourceUnit": 364,
              "src": "59:70:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 671,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "67:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 674,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 955,
              "sourceUnit": 113,
              "src": "130:67:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 673,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 112,
                    "src": "138:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 676,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 955,
              "sourceUnit": 221,
              "src": "198:71:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 675,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "206:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 678,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 955,
              "sourceUnit": 286,
              "src": "270:85:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 677,
                    "name": "ReentrancyGuard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 285,
                    "src": "278:15:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
              "file": "../../interfaces/IWeweReceiver.sol",
              "id": 679,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 955,
              "sourceUnit": 1729,
              "src": "356:44:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "canonicalName": "Vesting",
              "id": 684,
              "members": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "431:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "423:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "end",
                  "nameLocation": "451:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "443:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Vesting",
              "nameLocation": "409:7:8",
              "nodeType": "StructDefinition",
              "scope": 955,
              "src": "402:55:8",
              "visibility": "public"
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 685,
                    "name": "IWeweReceiver",
                    "nameLocations": [
                      "486:13:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1728,
                    "src": "486:13:8"
                  },
                  "id": 686,
                  "nodeType": "InheritanceSpecifier",
                  "src": "486:13:8"
                },
                {
                  "baseName": {
                    "id": 687,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "501:15:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "501:15:8"
                  },
                  "id": 688,
                  "nodeType": "InheritanceSpecifier",
                  "src": "501:15:8"
                },
                {
                  "baseName": {
                    "id": 689,
                    "name": "Pausable",
                    "nameLocations": [
                      "518:8:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 220,
                    "src": "518:8:8"
                  },
                  "id": 690,
                  "nodeType": "InheritanceSpecifier",
                  "src": "518:8:8"
                },
                {
                  "baseName": {
                    "id": 691,
                    "name": "Ownable",
                    "nameLocations": [
                      "528:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "528:7:8"
                  },
                  "id": 692,
                  "nodeType": "InheritanceSpecifier",
                  "src": "528:7:8"
                }
              ],
              "canonicalName": "Eater",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 954,
              "linearizedBaseContracts": [
                954,
                112,
                220,
                418,
                285,
                1728
              ],
              "name": "Eater",
              "nameLocation": "477:5:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "559:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "542:22:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "587:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "570:23:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "e1f26f22",
                  "id": 698,
                  "mutability": "mutable",
                  "name": "wewe",
                  "nameLocation": "614:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "599:19:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "vestingDuration",
                  "nameLocation": "640:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "625:30:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "daf49863",
                  "id": 705,
                  "mutability": "mutable",
                  "name": "vestings",
                  "nameLocation": "696:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 954,
                  "src": "661:43:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                    "typeString": "mapping(address => struct Vesting)"
                  },
                  "typeName": {
                    "id": 704,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 701,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "669:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "661:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                      "typeString": "mapping(address => struct Vesting)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 703,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 702,
                        "name": "Vesting",
                        "nameLocations": [
                          "680:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 684,
                        "src": "680:7:8"
                      },
                      "referencedDeclaration": 684,
                      "src": "680:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vesting_$684_storage_ptr",
                        "typeString": "struct Vesting"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 730,
                    "nodeType": "Block",
                    "src": "752:174:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 711,
                                "name": "rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "770:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "777:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "770:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a2052617465206d7573742062652067726561746572207468616e2030",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "780:36:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f4281e2a04a1e1357e47cd4c75fcaf306a2360a0f45e2665764b2a1efc4de50c",
                                "typeString": "literal_string \"Eater: Rate must be greater than 0\""
                              },
                              "value": "Eater: Rate must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f4281e2a04a1e1357e47cd4c75fcaf306a2360a0f45e2665764b2a1efc4de50c",
                                "typeString": "literal_string \"Eater: Rate must be greater than 0\""
                              }
                            ],
                            "id": 710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "762:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "762:55:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "762:55:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "832:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 718,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "841:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "832:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 729,
                        "nodeType": "IfStatement",
                        "src": "828:92:8",
                        "trueBody": {
                          "id": 728,
                          "nodeType": "Block",
                          "src": "847:73:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 720,
                                  "name": "_rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 694,
                                  "src": "861:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 721,
                                  "name": "rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "869:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "861:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 723,
                              "nodeType": "ExpressionStatement",
                              "src": "861:12:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 725,
                                    "name": "rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 707,
                                    "src": "904:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 724,
                                  "name": "RateChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 953,
                                  "src": "892:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "892:17:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 727,
                              "nodeType": "EmitStatement",
                              "src": "887:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 731,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRate",
                  "nameLocation": "720:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "737:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "729:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "729:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "728:14:8"
                  },
                  "returnParameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "752:0:8"
                  },
                  "scope": 954,
                  "src": "711:215:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 819,
                    "nodeType": "Block",
                    "src": "1002:748:8",
                    "statements": [
                      {
                        "assignments": [
                          741
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 741,
                            "mutability": "mutable",
                            "name": "vestedAmount",
                            "nameLocation": "1020:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 819,
                            "src": "1012:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 740,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1012:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 746,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 742,
                              "name": "vestings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 705,
                              "src": "1035:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                "typeString": "mapping(address => struct Vesting storage ref)"
                              }
                            },
                            "id": 744,
                            "indexExpression": {
                              "id": 743,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "1044:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1035:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vesting_$684_storage",
                              "typeString": "struct Vesting storage ref"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1050:6:8",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 681,
                          "src": "1035:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1012:44:8"
                      },
                      {
                        "assignments": [
                          748
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 748,
                            "mutability": "mutable",
                            "name": "weweToTransfer",
                            "nameLocation": "1074:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 819,
                            "src": "1066:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1066:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 757,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 749,
                            "name": "vestedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "1091:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 752,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 750,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 733,
                                    "src": "1107:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 751,
                                    "name": "_rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 694,
                                    "src": "1116:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1107:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 753,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1106:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1125:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "1106:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1091:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1066:62:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 759,
                                "name": "weweToTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 748,
                                "src": "1159:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 766,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1208:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Eater_$954",
                                          "typeString": "contract Eater"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Eater_$954",
                                          "typeString": "contract Eater"
                                        }
                                      ],
                                      "id": 765,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1200:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 764,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1200:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 767,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1200:13:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 761,
                                        "name": "wewe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 698,
                                        "src": "1184:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 760,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "1177:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1177:12:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$363",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 763,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1190:9:8",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 320,
                                  "src": "1177:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1177:37:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1159:55:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a20496e73756666696369656e7420746f6b656e2062616c616e636520746f207472616e73666572",
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1228:47:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6fff524f507ecf61abe1fdafa351d8d0f5ecb04310282e4d66a638fb704e9f7",
                                "typeString": "literal_string \"Eater: Insufficient token balance to transfer\""
                              },
                              "value": "Eater: Insufficient token balance to transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a6fff524f507ecf61abe1fdafa351d8d0f5ecb04310282e4d66a638fb704e9f7",
                                "typeString": "literal_string \"Eater: Insufficient token balance to transfer\""
                              }
                            ],
                            "id": 758,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1138:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1138:147:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 772,
                        "nodeType": "ExpressionStatement",
                        "src": "1138:147:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 777,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "1359:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 780,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1373:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$954",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$954",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1365:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 778,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1365:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1365:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 782,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "1380:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 774,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 735,
                                  "src": "1339:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 773,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1332:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1332:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1346:12:8",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "1332:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1332:55:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 784,
                        "nodeType": "ExpressionStatement",
                        "src": "1332:55:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 785,
                            "name": "vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 700,
                            "src": "1436:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1455:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1436:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 812,
                          "nodeType": "Block",
                          "src": "1594:114:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 808,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 737,
                                    "src": "1676:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 809,
                                    "name": "weweToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 748,
                                    "src": "1682:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 805,
                                        "name": "wewe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 698,
                                        "src": "1661:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 804,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "1654:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1654:12:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$363",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1667:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 330,
                                  "src": "1654:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1654:43:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 811,
                              "nodeType": "ExpressionStatement",
                              "src": "1654:43:8"
                            }
                          ]
                        },
                        "id": 813,
                        "nodeType": "IfStatement",
                        "src": "1432:276:8",
                        "trueBody": {
                          "id": 803,
                          "nodeType": "Block",
                          "src": "1458:130:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 788,
                                    "name": "vestings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 705,
                                    "src": "1472:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                      "typeString": "mapping(address => struct Vesting storage ref)"
                                    }
                                  },
                                  "id": 791,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 789,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1481:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 790,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1485:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1481:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1472:20:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vesting_$684_storage",
                                    "typeString": "struct Vesting storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 793,
                                      "name": "weweToTransfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 748,
                                      "src": "1512:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 799,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 794,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "1533:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1539:9:8",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "1533:15:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        },
                                        "id": 798,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 796,
                                          "name": "vestingDuration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 700,
                                          "src": "1551:15:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 797,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1569:6:8",
                                          "subdenomination": "days",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_86400_by_1",
                                            "typeString": "int_const 86400"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1551:24:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      },
                                      "src": "1533:42:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 792,
                                    "name": "Vesting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 684,
                                    "src": "1495:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Vesting_$684_storage_ptr_$",
                                      "typeString": "type(struct Vesting storage pointer)"
                                    }
                                  },
                                  "id": 800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [
                                    "1504:6:8",
                                    "1528:3:8"
                                  ],
                                  "names": [
                                    "amount",
                                    "end"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "1495:82:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vesting_$684_memory_ptr",
                                    "typeString": "struct Vesting memory"
                                  }
                                },
                                "src": "1472:105:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vesting_$684_storage",
                                  "typeString": "struct Vesting storage ref"
                                }
                              },
                              "id": 802,
                              "nodeType": "ExpressionStatement",
                              "src": "1472:105:8"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 815,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "1730:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 816,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "1738:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 814,
                            "name": "Merged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "1723:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1723:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 818,
                        "nodeType": "EmitStatement",
                        "src": "1718:25:8"
                      }
                    ]
                  },
                  "id": 820,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_merge",
                  "nameLocation": "941:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 733,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "956:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "948:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "948:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "972:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "964:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "964:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 737,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "987:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "979:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "979:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "947:45:8"
                  },
                  "returnParameters": {
                    "id": 739,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1002:0:8"
                  },
                  "scope": 954,
                  "src": "932:818:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 853,
                    "nodeType": "Block",
                    "src": "1792:181:8",
                    "statements": [
                      {
                        "assignments": [
                          826
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 826,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1810:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 853,
                            "src": "1802:15:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 825,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1802:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 836,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 833,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1851:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$954",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$954",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1843:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 831,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1843:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1843:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 828,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 698,
                                  "src": "1827:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 827,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1820:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1820:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1833:9:8",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1820:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1820:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1802:55:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 838,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 826,
                                "src": "1875:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1885:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1875:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a204e6f2062616c616e636520746f207377656570",
                              "id": 841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1888:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e72d135eac75cef95ab73191830654ce1661cc9d6bb69b1b577638911a2b17fd",
                                "typeString": "literal_string \"Eater: No balance to sweep\""
                              },
                              "value": "Eater: No balance to sweep"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e72d135eac75cef95ab73191830654ce1661cc9d6bb69b1b577638911a2b17fd",
                                "typeString": "literal_string \"Eater: No balance to sweep\""
                              }
                            ],
                            "id": 837,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1867:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1867:50:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 843,
                        "nodeType": "ExpressionStatement",
                        "src": "1867:50:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 848,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1949:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1949:7:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 850,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 826,
                              "src": "1958:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 845,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 698,
                                  "src": "1934:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 844,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1927:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1927:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1940:8:8",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "1927:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1927:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 852,
                        "nodeType": "ExpressionStatement",
                        "src": "1927:39:8"
                      }
                    ]
                  },
                  "functionSelector": "35faa416",
                  "id": 854,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 823,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 822,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1782:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1782:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1782:9:8"
                    }
                  ],
                  "name": "sweep",
                  "nameLocation": "1765:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 821,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1770:2:8"
                  },
                  "returnParameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:0:8"
                  },
                  "scope": 954,
                  "src": "1756:217:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1727
                  ],
                  "body": {
                    "id": 886,
                    "nodeType": "Block",
                    "src": "2184:257:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 871,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 696,
                                "src": "2269:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2287:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2279:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 872,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2279:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2279:10:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2269:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a20546f6b656e2061646472657373206e6f7420736574",
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2291:30:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d0ae26a61eab49e7e2cbf4ee5cc2d8e29dfc0b994dc1964620d07b67c9e73a2",
                                "typeString": "literal_string \"Eater: Token address not set\""
                              },
                              "value": "Eater: Token address not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d0ae26a61eab49e7e2cbf4ee5cc2d8e29dfc0b994dc1964620d07b67c9e73a2",
                                "typeString": "literal_string \"Eater: Token address not set\""
                              }
                            ],
                            "id": 870,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2261:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:61:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 879,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:61:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 881,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 859,
                              "src": "2413:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 882,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "2421:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 883,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 857,
                              "src": "2429:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 880,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "2406:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2406:28:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 885,
                        "nodeType": "ExpressionStatement",
                        "src": "2406:28:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1979:46:8",
                    "text": "@notice Wewe token approveAndCall function"
                  },
                  "functionSelector": "8f4ffcb1",
                  "id": 887,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 866,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 865,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "2157:12:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 250,
                        "src": "2157:12:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2157:12:8"
                    },
                    {
                      "id": 868,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 867,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2170:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2170:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2170:13:8"
                    }
                  ],
                  "name": "receiveApproval",
                  "nameLocation": "2039:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2072:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "2064:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2064:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2094:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "2086:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2086:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "2110:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2110:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 887,
                        "src": "2127:14:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2127:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2054:93:8"
                  },
                  "returnParameters": {
                    "id": 869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2184:0:8"
                  },
                  "scope": 954,
                  "src": "2030:411:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 900,
                    "nodeType": "Block",
                    "src": "2489:49:8",
                    "statements": [
                      {
                        "expression": {
                          "condition": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 892,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2499:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2499:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 896,
                              "name": "_pause",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2523:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2523:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2499:32:8",
                          "trueExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 894,
                              "name": "_unpause",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2510:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2510:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "2499:32:8"
                      }
                    ]
                  },
                  "functionSelector": "c4ae3168",
                  "id": 901,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 890,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 889,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2479:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2479:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2479:9:8"
                    }
                  ],
                  "name": "togglePause",
                  "nameLocation": "2456:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2467:2:8"
                  },
                  "returnParameters": {
                    "id": 891,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:0:8"
                  },
                  "scope": 954,
                  "src": "2447:91:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 919,
                    "nodeType": "Block",
                    "src": "2587:77:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 910,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2623:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2627:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2623:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 914,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2643:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$954",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$954",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2635:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 912,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2635:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2635:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 916,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "2650:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 907,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 698,
                                  "src": "2604:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 906,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "2597:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2597:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2610:12:8",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "2597:25:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2597:60:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 918,
                        "nodeType": "ExpressionStatement",
                        "src": "2597:60:8"
                      }
                    ]
                  },
                  "id": 920,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deposit",
                  "nameLocation": "2553:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2570:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 920,
                        "src": "2562:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2562:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2561:16:8"
                  },
                  "returnParameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2587:0:8"
                  },
                  "scope": 954,
                  "src": "2544:120:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 942,
                    "nodeType": "Block",
                    "src": "2710:206:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 924,
                            "name": "vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 700,
                            "src": "2763:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2782:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2763:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 929,
                        "nodeType": "IfStatement",
                        "src": "2759:52:8",
                        "trueBody": {
                          "id": 928,
                          "nodeType": "Block",
                          "src": "2785:26:8",
                          "statements": [
                            {
                              "id": 927,
                              "nodeType": "PlaceholderStatement",
                              "src": "2799:1:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 931,
                                    "name": "vestings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 705,
                                    "src": "2829:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                      "typeString": "mapping(address => struct Vesting storage ref)"
                                    }
                                  },
                                  "id": 933,
                                  "indexExpression": {
                                    "id": 932,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 922,
                                    "src": "2838:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2829:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vesting_$684_storage",
                                    "typeString": "struct Vesting storage ref"
                                  }
                                },
                                "id": 934,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2847:3:8",
                                "memberName": "end",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 683,
                                "src": "2829:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 935,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2854:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2860:9:8",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2854:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2829:40:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a2056657374696e67206e6f7420656e646564",
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2871:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1979fe82f416ea2c552b5ae27a267d317c8439eb90ebfb3d6e1fb04025e29a6c",
                                "typeString": "literal_string \"Eater: Vesting not ended\""
                              },
                              "value": "Eater: Vesting not ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1979fe82f416ea2c552b5ae27a267d317c8439eb90ebfb3d6e1fb04025e29a6c",
                                "typeString": "literal_string \"Eater: Vesting not ended\""
                              }
                            ],
                            "id": 930,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2821:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2821:77:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "ExpressionStatement",
                        "src": "2821:77:8"
                      },
                      {
                        "id": 941,
                        "nodeType": "PlaceholderStatement",
                        "src": "2908:1:8"
                      }
                    ]
                  },
                  "id": 943,
                  "name": "whenClaimable",
                  "nameLocation": "2679:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2701:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "2693:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2693:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2692:17:8"
                  },
                  "src": "2670:246:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "adc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8",
                  "id": 949,
                  "name": "Merged",
                  "nameLocation": "2928:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 948,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 945,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2943:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 949,
                        "src": "2935:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 944,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2935:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 947,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2967:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 949,
                        "src": "2951:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2951:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2934:41:8"
                  },
                  "src": "2922:54:8"
                },
                {
                  "anonymous": false,
                  "eventSelector": "595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f10",
                  "id": 953,
                  "name": "RateChanged",
                  "nameLocation": "2987:11:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 951,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRate",
                        "nameLocation": "3007:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "2999:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 950,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2999:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2998:17:8"
                  },
                  "src": "2981:35:8"
                }
              ],
              "scope": 955,
              "src": "459:2559:8",
              "usedErrors": []
            }
          ],
          "src": "33:2986:8"
        },
        "id": 8
      },
      "contracts/core/merge/GenericMerge.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/GenericMerge.sol",
          "exportedSymbols": {
            "Eater": [
              954
            ],
            "GenericMerge": [
              1153
            ],
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ],
            "IMergeV2": [
              1714
            ]
          },
          "id": 1154,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 956,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "absolutePath": "contracts/interfaces/IMergeV2.sol",
              "file": "../../interfaces/IMergeV2.sol",
              "id": 957,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1154,
              "sourceUnit": 1715,
              "src": "58:39:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/Eater.sol",
              "file": "./Eater.sol",
              "id": 959,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1154,
              "sourceUnit": 955,
              "src": "98:34:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 958,
                    "name": "Eater",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 954,
                    "src": "106:5:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 961,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1154,
              "sourceUnit": 389,
              "src": "133:97:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 960,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 388,
                    "src": "141:14:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 963,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1154,
              "sourceUnit": 364,
              "src": "231:70:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 962,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "239:6:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 964,
                    "name": "Eater",
                    "nameLocations": [
                      "328:5:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 954,
                    "src": "328:5:9"
                  },
                  "id": 965,
                  "nodeType": "InheritanceSpecifier",
                  "src": "328:5:9"
                },
                {
                  "baseName": {
                    "id": 966,
                    "name": "IMergeV2",
                    "nameLocations": [
                      "335:8:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1714,
                    "src": "335:8:9"
                  },
                  "id": 967,
                  "nodeType": "InheritanceSpecifier",
                  "src": "335:8:9"
                }
              ],
              "canonicalName": "GenericMerge",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1153,
              "linearizedBaseContracts": [
                1153,
                1714,
                954,
                112,
                220,
                418,
                285,
                1728
              ],
              "name": "GenericMerge",
              "nameLocation": "312:12:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 992,
                    "nodeType": "Block",
                    "src": "416:118:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 976,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "426:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "434:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "426:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 979,
                        "nodeType": "ExpressionStatement",
                        "src": "426:11:9"
                      },
                      {
                        "expression": {
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 980,
                            "name": "wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "447:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 981,
                            "name": "_wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "454:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "447:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 983,
                        "nodeType": "ExpressionStatement",
                        "src": "447:12:9"
                      },
                      {
                        "expression": {
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 984,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "469:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 985,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "478:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "469:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 987,
                        "nodeType": "ExpressionStatement",
                        "src": "469:14:9"
                      },
                      {
                        "expression": {
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 988,
                            "name": "vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 700,
                            "src": "493:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 989,
                            "name": "_vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "511:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "493:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 991,
                        "nodeType": "ExpressionStatement",
                        "src": "493:34:9"
                      }
                    ]
                  },
                  "id": 993,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "mutability": "mutable",
                        "name": "_wewe",
                        "nameLocation": "370:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 993,
                        "src": "362:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "362:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "385:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 993,
                        "src": "377:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "377:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 973,
                        "mutability": "mutable",
                        "name": "_vestingDuration",
                        "nameLocation": "398:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 993,
                        "src": "392:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "392:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "361:54:9"
                  },
                  "returnParameters": {
                    "id": 975,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "416:0:9"
                  },
                  "scope": 1153,
                  "src": "350:184:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1008,
                    "nodeType": "Block",
                    "src": "604:64:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1000,
                                "name": "vestings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 705,
                                "src": "621:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                  "typeString": "mapping(address => struct Vesting storage ref)"
                                }
                              },
                              "id": 1002,
                              "indexExpression": {
                                "id": 1001,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 995,
                                "src": "630:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "621:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vesting_$684_storage",
                                "typeString": "struct Vesting storage ref"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "639:3:9",
                            "memberName": "end",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 683,
                            "src": "621:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1004,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "646:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "652:9:9",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "646:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "621:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 999,
                        "id": 1007,
                        "nodeType": "Return",
                        "src": "614:47:9"
                      }
                    ]
                  },
                  "functionSelector": "bf3506c1",
                  "id": 1009,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canClaim",
                  "nameLocation": "549:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 995,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "566:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "558:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:17:9"
                  },
                  "returnParameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 998,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1009,
                        "src": "598:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 997,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "597:6:9"
                  },
                  "scope": 1153,
                  "src": "540:128:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1021,
                    "nodeType": "Block",
                    "src": "742:48:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1016,
                              "name": "vestings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 705,
                              "src": "759:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                "typeString": "mapping(address => struct Vesting storage ref)"
                              }
                            },
                            "id": 1018,
                            "indexExpression": {
                              "id": 1017,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "768:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "759:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vesting_$684_storage",
                              "typeString": "struct Vesting storage ref"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "777:6:9",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 681,
                          "src": "759:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1015,
                        "id": 1020,
                        "nodeType": "Return",
                        "src": "752:31:9"
                      }
                    ]
                  },
                  "functionSelector": "70a08231",
                  "id": 1022,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "683:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1011,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "701:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "693:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:17:9"
                  },
                  "returnParameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1014,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "733:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:9:9"
                  },
                  "scope": 1153,
                  "src": "674:116:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1705
                  ],
                  "body": {
                    "id": 1029,
                    "nodeType": "Block",
                    "src": "848:30:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1027,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "865:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1026,
                        "id": 1028,
                        "nodeType": "Return",
                        "src": "858:13:9"
                      }
                    ]
                  },
                  "functionSelector": "21df0da7",
                  "id": 1030,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "805:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "813:2:9"
                  },
                  "returnParameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1025,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "839:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:9:9"
                  },
                  "scope": 1153,
                  "src": "796:82:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1695
                  ],
                  "body": {
                    "id": 1037,
                    "nodeType": "Block",
                    "src": "935:29:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1035,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "952:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1034,
                        "id": 1036,
                        "nodeType": "Return",
                        "src": "945:12:9"
                      }
                    ]
                  },
                  "functionSelector": "679aefce",
                  "id": 1038,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "893:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "900:2:9"
                  },
                  "returnParameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "926:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:9"
                  },
                  "scope": 1153,
                  "src": "884:80:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1700
                  ],
                  "body": {
                    "id": 1049,
                    "nodeType": "Block",
                    "src": "1020:31:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1046,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1040,
                              "src": "1039:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1045,
                            "name": "_setRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "1030:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1030:14:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1048,
                        "nodeType": "ExpressionStatement",
                        "src": "1030:14:9"
                      }
                    ]
                  },
                  "functionSelector": "34fcf437",
                  "id": 1050,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1043,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1042,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1010:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1010:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1010:9:9"
                    }
                  ],
                  "name": "setRate",
                  "nameLocation": "979:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1040,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "995:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "987:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "987:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "986:14:9"
                  },
                  "returnParameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1020:0:9"
                  },
                  "scope": 1153,
                  "src": "970:81:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1713
                  ],
                  "body": {
                    "id": 1072,
                    "nodeType": "Block",
                    "src": "1100:116:9",
                    "statements": [
                      {
                        "assignments": [
                          1056
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1056,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1118:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1072,
                            "src": "1110:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1055,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1110:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1064,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1061,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1153:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1157:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1153:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1058,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "1135:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1057,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1128:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1128:14:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1143:9:9",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1128:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1128:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1110:54:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1066,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "1181:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1067,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1190:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1068,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1198:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1202:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1198:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1065,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1174:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1174:35:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1071,
                        "nodeType": "ExpressionStatement",
                        "src": "1174:35:9"
                      }
                    ]
                  },
                  "functionSelector": "ea9f2417",
                  "id": 1073,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1053,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1052,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1086:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1086:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1086:13:9"
                    }
                  ],
                  "name": "mergeAll",
                  "nameLocation": "1066:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1051,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1074:2:9"
                  },
                  "returnParameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1100:0:9"
                  },
                  "scope": 1153,
                  "src": "1057:159:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1710
                  ],
                  "body": {
                    "id": 1104,
                    "nodeType": "Block",
                    "src": "1276:197:9",
                    "statements": [
                      {
                        "assignments": [
                          1081
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1081,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1294:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1104,
                            "src": "1286:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1080,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1286:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1089,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1086,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1329:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1333:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1329:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1083,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "1311:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1082,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1304:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1304:14:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1319:9:9",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1304:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1304:36:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1286:54:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1091,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1081,
                                "src": "1358:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1092,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1075,
                                "src": "1369:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1358:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "47656e657269634d657267653a20496e73756666696369656e742062616c616e636520746f20656174",
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1377:43:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_56f84ab3557aa002e3821e289449209d21d11b7ab04217ed57ab1b5127489f80",
                                "typeString": "literal_string \"GenericMerge: Insufficient balance to eat\""
                              },
                              "value": "GenericMerge: Insufficient balance to eat"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_56f84ab3557aa002e3821e289449209d21d11b7ab04217ed57ab1b5127489f80",
                                "typeString": "literal_string \"GenericMerge: Insufficient balance to eat\""
                              }
                            ],
                            "id": 1090,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1350:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:71:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:71:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1098,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1075,
                              "src": "1439:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1099,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1447:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1455:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1459:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1455:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1097,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "1432:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1103,
                        "nodeType": "ExpressionStatement",
                        "src": "1432:34:9"
                      }
                    ]
                  },
                  "functionSelector": "24a47aeb",
                  "id": 1105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1078,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1077,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1262:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1262:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1262:13:9"
                    }
                  ],
                  "name": "merge",
                  "nameLocation": "1231:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1245:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1105,
                        "src": "1237:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:16:9"
                  },
                  "returnParameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1276:0:9"
                  },
                  "scope": 1153,
                  "src": "1222:251:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1139,
                    "nodeType": "Block",
                    "src": "1545:154:9",
                    "statements": [
                      {
                        "assignments": [
                          1115
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1115,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "1563:6:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1139,
                            "src": "1555:14:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1114,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1555:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1121,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1116,
                              "name": "vestings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 705,
                              "src": "1572:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                "typeString": "mapping(address => struct Vesting storage ref)"
                              }
                            },
                            "id": 1119,
                            "indexExpression": {
                              "expression": {
                                "id": 1117,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1581:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1585:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1581:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1572:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vesting_$684_storage",
                              "typeString": "struct Vesting storage ref"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1593:6:9",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 681,
                          "src": "1572:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1555:44:9"
                      },
                      {
                        "expression": {
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1122,
                                "name": "vestings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 705,
                                "src": "1609:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vesting_$684_storage_$",
                                  "typeString": "mapping(address => struct Vesting storage ref)"
                                }
                              },
                              "id": 1125,
                              "indexExpression": {
                                "expression": {
                                  "id": 1123,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1618:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1622:6:9",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1618:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1609:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vesting_$684_storage",
                                "typeString": "struct Vesting storage ref"
                              }
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1630:6:9",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 681,
                            "src": "1609:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1639:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1609:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1129,
                        "nodeType": "ExpressionStatement",
                        "src": "1609:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1134,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1673:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1677:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1673:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1136,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1115,
                              "src": "1685:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1131,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 698,
                                  "src": "1658:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1130,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1651:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1651:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1664:8:9",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "1651:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1651:41:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1138,
                        "nodeType": "ExpressionStatement",
                        "src": "1651:41:9"
                      }
                    ]
                  },
                  "functionSelector": "4e71d92d",
                  "id": 1140,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1108,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1107,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1505:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1505:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1505:13:9"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1533:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1537:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1533:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1112,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1109,
                        "name": "whenClaimable",
                        "nameLocations": [
                          "1519:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 943,
                        "src": "1519:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1519:25:9"
                    }
                  ],
                  "name": "claim",
                  "nameLocation": "1488:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1493:2:9"
                  },
                  "returnParameters": {
                    "id": 1113,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1545:0:9"
                  },
                  "scope": 1153,
                  "src": "1479:220:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1690
                  ],
                  "body": {
                    "id": 1151,
                    "nodeType": "Block",
                    "src": "1807:33:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1142,
                              "src": "1826:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1147,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "1817:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1817:16:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1150,
                        "nodeType": "ExpressionStatement",
                        "src": "1817:16:9"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 1152,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1145,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1144,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1797:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1797:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1797:9:9"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1764:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1780:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1152,
                        "src": "1772:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1772:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1771:16:9"
                  },
                  "returnParameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1807:0:9"
                  },
                  "scope": 1153,
                  "src": "1755:85:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1154,
              "src": "303:1539:9",
              "usedErrors": []
            }
          ],
          "src": "32:1811:9"
        },
        "id": 9
      },
      "contracts/core/merge/MergeFactory.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/MergeFactory.sol",
          "exportedSymbols": {
            "GenericMerge": [
              1153
            ],
            "IERC20": [
              363
            ],
            "IMergeV2": [
              1714
            ],
            "MergeFactory": [
              1510
            ],
            "MergeWithMarket": [
              1621
            ],
            "Ownable": [
              112
            ]
          },
          "id": 1511,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1155,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:10"
            },
            {
              "absolutePath": "contracts/interfaces/IMergeV2.sol",
              "file": "../../interfaces/IMergeV2.sol",
              "id": 1156,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1511,
              "sourceUnit": 1715,
              "src": "59:39:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/MergeWithMarket.sol",
              "file": "./MergeWithMarket.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1511,
              "sourceUnit": 1622,
              "src": "99:54:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1157,
                    "name": "MergeWithMarket",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1621,
                    "src": "107:15:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/GenericMerge.sol",
              "file": "./GenericMerge.sol",
              "id": 1160,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1511,
              "sourceUnit": 1154,
              "src": "154:48:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1159,
                    "name": "GenericMerge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1153,
                    "src": "162:12:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1162,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1511,
              "sourceUnit": 364,
              "src": "203:70:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1161,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "211:6:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1164,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1511,
              "sourceUnit": 113,
              "src": "274:67:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1163,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 112,
                    "src": "282:7:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1165,
                    "name": "Ownable",
                    "nameLocations": [
                      "368:7:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "368:7:10"
                  },
                  "id": 1166,
                  "nodeType": "InheritanceSpecifier",
                  "src": "368:7:10"
                }
              ],
              "canonicalName": "MergeFactory",
              "contractDependencies": [
                1153,
                1621
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1510,
              "linearizedBaseContracts": [
                1510,
                112,
                418
              ],
              "name": "MergeFactory",
              "nameLocation": "352:12:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "MergeFactory.MergeType",
                  "id": 1169,
                  "members": [
                    {
                      "id": 1167,
                      "name": "Generic",
                      "nameLocation": "408:7:10",
                      "nodeType": "EnumValue",
                      "src": "408:7:10"
                    },
                    {
                      "id": 1168,
                      "name": "WithMarket",
                      "nameLocation": "425:10:10",
                      "nodeType": "EnumValue",
                      "src": "425:10:10"
                    }
                  ],
                  "name": "MergeType",
                  "nameLocation": "388:9:10",
                  "nodeType": "EnumDefinition",
                  "src": "383:58:10"
                },
                {
                  "constant": true,
                  "functionSelector": "e1f26f22",
                  "id": 1172,
                  "mutability": "constant",
                  "name": "wewe",
                  "nameLocation": "471:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "447:73:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307836623962623336353139353338653043303733383934453936344539303137324531633042343146",
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "478:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x6b9bb36519538e0C073894E964E90172E1c0B41F"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4f64b2be",
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "543:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "526:23:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1173,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "526:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1174,
                    "nodeType": "ArrayTypeName",
                    "src": "526:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e441eebf",
                  "id": 1179,
                  "mutability": "mutable",
                  "name": "merges",
                  "nameLocation": "612:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "577:41:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 1178,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1176,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "585:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "577:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1177,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "596:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7f389fd5",
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "mergeTypes",
                  "nameLocation": "661:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "624:47:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MergeType_$1169_$",
                    "typeString": "mapping(address => enum MergeFactory.MergeType)"
                  },
                  "typeName": {
                    "id": 1183,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1180,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "624:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MergeType_$1169_$",
                      "typeString": "mapping(address => enum MergeFactory.MergeType)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1182,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1181,
                        "name": "MergeType",
                        "nameLocations": [
                          "643:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1169,
                        "src": "643:9:10"
                      },
                      "referencedDeclaration": 1169,
                      "src": "643:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MergeType_$1169",
                        "typeString": "enum MergeFactory.MergeType"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6d090218",
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "allowedDeployers",
                  "nameLocation": "709:16:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "677:48:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1187,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1185,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "685:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "677:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1186,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "696:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1198,
                    "nodeType": "Block",
                    "src": "746:52:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1191,
                              "name": "allowedDeployers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1188,
                              "src": "756:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1194,
                            "indexExpression": {
                              "expression": {
                                "id": 1192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "773:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "777:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "773:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "756:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "787:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "756:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1197,
                        "nodeType": "ExpressionStatement",
                        "src": "756:35:10"
                      }
                    ]
                  },
                  "id": 1199,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "743:2:10"
                  },
                  "returnParameters": {
                    "id": 1190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "746:0:10"
                  },
                  "scope": 1510,
                  "src": "732:66:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1207,
                    "nodeType": "Block",
                    "src": "861:37:10",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1204,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "878:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "885:6:10",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "878:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1203,
                        "id": 1206,
                        "nodeType": "Return",
                        "src": "871:20:10"
                      }
                    ]
                  },
                  "functionSelector": "1d06f92b",
                  "id": 1208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMergeCount",
                  "nameLocation": "813:13:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1200,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "826:2:10"
                  },
                  "returnParameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1208,
                        "src": "852:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "851:9:10"
                  },
                  "scope": 1510,
                  "src": "804:94:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "1017:269:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1222,
                                  "name": "merges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "1035:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 1224,
                                "indexExpression": {
                                  "id": 1223,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1210,
                                  "src": "1042:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1035:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1060:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1226,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1052:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1225,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1052:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1052:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1035:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204d6572676520616c726561647920657869737473",
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1064:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              },
                              "value": "MergeFactory: Merge already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              }
                            ],
                            "id": 1221,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1027:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1027:74:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1232,
                        "nodeType": "ExpressionStatement",
                        "src": "1027:74:10"
                      },
                      {
                        "assignments": [
                          1234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1234,
                            "mutability": "mutable",
                            "name": "merge",
                            "nameLocation": "1119:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1260,
                            "src": "1111:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1111:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1245,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1240,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1210,
                                  "src": "1155:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1241,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1172,
                                  "src": "1162:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1242,
                                  "name": "vestingDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1214,
                                  "src": "1168:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "1135:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$_t_contract$_MergeWithMarket_$1621_$",
                                  "typeString": "function (address,address,uint8) returns (contract MergeWithMarket)"
                                },
                                "typeName": {
                                  "id": 1238,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1237,
                                    "name": "MergeWithMarket",
                                    "nameLocations": [
                                      "1139:15:10"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1621,
                                    "src": "1139:15:10"
                                  },
                                  "referencedDeclaration": 1621,
                                  "src": "1139:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                    "typeString": "contract MergeWithMarket"
                                  }
                                }
                              },
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1135:49:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                "typeString": "contract MergeWithMarket"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                "typeString": "contract MergeWithMarket"
                              }
                            ],
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1127:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1127:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1127:58:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1111:74:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1250,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1212,
                              "src": "1219:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1247,
                                  "name": "merge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1234,
                                  "src": "1204:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1246,
                                "name": "IMergeV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1714,
                                "src": "1195:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMergeV2_$1714_$",
                                  "typeString": "type(contract IMergeV2)"
                                }
                              },
                              "id": 1248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1195:15:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMergeV2_$1714",
                                "typeString": "contract IMergeV2"
                              }
                            },
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1211:7:10",
                            "memberName": "setRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1700,
                            "src": "1195:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1195:29:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1252,
                        "nodeType": "ExpressionStatement",
                        "src": "1195:29:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1254,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "1244:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1255,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "1251:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1253,
                            "name": "_setMerge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "1234:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1234:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1257,
                        "nodeType": "ExpressionStatement",
                        "src": "1234:23:10"
                      },
                      {
                        "expression": {
                          "id": 1258,
                          "name": "merge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "1274:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1220,
                        "id": 1259,
                        "nodeType": "Return",
                        "src": "1267:12:10"
                      }
                    ]
                  },
                  "functionSelector": "870a6a87",
                  "id": 1261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1217,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1216,
                        "name": "onlyDeployer",
                        "nameLocations": [
                          "986:12:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1503,
                        "src": "986:12:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "986:12:10"
                    }
                  ],
                  "name": "createMerge",
                  "nameLocation": "913:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1210,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "933:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "925:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1212,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "948:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "940:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "vestingDuration",
                        "nameLocation": "960:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "954:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "924:52:10"
                  },
                  "returnParameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1219,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1008:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1008:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1007:9:10"
                  },
                  "scope": 1510,
                  "src": "904:382:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1359,
                    "nodeType": "Block",
                    "src": "1434:646:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1278,
                                  "name": "merges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "1452:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 1280,
                                "indexExpression": {
                                  "id": 1279,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1263,
                                  "src": "1459:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1452:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1477:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1469:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1281,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1469:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1469:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1452:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204d6572676520616c726561647920657869737473",
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1481:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              },
                              "value": "MergeFactory: Merge already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              }
                            ],
                            "id": 1277,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1444:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1444:74:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "1444:74:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1289,
                            "name": "mergeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1270,
                            "src": "1533:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1290,
                              "name": "MergeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1169,
                              "src": "1546:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_MergeType_$1169_$",
                                "typeString": "type(enum MergeFactory.MergeType)"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1556:7:10",
                            "memberName": "Generic",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1167,
                            "src": "1546:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "src": "1533:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1321,
                        "nodeType": "IfStatement",
                        "src": "1529:238:10",
                        "trueBody": {
                          "id": 1320,
                          "nodeType": "Block",
                          "src": "1565:202:10",
                          "statements": [
                            {
                              "assignments": [
                                1294
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1294,
                                  "mutability": "mutable",
                                  "name": "merge",
                                  "nameLocation": "1587:5:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1320,
                                  "src": "1579:13:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1293,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1579:7:10",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1305,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1300,
                                        "name": "wewe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1172,
                                        "src": "1620:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1301,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1263,
                                        "src": "1626:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1302,
                                        "name": "vestingDuration",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1267,
                                        "src": "1633:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 1299,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "1603:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$_t_contract$_GenericMerge_$1153_$",
                                        "typeString": "function (address,address,uint8) returns (contract GenericMerge)"
                                      },
                                      "typeName": {
                                        "id": 1298,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 1297,
                                          "name": "GenericMerge",
                                          "nameLocations": [
                                            "1607:12:10"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 1153,
                                          "src": "1607:12:10"
                                        },
                                        "referencedDeclaration": 1153,
                                        "src": "1607:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_GenericMerge_$1153",
                                          "typeString": "contract GenericMerge"
                                        }
                                      }
                                    },
                                    "id": 1303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1603:46:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_GenericMerge_$1153",
                                      "typeString": "contract GenericMerge"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GenericMerge_$1153",
                                      "typeString": "contract GenericMerge"
                                    }
                                  ],
                                  "id": 1296,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1595:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1295,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1595:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1595:55:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1579:71:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1310,
                                    "name": "rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1265,
                                    "src": "1688:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1307,
                                        "name": "merge",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1294,
                                        "src": "1673:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1306,
                                      "name": "IMergeV2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1714,
                                      "src": "1664:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IMergeV2_$1714_$",
                                        "typeString": "type(contract IMergeV2)"
                                      }
                                    },
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1664:15:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMergeV2_$1714",
                                      "typeString": "contract IMergeV2"
                                    }
                                  },
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1680:7:10",
                                  "memberName": "setRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1700,
                                  "src": "1664:23:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1664:29:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1312,
                              "nodeType": "ExpressionStatement",
                              "src": "1664:29:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1314,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1263,
                                    "src": "1717:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1315,
                                    "name": "merge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1294,
                                    "src": "1724:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1313,
                                  "name": "_setMerge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1475,
                                  "src": "1707:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address)"
                                  }
                                },
                                "id": 1316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1707:23:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1317,
                              "nodeType": "ExpressionStatement",
                              "src": "1707:23:10"
                            },
                            {
                              "expression": {
                                "id": 1318,
                                "name": "merge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1294,
                                "src": "1751:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 1276,
                              "id": 1319,
                              "nodeType": "Return",
                              "src": "1744:12:10"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          },
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1322,
                            "name": "mergeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1270,
                            "src": "1781:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1323,
                              "name": "MergeType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1169,
                              "src": "1794:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_MergeType_$1169_$",
                                "typeString": "type(enum MergeFactory.MergeType)"
                              }
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1804:10:10",
                            "memberName": "WithMarket",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1168,
                            "src": "1794:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "src": "1781:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1354,
                        "nodeType": "IfStatement",
                        "src": "1777:244:10",
                        "trueBody": {
                          "id": 1353,
                          "nodeType": "Block",
                          "src": "1816:205:10",
                          "statements": [
                            {
                              "assignments": [
                                1327
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1327,
                                  "mutability": "mutable",
                                  "name": "merge",
                                  "nameLocation": "1838:5:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1353,
                                  "src": "1830:13:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 1326,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1830:7:10",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1338,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1333,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1263,
                                        "src": "1874:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1334,
                                        "name": "wewe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1172,
                                        "src": "1881:4:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1335,
                                        "name": "vestingDuration",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1267,
                                        "src": "1887:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 1332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "NewExpression",
                                      "src": "1854:19:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_uint8_$returns$_t_contract$_MergeWithMarket_$1621_$",
                                        "typeString": "function (address,address,uint8) returns (contract MergeWithMarket)"
                                      },
                                      "typeName": {
                                        "id": 1331,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                          "id": 1330,
                                          "name": "MergeWithMarket",
                                          "nameLocations": [
                                            "1858:15:10"
                                          ],
                                          "nodeType": "IdentifierPath",
                                          "referencedDeclaration": 1621,
                                          "src": "1858:15:10"
                                        },
                                        "referencedDeclaration": 1621,
                                        "src": "1858:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                          "typeString": "contract MergeWithMarket"
                                        }
                                      }
                                    },
                                    "id": 1336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1854:49:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                      "typeString": "contract MergeWithMarket"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                      "typeString": "contract MergeWithMarket"
                                    }
                                  ],
                                  "id": 1329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1846:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1328,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1846:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1846:58:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1830:74:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1343,
                                    "name": "rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1265,
                                    "src": "1942:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1340,
                                        "name": "merge",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1327,
                                        "src": "1927:5:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1339,
                                      "name": "IMergeV2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1714,
                                      "src": "1918:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IMergeV2_$1714_$",
                                        "typeString": "type(contract IMergeV2)"
                                      }
                                    },
                                    "id": 1341,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1918:15:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IMergeV2_$1714",
                                      "typeString": "contract IMergeV2"
                                    }
                                  },
                                  "id": 1342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1934:7:10",
                                  "memberName": "setRate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1700,
                                  "src": "1918:23:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) external"
                                  }
                                },
                                "id": 1344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1918:29:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1345,
                              "nodeType": "ExpressionStatement",
                              "src": "1918:29:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1347,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1263,
                                    "src": "1971:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1348,
                                    "name": "merge",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1327,
                                    "src": "1978:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1346,
                                  "name": "_setMerge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1475,
                                  "src": "1961:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (address,address)"
                                  }
                                },
                                "id": 1349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1961:23:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1350,
                              "nodeType": "ExpressionStatement",
                              "src": "1961:23:10"
                            },
                            {
                              "expression": {
                                "id": 1351,
                                "name": "merge",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1327,
                                "src": "2005:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "functionReturnParameters": 1276,
                              "id": 1352,
                              "nodeType": "Return",
                              "src": "1998:12:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4d65726765466163746f72793a20496e76616c6964206d657267652074797065",
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2038:34:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8543fa8fc63bbea13f37d619fa28affa2ee8004a8febd5aeee47763937b207e2",
                                "typeString": "literal_string \"MergeFactory: Invalid merge type\""
                              },
                              "value": "MergeFactory: Invalid merge type"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8543fa8fc63bbea13f37d619fa28affa2ee8004a8febd5aeee47763937b207e2",
                                "typeString": "literal_string \"MergeFactory: Invalid merge type\""
                              }
                            ],
                            "id": 1355,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2031:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2031:42:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1358,
                        "nodeType": "ExpressionStatement",
                        "src": "2031:42:10"
                      }
                    ]
                  },
                  "functionSelector": "34665646",
                  "id": 1360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1273,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1272,
                        "name": "onlyDeployer",
                        "nameLocations": [
                          "1403:12:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1503,
                        "src": "1403:12:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1403:12:10"
                    }
                  ],
                  "name": "createMergeWithType",
                  "nameLocation": "1301:19:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1263,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1329:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1321:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1321:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1265,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "1344:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1336:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "vestingDuration",
                        "nameLocation": "1356:15:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1350:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1270,
                        "mutability": "mutable",
                        "name": "mergeType",
                        "nameLocation": "1383:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1373:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MergeType_$1169",
                          "typeString": "enum MergeFactory.MergeType"
                        },
                        "typeName": {
                          "id": 1269,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1268,
                            "name": "MergeType",
                            "nameLocations": [
                              "1373:9:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1169,
                            "src": "1373:9:10"
                          },
                          "referencedDeclaration": 1169,
                          "src": "1373:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1320:73:10"
                  },
                  "returnParameters": {
                    "id": 1276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1275,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1425:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1274,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1425:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1424:9:10"
                  },
                  "scope": 1510,
                  "src": "1292:788:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1380,
                    "nodeType": "Block",
                    "src": "2138:92:10",
                    "statements": [
                      {
                        "assignments": [
                          1368
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1368,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2156:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1380,
                            "src": "2148:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1367,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2148:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1374,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1370,
                                  "name": "merge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1362,
                                  "src": "2173:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1369,
                                "name": "IMergeV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1714,
                                "src": "2164:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMergeV2_$1714_$",
                                  "typeString": "type(contract IMergeV2)"
                                }
                              },
                              "id": 1371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2164:15:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMergeV2_$1714",
                                "typeString": "contract IMergeV2"
                              }
                            },
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2180:8:10",
                            "memberName": "getToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1705,
                            "src": "2164:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2164:26:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2148:42:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1376,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1368,
                              "src": "2210:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1377,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1362,
                              "src": "2217:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1375,
                            "name": "_setMerge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "2200:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2200:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1379,
                        "nodeType": "ExpressionStatement",
                        "src": "2200:23:10"
                      }
                    ]
                  },
                  "functionSelector": "b49757a6",
                  "id": 1381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1365,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1364,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2128:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2128:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2128:9:10"
                    }
                  ],
                  "name": "setMerge",
                  "nameLocation": "2095:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1362,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "2112:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1381,
                        "src": "2104:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2104:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2103:15:10"
                  },
                  "returnParameters": {
                    "id": 1366,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2138:0:10"
                  },
                  "scope": 1510,
                  "src": "2086:144:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1410,
                    "nodeType": "Block",
                    "src": "2317:131:10",
                    "statements": [
                      {
                        "assignments": [
                          1392
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1392,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2335:5:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1410,
                            "src": "2327:13:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1391,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2327:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1398,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1394,
                                  "name": "merge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1383,
                                  "src": "2352:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1393,
                                "name": "IMergeV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1714,
                                "src": "2343:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMergeV2_$1714_$",
                                  "typeString": "type(contract IMergeV2)"
                                }
                              },
                              "id": 1395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2343:15:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMergeV2_$1714",
                                "typeString": "contract IMergeV2"
                              }
                            },
                            "id": 1396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2359:8:10",
                            "memberName": "getToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1705,
                            "src": "2343:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2343:26:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2327:42:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1400,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1392,
                              "src": "2389:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1401,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "2396:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1399,
                            "name": "_setMerge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "2379:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2379:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1403,
                        "nodeType": "ExpressionStatement",
                        "src": "2379:23:10"
                      },
                      {
                        "expression": {
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1404,
                              "name": "mergeTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1184,
                              "src": "2412:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MergeType_$1169_$",
                                "typeString": "mapping(address => enum MergeFactory.MergeType)"
                              }
                            },
                            "id": 1406,
                            "indexExpression": {
                              "id": 1405,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1392,
                              "src": "2423:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2412:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1407,
                            "name": "mergeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1386,
                            "src": "2432:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "src": "2412:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          }
                        },
                        "id": 1409,
                        "nodeType": "ExpressionStatement",
                        "src": "2412:29:10"
                      }
                    ]
                  },
                  "functionSelector": "9dc79be4",
                  "id": 1411,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1389,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1388,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2307:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2307:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2307:9:10"
                    }
                  ],
                  "name": "setMergeWithType",
                  "nameLocation": "2245:16:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1387,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "2270:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1411,
                        "src": "2262:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2262:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1386,
                        "mutability": "mutable",
                        "name": "mergeType",
                        "nameLocation": "2287:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1411,
                        "src": "2277:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MergeType_$1169",
                          "typeString": "enum MergeFactory.MergeType"
                        },
                        "typeName": {
                          "id": 1385,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1384,
                            "name": "MergeType",
                            "nameLocations": [
                              "2277:9:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1169,
                            "src": "2277:9:10"
                          },
                          "referencedDeclaration": 1169,
                          "src": "2277:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2261:36:10"
                  },
                  "returnParameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2317:0:10"
                  },
                  "scope": 1510,
                  "src": "2236:212:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1427,
                    "nodeType": "Block",
                    "src": "2526:46:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1421,
                              "name": "mergeTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1184,
                              "src": "2536:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_MergeType_$1169_$",
                                "typeString": "mapping(address => enum MergeFactory.MergeType)"
                              }
                            },
                            "id": 1423,
                            "indexExpression": {
                              "id": 1422,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1413,
                              "src": "2547:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2536:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1424,
                            "name": "mergeType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "2556:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MergeType_$1169",
                              "typeString": "enum MergeFactory.MergeType"
                            }
                          },
                          "src": "2536:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          }
                        },
                        "id": 1426,
                        "nodeType": "ExpressionStatement",
                        "src": "2536:29:10"
                      }
                    ]
                  },
                  "functionSelector": "a49a7cb1",
                  "id": 1428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1419,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1418,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2516:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2516:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2516:9:10"
                    }
                  ],
                  "name": "setType",
                  "nameLocation": "2463:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1413,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2479:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1428,
                        "src": "2471:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "mergeType",
                        "nameLocation": "2496:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1428,
                        "src": "2486:19:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MergeType_$1169",
                          "typeString": "enum MergeFactory.MergeType"
                        },
                        "typeName": {
                          "id": 1415,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1414,
                            "name": "MergeType",
                            "nameLocations": [
                              "2486:9:10"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1169,
                            "src": "2486:9:10"
                          },
                          "referencedDeclaration": 1169,
                          "src": "2486:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MergeType_$1169",
                            "typeString": "enum MergeFactory.MergeType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:36:10"
                  },
                  "returnParameters": {
                    "id": 1420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2526:0:10"
                  },
                  "scope": 1510,
                  "src": "2454:118:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1474,
                    "nodeType": "Block",
                    "src": "2636:261:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1436,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1430,
                                "src": "2654:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1439,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2671:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2663:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1437,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2663:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2663:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2654:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a20496e76616c6964206d65726765",
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2675:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_66a8cabbfccd2d5f9c2aeef2d96e96409914199cf70fa31030810204b7d46a99",
                                "typeString": "literal_string \"MergeFactory: Invalid merge\""
                              },
                              "value": "MergeFactory: Invalid merge"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_66a8cabbfccd2d5f9c2aeef2d96e96409914199cf70fa31030810204b7d46a99",
                                "typeString": "literal_string \"MergeFactory: Invalid merge\""
                              }
                            ],
                            "id": 1435,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2646:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2646:59:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1444,
                        "nodeType": "ExpressionStatement",
                        "src": "2646:59:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1446,
                                  "name": "merges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1179,
                                  "src": "2723:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 1448,
                                "indexExpression": {
                                  "id": 1447,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "2730:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2723:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2748:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2740:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1449,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2740:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2740:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2723:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204d6572676520616c726561647920657869737473",
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2752:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              },
                              "value": "MergeFactory: Merge already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              }
                            ],
                            "id": 1445,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2715:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2715:74:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1456,
                        "nodeType": "ExpressionStatement",
                        "src": "2715:74:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1460,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1430,
                              "src": "2811:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1457,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1175,
                              "src": "2799:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2806:4:10",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2799:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2799:18:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1462,
                        "nodeType": "ExpressionStatement",
                        "src": "2799:18:10"
                      },
                      {
                        "expression": {
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1463,
                              "name": "merges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "2827:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 1465,
                            "indexExpression": {
                              "id": 1464,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1430,
                              "src": "2834:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2827:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1466,
                            "name": "merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1432,
                            "src": "2843:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2827:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "2827:21:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1470,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1430,
                              "src": "2877:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1471,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1432,
                              "src": "2884:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1469,
                            "name": "MergeCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1509,
                            "src": "2864:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2864:26:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1473,
                        "nodeType": "EmitStatement",
                        "src": "2859:31:10"
                      }
                    ]
                  },
                  "id": 1475,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setMerge",
                  "nameLocation": "2587:9:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1430,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2605:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1475,
                        "src": "2597:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2597:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "2620:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1475,
                        "src": "2612:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2612:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2596:30:10"
                  },
                  "returnParameters": {
                    "id": 1434,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2636:0:10"
                  },
                  "scope": 1510,
                  "src": "2578:319:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1490,
                    "nodeType": "Block",
                    "src": "2982:53:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1484,
                              "name": "allowedDeployers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1188,
                              "src": "2992:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1486,
                            "indexExpression": {
                              "id": 1485,
                              "name": "deployer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1477,
                              "src": "3009:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2992:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1487,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "3021:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2992:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1489,
                        "nodeType": "ExpressionStatement",
                        "src": "2992:36:10"
                      }
                    ]
                  },
                  "functionSelector": "39db25f7",
                  "id": 1491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1482,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1481,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2972:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2972:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2972:9:10"
                    }
                  ],
                  "name": "setAllowedDeployer",
                  "nameLocation": "2912:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1477,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "2939:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1491,
                        "src": "2931:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1476,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "allowed",
                        "nameLocation": "2954:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1491,
                        "src": "2949:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2949:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:32:10"
                  },
                  "returnParameters": {
                    "id": 1483,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2982:0:10"
                  },
                  "scope": 1510,
                  "src": "2903:132:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1502,
                    "nodeType": "Block",
                    "src": "3065:104:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1494,
                                "name": "allowedDeployers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "3083:16:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 1497,
                              "indexExpression": {
                                "expression": {
                                  "id": 1495,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3100:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3104:6:10",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3100:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3083:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204e6f7420616c6c6f77656420746f206465706c6f79",
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3113:37:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b32949fe1c9666291004439deddb960d4bbdf814ed1febed1a444d2e468379a6",
                                "typeString": "literal_string \"MergeFactory: Not allowed to deploy\""
                              },
                              "value": "MergeFactory: Not allowed to deploy"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b32949fe1c9666291004439deddb960d4bbdf814ed1febed1a444d2e468379a6",
                                "typeString": "literal_string \"MergeFactory: Not allowed to deploy\""
                              }
                            ],
                            "id": 1493,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3075:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3075:76:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1500,
                        "nodeType": "ExpressionStatement",
                        "src": "3075:76:10"
                      },
                      {
                        "id": 1501,
                        "nodeType": "PlaceholderStatement",
                        "src": "3161:1:10"
                      }
                    ]
                  },
                  "id": 1503,
                  "name": "onlyDeployer",
                  "nameLocation": "3050:12:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1492,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3062:2:10"
                  },
                  "src": "3041:128:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e413d0f68462f6240160d618a454469f475317b43867a99c353c0acc7bf4ec1b",
                  "id": 1509,
                  "name": "MergeCreated",
                  "nameLocation": "3181:12:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1505,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3210:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "3194:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3194:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1507,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "3233:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "3217:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1506,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3217:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3193:46:10"
                  },
                  "src": "3175:65:10"
                }
              ],
              "scope": 1511,
              "src": "343:2899:10",
              "usedErrors": []
            }
          ],
          "src": "33:3210:10"
        },
        "id": 10
      },
      "contracts/core/merge/MergeWithMarket.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/MergeWithMarket.sol",
          "exportedSymbols": {
            "GenericMerge": [
              1153
            ],
            "IAMM": [
              1683
            ],
            "IERC20": [
              363
            ],
            "MergeWithMarket": [
              1621
            ]
          },
          "id": 1622,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1512,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "contracts/interfaces/IAMM.sol",
              "file": "../../interfaces/IAMM.sol",
              "id": 1513,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1622,
              "sourceUnit": 1684,
              "src": "58:35:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/GenericMerge.sol",
              "file": "./GenericMerge.sol",
              "id": 1515,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1622,
              "sourceUnit": 1154,
              "src": "94:48:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1514,
                    "name": "GenericMerge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1153,
                    "src": "102:12:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1517,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1622,
              "sourceUnit": 364,
              "src": "143:70:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1516,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "151:6:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1518,
                    "name": "GenericMerge",
                    "nameLocations": [
                      "243:12:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1153,
                    "src": "243:12:11"
                  },
                  "id": 1519,
                  "nodeType": "InheritanceSpecifier",
                  "src": "243:12:11"
                }
              ],
              "canonicalName": "MergeWithMarket",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1621,
              "linearizedBaseContracts": [
                1621,
                1153,
                1714,
                954,
                112,
                220,
                418,
                285,
                1728
              ],
              "name": "MergeWithMarket",
              "nameLocation": "224:15:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "61d027b3",
                  "id": 1521,
                  "mutability": "mutable",
                  "name": "treasury",
                  "nameLocation": "277:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1621,
                  "src": "262:23:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1535,
                    "nodeType": "Block",
                    "src": "403:2:11",
                    "statements": []
                  },
                  "id": 1536,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1530,
                          "name": "_wewe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1523,
                          "src": "371:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1531,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "378:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1532,
                          "name": "_vestingDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1527,
                          "src": "385:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 1533,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1529,
                        "name": "GenericMerge",
                        "nameLocations": [
                          "358:12:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1153,
                        "src": "358:12:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "358:44:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1523,
                        "mutability": "mutable",
                        "name": "_wewe",
                        "nameLocation": "312:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1536,
                        "src": "304:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "304:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1525,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "327:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1536,
                        "src": "319:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1524,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "319:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1527,
                        "mutability": "mutable",
                        "name": "_vestingDuration",
                        "nameLocation": "340:16:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1536,
                        "src": "334:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1526,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "303:54:11"
                  },
                  "returnParameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "403:0:11"
                  },
                  "scope": 1621,
                  "src": "292:113:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1547,
                    "nodeType": "Block",
                    "src": "470:37:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1543,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "480:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1544,
                            "name": "_treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1538,
                            "src": "491:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "480:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1546,
                        "nodeType": "ExpressionStatement",
                        "src": "480:20:11"
                      }
                    ]
                  },
                  "functionSelector": "f0f44260",
                  "id": 1548,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1541,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1540,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "460:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "460:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "460:9:11"
                    }
                  ],
                  "name": "setTreasury",
                  "nameLocation": "420:11:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1538,
                        "mutability": "mutable",
                        "name": "_treasury",
                        "nameLocation": "440:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1548,
                        "src": "432:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "432:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "431:19:11"
                  },
                  "returnParameters": {
                    "id": 1542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "470:0:11"
                  },
                  "scope": 1621,
                  "src": "411:96:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1619,
                    "nodeType": "Block",
                    "src": "609:522:11",
                    "statements": [
                      {
                        "assignments": [
                          1561
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1561,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "627:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1619,
                            "src": "619:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1560,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "619:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1569,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1566,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "662:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "666:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "662:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1563,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "644:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1562,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "637:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "637:14:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "652:9:11",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "637:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "637:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "619:54:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1571,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1561,
                                "src": "691:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1572,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1550,
                                "src": "702:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "691:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765576974684d61726b65743a20496e73756666696369656e742062616c616e636520746f20656174",
                              "id": 1574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "710:46:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_14316091a0acd06bdcbd1cb846c07ec8b7c7c010fa4af4507e0230cdc45ce5bf",
                                "typeString": "literal_string \"MergeWithMarket: Insufficient balance to eat\""
                              },
                              "value": "MergeWithMarket: Insufficient balance to eat"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_14316091a0acd06bdcbd1cb846c07ec8b7c7c010fa4af4507e0230cdc45ce5bf",
                                "typeString": "literal_string \"MergeWithMarket: Insufficient balance to eat\""
                              }
                            ],
                            "id": 1570,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "683:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "683:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1576,
                        "nodeType": "ExpressionStatement",
                        "src": "683:74:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1578,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1550,
                              "src": "775:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1579,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "783:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1580,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "791:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "795:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "791:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1577,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "768:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "768:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1583,
                        "nodeType": "ExpressionStatement",
                        "src": "768:34:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1590,
                                  "name": "amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1553,
                                  "src": "910:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAMM_$1683",
                                    "typeString": "contract IAMM"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAMM_$1683",
                                    "typeString": "contract IAMM"
                                  }
                                ],
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "902:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1588,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "902:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "902:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1592,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1550,
                              "src": "916:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1585,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 696,
                                  "src": "886:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1584,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "879:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "879:14:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "894:7:11",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 350,
                            "src": "879:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "879:44:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1594,
                        "nodeType": "ExpressionStatement",
                        "src": "879:44:11"
                      },
                      {
                        "assignments": [
                          1596
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1596,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "1007:9:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1619,
                            "src": "999:17:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1595,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "999:7:11",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1609,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1597,
                              "name": "treasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1521,
                              "src": "1019:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1039:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1031:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1598,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1031:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1031:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1019:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 1607,
                            "name": "treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1521,
                            "src": "1060:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "1019:49:11",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 1605,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1052:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                  "typeString": "contract MergeWithMarket"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MergeWithMarket_$1621",
                                  "typeString": "contract MergeWithMarket"
                                }
                              ],
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1044:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1603,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1044:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1044:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "999:69:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1613,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1550,
                              "src": "1087:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1614,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1095:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1615,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1596,
                              "src": "1103:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1616,
                              "name": "extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1555,
                              "src": "1114:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 1610,
                              "name": "amm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1553,
                              "src": "1078:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAMM_$1683",
                                "typeString": "contract IAMM"
                              }
                            },
                            "id": 1612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1082:4:11",
                            "memberName": "sell",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1649,
                            "src": "1078:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address,address,bytes memory) external returns (uint256)"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1078:46:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1618,
                        "nodeType": "ExpressionStatement",
                        "src": "1078:46:11"
                      }
                    ]
                  },
                  "functionSelector": "213897fe",
                  "id": 1620,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1558,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1557,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "596:12:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 250,
                        "src": "596:12:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "596:12:11"
                    }
                  ],
                  "name": "mergeAndSell",
                  "nameLocation": "522:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1550,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "543:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "535:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "535:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1553,
                        "mutability": "mutable",
                        "name": "amm",
                        "nameLocation": "556:3:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "551:8:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAMM_$1683",
                          "typeString": "contract IAMM"
                        },
                        "typeName": {
                          "id": 1552,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1551,
                            "name": "IAMM",
                            "nameLocations": [
                              "551:4:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1683,
                            "src": "551:4:11"
                          },
                          "referencedDeclaration": 1683,
                          "src": "551:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAMM_$1683",
                            "typeString": "contract IAMM"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "576:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1620,
                        "src": "561:24:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "561:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "534:52:11"
                  },
                  "returnParameters": {
                    "id": 1559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "609:0:11"
                  },
                  "scope": 1621,
                  "src": "513:618:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1622,
              "src": "215:918:11",
              "usedErrors": []
            }
          ],
          "src": "32:1102:11"
        },
        "id": 11
      },
      "contracts/interfaces/IAMM.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAMM.sol",
          "exportedSymbols": {
            "IAMM": [
              1683
            ]
          },
          "id": 1684,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1623,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAMM",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1683,
              "linearizedBaseContracts": [
                1683
              ],
              "name": "IAMM",
              "nameLocation": "67:4:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "987bb07b",
                  "id": 1636,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buy",
                  "nameLocation": "87:3:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "99:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "91:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "91:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "115:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "107:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "107:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "130:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "122:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "122:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1631,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "156:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "141:24:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "141:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "90:76:12"
                  },
                  "returnParameters": {
                    "id": 1635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1634,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1636,
                        "src": "185:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1633,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "184:9:12"
                  },
                  "scope": 1683,
                  "src": "78:116:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "2454b710",
                  "id": 1649,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sell",
                  "nameLocation": "209:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1638,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "231:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1649,
                        "src": "223:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "223:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "255:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1649,
                        "src": "247:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "247:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1642,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "278:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1649,
                        "src": "270:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "270:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "312:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1649,
                        "src": "297:24:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "297:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "213:114:12"
                  },
                  "returnParameters": {
                    "id": 1648,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1647,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1649,
                        "src": "346:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1646,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "346:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "345:9:12"
                  },
                  "scope": 1683,
                  "src": "200:155:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "03679454",
                  "id": 1662,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sellAndBuy",
                  "nameLocation": "370:10:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1651,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "398:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "390:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1650,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "390:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1653,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "422:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "414:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "414:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1655,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "445:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "437:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "437:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1657,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "479:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "464:24:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1656,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "380:114:12"
                  },
                  "returnParameters": {
                    "id": 1661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1660,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "513:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1659,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "513:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "512:9:12"
                  },
                  "scope": 1683,
                  "src": "361:161:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4ebd6ef39c1235e69ba7dedf24ad43bdeb57deb289d98473668070d6ca9b685e",
                  "id": 1672,
                  "name": "Bought",
                  "nameLocation": "534:6:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "549:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "541:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "541:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "565:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "557:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "557:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1668,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "584:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "576:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "576:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1670,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "607:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "591:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1669,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "540:77:12"
                  },
                  "src": "528:90:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "55390ad3bffeff90968b8c54d2ed0099a7dbd2d71bc56263a1abf5643f833fec",
                  "id": 1682,
                  "name": "Sold",
                  "nameLocation": "629:4:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1674,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "642:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "634:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1676,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "658:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "650:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "650:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1678,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "677:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "669:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "669:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1680,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "700:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "684:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:77:12"
                  },
                  "src": "623:88:12"
                }
              ],
              "scope": 1684,
              "src": "57:656:12",
              "usedErrors": []
            }
          ],
          "src": "32:682:12"
        },
        "id": 12
      },
      "contracts/interfaces/IMergeV2.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IMergeV2.sol",
          "exportedSymbols": {
            "IMergeV2": [
              1714
            ]
          },
          "id": 1715,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1685,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IMergeV2",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1714,
              "linearizedBaseContracts": [
                1714
              ],
              "name": "IMergeV2",
              "nameLocation": "68:8:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "b6b55f25",
                  "id": 1690,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "92:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "108:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "100:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "100:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "99:16:13"
                  },
                  "returnParameters": {
                    "id": 1689,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "124:0:13"
                  },
                  "scope": 1714,
                  "src": "83:42:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "679aefce",
                  "id": 1695,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "139:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "146:2:13"
                  },
                  "returnParameters": {
                    "id": 1694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1693,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1695,
                        "src": "172:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1692,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:9:13"
                  },
                  "scope": 1714,
                  "src": "130:51:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "34fcf437",
                  "id": 1700,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRate",
                  "nameLocation": "195:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1697,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "211:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1700,
                        "src": "203:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:14:13"
                  },
                  "returnParameters": {
                    "id": 1699,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "225:0:13"
                  },
                  "scope": 1714,
                  "src": "186:40:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "21df0da7",
                  "id": 1705,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "240:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:2:13"
                  },
                  "returnParameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1703,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "274:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:9:13"
                  },
                  "scope": 1714,
                  "src": "231:52:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "24a47aeb",
                  "id": 1710,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "297:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1707,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "311:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1710,
                        "src": "303:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1706,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:16:13"
                  },
                  "returnParameters": {
                    "id": 1709,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "327:0:13"
                  },
                  "scope": 1714,
                  "src": "288:40:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ea9f2417",
                  "id": 1713,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "342:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1711,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "350:2:13"
                  },
                  "returnParameters": {
                    "id": 1712,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "361:0:13"
                  },
                  "scope": 1714,
                  "src": "333:29:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1715,
              "src": "58:306:13",
              "usedErrors": []
            }
          ],
          "src": "32:333:13"
        },
        "id": 13
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
          "exportedSymbols": {
            "IWeweReceiver": [
              1728
            ]
          },
          "id": 1729,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1716,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IWeweReceiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1728,
              "linearizedBaseContracts": [
                1728
              ],
              "name": "IWeweReceiver",
              "nameLocation": "68:13:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8f4ffcb1",
                  "id": 1727,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "receiveApproval",
                  "nameLocation": "97:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1718,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "121:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "113:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "113:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1720,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "135:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "127:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "127:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1722,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "151:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "143:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1721,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "143:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1724,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "173:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "158:24:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1723,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "158:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "112:71:14"
                  },
                  "returnParameters": {
                    "id": 1726,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:0:14"
                  },
                  "scope": 1728,
                  "src": "88:105:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1729,
              "src": "58:137:14",
              "usedErrors": []
            }
          ],
          "src": "32:164:14"
        },
        "id": 14
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/BBroMerge.sol": {
        "BBroMerge": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vestings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100dd5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589160016000556001805433828060a01b038260081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36064600255736b9bb36519538e0c073894e964e90172e1c0b41f828060a01b031973de74eb14fb3f6f7236550819934065acc989062281600354161760035560045416176004556101008260a81b033360081b1690828060a81b0319161717600155338152a1604051610d8990816100e38239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da71461090c5750806324a47aeb1461082b57806334fcf4371461077857806335faa416146106305780635c975abb1461060c578063679aefce146105ed578063715018a6146105895780638da5cb5b1461055c5780638f4ffcb11461043557838163b6b55f251461038c57508063c4ae3168146102a9578063daf4986314610263578063e1f26f221461023c578063ea9f2417146101a55763f2fde38b146100ca57600080fd5b346101a15760203660031901126101a1576100e3610931565b6100eb61094c565b6001600160a01b0381811693909290841561014f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101a157826003193601126101a15760035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa918215610233575083916101fe575b6101fb92503391610a1a565b80f35b90506020823d821161022b575b81610218602093836109a7565b810103126101a1576101fb9151906101ef565b3d915061020b565b513d85823e3d90fd5b50346101a157826003193601126101a1575490516001600160a01b03909116815260209150f35b5050346102a55760203660031901126102a5579081906001600160a01b03610289610931565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101a157826003193601126101a1576102c261094c565b60015460ff81161561034b57506001549060ff821615610311575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361037c610d0f565b60ff19161760015551338152a180f35b80848434610431576020366003190112610431576103e96020916103ae61094c565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af190811561042857506103fd575080f35b61041d9060203d8111610421575b61041581836109a7565b810190610a02565b5080f35b503d61040b565b513d84823e3d90fd5b5050fd5b508290346102a55760803660031901126102a557610451610931565b906001600160a01b03604435818116036105545760643567ffffffffffffffff80821161055857366023830112156105585781840135908111610558573691016024011161055457600284541461051157600284556104ae610d0f565b600354169081156104ce5750906104c791602435610a1a565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102a557816003193601126102a557600154905160089190911c6001600160a01b03168152602090f35b83346105ea57806003193601126105ea576105a261094c565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102a557816003193601126102a5576020906002549051908152f35b5050346102a557816003193601126102a55760209060ff6001541690519015158152f35b509190346102a557816003193601126102a55761064b61094c565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561076e57869761073f575b5086156106fc57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561023357506106df578280f35b816106f592903d106104215761041581836109a7565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610767575b61075781836109a7565b8101031261055857519538610686565b503d61074d565b84513d88823e3d90fd5b5090346101a15760203660031901126101a15781359161079661094c565b82156107de575081600254036107aa578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102a5576020806003193601126101a15760035484516370a0823160e01b815233848201528335936001600160a01b0390921692908181602481875afa9081156109025790859187916108d1575b501061088f57846101fb338587610a1a565b855162461bcd60e51b815291820152601f60248201527f4242726f4d657267653a20496e73756666696369656e742062616c616e636500604482015260649150fd5b809250838092503d83116108fb575b6108ea81836109a7565b81010312610558578490518861087d565b503d6108e0565b87513d88823e3d90fd5b8490346102a557816003193601126102a5576003546001600160a01b03168152602090f35b600435906001600160a01b038216820361094757565b600080fd5b60015460081c6001600160a01b0316330361096357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff8211176109c957604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116109ec57565b634e487b7160e01b600052601160045260246000fd5b90816020910312610947575180151581036109475790565b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610cfb57906064610a5e9204906109df565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610cf1578591610cc0575b508511610c675785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610c5d57610c40575b5089549160a083901c60ff1615610ba6575050506201518060ff895460a01c160262ffffff8116908103610b9357610b1890426109df565b9083519284840184811067ffffffffffffffff821117610b80577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610c36577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610c19575b50610b79565b610c2f90843d86116104215761041581836109a7565b5038610c13565b82513d89823e3d90fd5b610c5690883d8a116104215761041581836109a7565b5038610ae0565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610cea575b610cd781836109a7565b81010312610ce6575138610a8f565b8480fd5b503d610ccd565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b60ff60015416610d1b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea26469706673582212202bed91b835f9bf6a7a22bb58b8ef2ca59dd24c362baaca1368648ec017580a6c64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDD JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD CALLER DUP3 DUP1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x8 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP3 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH20 0xDE74EB14FB3F6F7236550819934065ACC9890622 DUP2 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x100 DUP3 PUSH1 0xA8 SHL SUB CALLER PUSH1 0x8 SHL AND SWAP1 DUP3 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0x1 SSTORE CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD PUSH2 0xD89 SWAP1 DUP2 PUSH2 0xE3 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0x90C JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x435 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x38C JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1A5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0xE3 PUSH2 0x931 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x14F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x233 JUMPI POP DUP4 SWAP2 PUSH2 0x1FE JUMPI JUMPDEST PUSH2 0x1FB SWAP3 POP CALLER SWAP2 PUSH2 0xA1A JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x22B JUMPI JUMPDEST DUP2 PUSH2 0x218 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A1 JUMPI PUSH2 0x1FB SWAP2 MLOAD SWAP1 PUSH2 0x1EF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x289 PUSH2 0x931 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x2C2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x34B JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x311 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x37C PUSH2 0xD0F JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x431 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x431 JUMPI PUSH2 0x3E9 PUSH1 0x20 SWAP2 PUSH2 0x3AE PUSH2 0x94C JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x428 JUMPI POP PUSH2 0x3FD JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x41D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x421 JUMPI JUMPDEST PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA02 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x40B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x451 PUSH2 0x931 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x554 JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x558 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x554 JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x511 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x4AE PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI POP SWAP1 PUSH2 0x4C7 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x5EA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x5A2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x64B PUSH2 0x94C JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x76E JUMPI DUP7 SWAP8 PUSH2 0x73F JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x233 JUMPI POP PUSH2 0x6DF JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x6F5 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x767 JUMPI JUMPDEST PUSH2 0x757 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x686 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x74D JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x796 PUSH2 0x94C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7DE JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x7AA JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD MSTORE DUP4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x902 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0x8D1 JUMPI JUMPDEST POP LT PUSH2 0x88F JUMPI DUP5 PUSH2 0x1FB CALLER DUP6 DUP8 PUSH2 0xA1A JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4242726F4D657267653A20496E73756666696369656E742062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x8FB JUMPI JUMPDEST PUSH2 0x8EA DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x87D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8E0 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x947 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x963 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x9EC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x947 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x947 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xCFB JUMPI SWAP1 PUSH1 0x64 PUSH2 0xA5E SWAP3 DIV SWAP1 PUSH2 0x9DF JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xCF1 JUMPI DUP6 SWAP2 PUSH2 0xCC0 JUMPI JUMPDEST POP DUP6 GT PUSH2 0xC67 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xC5D JUMPI PUSH2 0xC40 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xBA6 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xB93 JUMPI PUSH2 0xB18 SWAP1 TIMESTAMP PUSH2 0x9DF JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB80 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xC36 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xC19 JUMPI JUMPDEST POP PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xC2F SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xC56 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xAE0 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xCEA JUMPI JUMPDEST PUSH2 0xCD7 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCE6 JUMPI MLOAD CODESIZE PUSH2 0xA8F JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCCD JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xED SWAP2 0xB8 CALLDATALOAD 0xF9 0xBF PUSH11 0x7A22BB58B8EF2CA59DD24C CALLDATASIZE 0x2B 0xAA 0xCA SGT PUSH9 0x648EC017580A6C6473 PUSH16 0x6C634300081300330000000000000000 ",
              "sourceMap": "349:1013:6:-:0;;;;;;;;2274:20:1;349:1013:6;1716:1:2;1821:22;349:1013:6;1716:1:2;349:1013:6;;734:10:5;349:1013:6;;;;;;;;;2566:40:0;1821:22:2;2566:40:0;;513:3:6;505:11;349:1013;594:42;349:1013;;;;;;535:42;349:1013;526:51;349:1013;;;526:51;349:1013;587:49;349:1013;;;587:49;349:1013;;;;;;734:10:5;349:1013:6;;;;;;;;;;;;;1716:1:2;349:1013:6;734:10:5;349:1013:6;;2274:20:1;349:1013:6;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 2353,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 2562,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2527,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2471,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 2380,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_merge": {
                  "entryPoint": 2586,
                  "id": 820,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 3343,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da71461090c5750806324a47aeb1461082b57806334fcf4371461077857806335faa416146106305780635c975abb1461060c578063679aefce146105ed578063715018a6146105895780638da5cb5b1461055c5780638f4ffcb11461043557838163b6b55f251461038c57508063c4ae3168146102a9578063daf4986314610263578063e1f26f221461023c578063ea9f2417146101a55763f2fde38b146100ca57600080fd5b346101a15760203660031901126101a1576100e3610931565b6100eb61094c565b6001600160a01b0381811693909290841561014f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101a157826003193601126101a15760035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa918215610233575083916101fe575b6101fb92503391610a1a565b80f35b90506020823d821161022b575b81610218602093836109a7565b810103126101a1576101fb9151906101ef565b3d915061020b565b513d85823e3d90fd5b50346101a157826003193601126101a1575490516001600160a01b03909116815260209150f35b5050346102a55760203660031901126102a5579081906001600160a01b03610289610931565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101a157826003193601126101a1576102c261094c565b60015460ff81161561034b57506001549060ff821615610311575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361037c610d0f565b60ff19161760015551338152a180f35b80848434610431576020366003190112610431576103e96020916103ae61094c565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af190811561042857506103fd575080f35b61041d9060203d8111610421575b61041581836109a7565b810190610a02565b5080f35b503d61040b565b513d84823e3d90fd5b5050fd5b508290346102a55760803660031901126102a557610451610931565b906001600160a01b03604435818116036105545760643567ffffffffffffffff80821161055857366023830112156105585781840135908111610558573691016024011161055457600284541461051157600284556104ae610d0f565b600354169081156104ce5750906104c791602435610a1a565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102a557816003193601126102a557600154905160089190911c6001600160a01b03168152602090f35b83346105ea57806003193601126105ea576105a261094c565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102a557816003193601126102a5576020906002549051908152f35b5050346102a557816003193601126102a55760209060ff6001541690519015158152f35b509190346102a557816003193601126102a55761064b61094c565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561076e57869761073f575b5086156106fc57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561023357506106df578280f35b816106f592903d106104215761041581836109a7565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610767575b61075781836109a7565b8101031261055857519538610686565b503d61074d565b84513d88823e3d90fd5b5090346101a15760203660031901126101a15781359161079661094c565b82156107de575081600254036107aa578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102a5576020806003193601126101a15760035484516370a0823160e01b815233848201528335936001600160a01b0390921692908181602481875afa9081156109025790859187916108d1575b501061088f57846101fb338587610a1a565b855162461bcd60e51b815291820152601f60248201527f4242726f4d657267653a20496e73756666696369656e742062616c616e636500604482015260649150fd5b809250838092503d83116108fb575b6108ea81836109a7565b81010312610558578490518861087d565b503d6108e0565b87513d88823e3d90fd5b8490346102a557816003193601126102a5576003546001600160a01b03168152602090f35b600435906001600160a01b038216820361094757565b600080fd5b60015460081c6001600160a01b0316330361096357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff8211176109c957604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116109ec57565b634e487b7160e01b600052601160045260246000fd5b90816020910312610947575180151581036109475790565b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610cfb57906064610a5e9204906109df565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610cf1578591610cc0575b508511610c675785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610c5d57610c40575b5089549160a083901c60ff1615610ba6575050506201518060ff895460a01c160262ffffff8116908103610b9357610b1890426109df565b9083519284840184811067ffffffffffffffff821117610b80577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610c36577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610c19575b50610b79565b610c2f90843d86116104215761041581836109a7565b5038610c13565b82513d89823e3d90fd5b610c5690883d8a116104215761041581836109a7565b5038610ae0565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610cea575b610cd781836109a7565b81010312610ce6575138610a8f565b8480fd5b503d610ccd565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b60ff60015416610d1b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea26469706673582212202bed91b835f9bf6a7a22bb58b8ef2ca59dd24c362baaca1368648ec017580a6c64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0x90C JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x435 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x38C JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1A5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0xE3 PUSH2 0x931 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x14F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x233 JUMPI POP DUP4 SWAP2 PUSH2 0x1FE JUMPI JUMPDEST PUSH2 0x1FB SWAP3 POP CALLER SWAP2 PUSH2 0xA1A JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x22B JUMPI JUMPDEST DUP2 PUSH2 0x218 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A1 JUMPI PUSH2 0x1FB SWAP2 MLOAD SWAP1 PUSH2 0x1EF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x289 PUSH2 0x931 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x2C2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x34B JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x311 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x37C PUSH2 0xD0F JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x431 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x431 JUMPI PUSH2 0x3E9 PUSH1 0x20 SWAP2 PUSH2 0x3AE PUSH2 0x94C JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x428 JUMPI POP PUSH2 0x3FD JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x41D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x421 JUMPI JUMPDEST PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA02 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x40B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x451 PUSH2 0x931 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x554 JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x558 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x554 JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x511 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x4AE PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI POP SWAP1 PUSH2 0x4C7 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x5EA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x5A2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x64B PUSH2 0x94C JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x76E JUMPI DUP7 SWAP8 PUSH2 0x73F JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x233 JUMPI POP PUSH2 0x6DF JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x6F5 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x767 JUMPI JUMPDEST PUSH2 0x757 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x686 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x74D JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x796 PUSH2 0x94C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7DE JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x7AA JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD MSTORE DUP4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x902 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0x8D1 JUMPI JUMPDEST POP LT PUSH2 0x88F JUMPI DUP5 PUSH2 0x1FB CALLER DUP6 DUP8 PUSH2 0xA1A JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4242726F4D657267653A20496E73756666696369656E742062616C616E636500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x8FB JUMPI JUMPDEST PUSH2 0x8EA DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x87D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8E0 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x947 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x963 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x9EC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x947 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x947 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xCFB JUMPI SWAP1 PUSH1 0x64 PUSH2 0xA5E SWAP3 DIV SWAP1 PUSH2 0x9DF JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xCF1 JUMPI DUP6 SWAP2 PUSH2 0xCC0 JUMPI JUMPDEST POP DUP6 GT PUSH2 0xC67 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xC5D JUMPI PUSH2 0xC40 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xBA6 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xB93 JUMPI PUSH2 0xB18 SWAP1 TIMESTAMP PUSH2 0x9DF JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB80 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xC36 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xC19 JUMPI JUMPDEST POP PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xC2F SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xC56 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xAE0 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xCEA JUMPI JUMPDEST PUSH2 0xCD7 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCE6 JUMPI MLOAD CODESIZE PUSH2 0xA8F JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCCD JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xED SWAP2 0xB8 CALLDATALOAD 0xF9 0xBF PUSH11 0x7A22BB58B8EF2CA59DD24C CALLDATASIZE 0x2B 0xAA 0xCA SGT PUSH9 0x648EC017580A6C6473 PUSH16 0x6C634300081300330000000000000000 ",
              "sourceMap": "349:1013:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;349:1013:6;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;349:1013:6;;;;;;;2162:22:0;;349:1013:6;;-1:-1:-1;;349:1013:6;;;-1:-1:-1;;;;;;349:1013:6;;;;;;-1:-1:-1;;;;;349:1013:6;;;;;;;;2566:40:0;;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;898:36:6;;923:10;898:36;;;349:1013;;;;-1:-1:-1;;;;;349:1013:6;898:36;349:1013;;;;898:36;;;;;;;;;;;;349:1013;968:10;923;;;968;;:::i;:::-;349:1013;;898:36;;;;;;;;;;;;;;;;;:::i;:::-;;;349:1013;;;;968:10;349:1013;;898:36;;;;;;-1:-1:-1;898:36:6;;;349:1013;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:1013:6;;;;;;;-1:-1:-1;349:1013:6;;;;;;;;;-1:-1:-1;;349:1013:6;;;;;;;-1:-1:-1;;;;;349:1013:6;;:::i;:::-;;;;661:43:8;349:1013:6;;;;;;661:43:8;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;349:1013:6;;;;;;;;1685:7:1;349:1013:6;;;;;;;;-1:-1:-1;;;349:1013:6;1685:7:1;349:1013:6;;734:10:5;349:1013:6;;2521:22:1;;349:1013:6;;2521:22:1;349:1013:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;2499:32:8;349:1013:6;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;349:1013:6;;1685:7:1;349:1013:6;;734:10:5;349:1013:6;;2274:20:1;349:1013:6;;;;;;;;;;;-1:-1:-1;;349:1013:6;;;;2597:60:8;349:1013:6;1063:62:0;;;:::i;:::-;349:1013:6;;;;-1:-1:-1;;;2597:60:8;;2623:10;2597:60;;;349:1013:6;;;2643:4:8;349:1013:6;;;;;;;;;;;;;-1:-1:-1;;;;;349:1013:6;;;;;;;;;;;;2597:60:8;;;;;;;;;;;;;349:1013:6;;;2597:60:8;;;349:1013:6;2597:60:8;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;349:1013:6;;2597:60:8;;;;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;349:1013:6;;;;;;:::i;:::-;;-1:-1:-1;;;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;349:1013:6;;2468:19:2;1759:1;;;349:1013:6;;1204:72:1;;:::i;:::-;349:1013:6;;;2269:20:8;;;349:1013:6;;;;2429:4:8;349:1013:6;;;2429:4:8;:::i;:::-;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;349:1013:6;;-1:-1:-1;;;1759:1:2;;349:1013:6;1759:1:2;;;;349:1013:6;;1759:1:2;;349:1013:6;1759:1:2;349:1013:6;;;1759:1:2;349:1013:6;;1759:1:2;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:1013:6;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;349:1013:6;;-1:-1:-1;;;;;;349:1013:6;;;;;;;;;-1:-1:-1;;;;;349:1013:6;2566:40:0;349:1013:6;;2566:40:0;349:1013:6;;;;;;;;;;;;;;;;;;;;;736:5;349:1013;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;349:1013:6;;;;-1:-1:-1;;;1820:37:8;;1851:4;1820:37;;;349:1013:6;;1820:37:8;;349:1013:6;-1:-1:-1;;;;;349:1013:6;;;;;1820:37:8;349:1013:6;;;;1820:37:8;;;;;;;;;;;349:1013:6;1875:11:8;;;349:1013:6;;;;;;-1:-1:-1;;;1927:39:8;;-1:-1:-1;;;;;349:1013:6;;;;;;;;;1927:39:8;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;1927:39:8;;;;;;;;;;;;349:1013:6;;;1927:39:8;;;;;;-1:-1:-1;1927:39:8;;;;;;:::i;:::-;;;;349:1013:6;;;;;;-1:-1:-1;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;1820:37:8;;;;;;;;;;;;;;;;;:::i;:::-;;;349:1013:6;;;;;1820:37:8;;;;;;;;;;349:1013:6;;;;;;;;;;;;;;;;;-1:-1:-1;;349:1013:6;;;;;;1063:62:0;;;:::i;:::-;770:8:8;;349:1013:6;;;;832:5:8;349:1013:6;832:13:8;828:92;;349:1013:6;;;828:92:8;349:1013:6;;;892:17:8;349:1013:6;832:5:8;349:1013:6;;;;;892:17:8;828:92;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1060:36:6;;1085:10;1060:36;;;349:1013;;;;-1:-1:-1;;;;;349:1013:6;;;;;;;;;;1060:36;;;;;;;;;;;;;;349:1013;1114:17;;349:1013;;1085:10;1201;1085;;;1201;:::i;349:1013::-;;;-1:-1:-1;;;349:1013:6;;;;;;;;;;;;;;;;;;-1:-1:-1;349:1013:6;1060:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;349:1013;;;;;;;1060:36;;;;;;;;;349:1013;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:1013:6;;;;;;;;;;-1:-1:-1;;;;;349:1013:6;;;;;;:::o;:::-;;;;1359:130:0;349:1013:6;;;;-1:-1:-1;;;;;349:1013:6;734:10:5;1422:23:0;349:1013:6;;1359:130:0:o;349:1013:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;932:818:8:-;;;;349:1013:6;;;;;;;;;-1:-1:-1;;349:1013:6;;;;;;1035:8:8;349:1013:6;;;;;;;;1116:5:8;349:1013:6;;;;;;;;;;;;;;;;1125:3:8;1091:37;349:1013:6;;1091:37:8;;:::i;:::-;1184:4;;349:1013:6;;;;;;;;;;;;;;;;;1177:37:8;;1208:4;1177:37;;;349:1013:6;1177:37:8;;;;;;;;;;;932:818;1159:55;;;349:1013:6;;;;-1:-1:-1;;;1332:55:8;;-1:-1:-1;;;;;349:1013:6;;1332:55:8;;;349:1013:6;;;1208:4:8;349:1013:6;;;;;;;;;;;;;;;;1332:55:8;;;;349:1013:6;1332:55:8;;349:1013:6;;;;;;1332:55:8;;;;;;;;932:818;-1:-1:-1;349:1013:6;;;;;;;;;1436:20:8;349:1013:6;;;;;1569:6:8;349:1013:6;;;;;;;;;;;;;;;1533:42:8;:15;;:42;:::i;:::-;349:1013:6;;;;;;;;;;;;;;;;1723:20:8;349:1013:6;;;;;;;;;;;;;;1495:82:8;;;349:1013:6;;;1481:10:8;349:1013:6;;1035:8:8;349:1013:6;;;;;;;;;;;1432:276:8;349:1013:6;;;;1723:20:8;932:818::o;349:1013:6:-;-1:-1:-1;;;349:1013:6;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;;;;1432:276:8;349:1013:6;;-1:-1:-1;;;1654:43:8;;-1:-1:-1;;;;;349:1013:6;;;1654:43:8;;;349:1013:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:43:8;349:1013:6;;1654:43:8;;;;;;1723:20;1654:43;;;;;;1432:276;;;;1654:43;;;;;;;;;;;;;:::i;:::-;;;;;;349:1013:6;;;;;;;;;1332:55:8;;;;;;;;;;;;;:::i;:::-;;;;;;349:1013:6;;;;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:3:8;349:1013:6;;;;;;1177:37:8;;;;;;;;;;;;;;;;:::i;:::-;;;349:1013:6;;;;;1177:37:8;;;349:1013:6;;;;1177:37:8;;;;;;349:1013:6;;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;;;;1767:106:1;349:1013:6;1685:7:1;349:1013:6;;;;1767:106:1:o;349:1013:6:-;;;-1:-1:-1;;;349:1013:6;;;;;;;;;;;;-1:-1:-1;;;349:1013:6;;;;;;"
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "vestings(address)": "daf49863",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/BBroMerge.sol\":\"BBroMerge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/BBroMerge.sol\":{\"keccak256\":\"0x005e74e1ef49029f6f086a568d7ef5ed1f035641c0701fb61cbc1bdfc6d5230a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://effee9bda1623603e2cfbfe050288c899bab93c589009d5886347ca9dcbd8852\",\"dweb:/ipfs/QmZSiACyLPHtjbx5m5ggCVu862G1aSPz3iqc81ybtjW48a\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x731fc249ed278f3760a6bef8d362dfce289a1055f37632e5e87bc0cc69c70a33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1ded46e25d0fba5cec5ce15c2561fa37bd14ed4067bc488fd89f17b7c2775c9\",\"dweb:/ipfs/QmZimcRTRiSvZD2kxcHDHpkYTidBYa12yUf1L3Ze1JPYsG\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/BroMerge.sol": {
        "BroMerge": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vestings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100dd5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589160016000556001805433828060a01b038260081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36064600255736b9bb36519538e0c073894e964e90172e1c0b41f828060a01b03197393750140c2ecea27a53c6ed30380829607815a3181600354161760035560045416176004556101008260a81b033360081b1690828060a81b0319161717600155338152a1604051610d8990816100e38239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da71461090c5750806324a47aeb1461082b57806334fcf4371461077857806335faa416146106305780635c975abb1461060c578063679aefce146105ed578063715018a6146105895780638da5cb5b1461055c5780638f4ffcb11461043557838163b6b55f251461038c57508063c4ae3168146102a9578063daf4986314610263578063e1f26f221461023c578063ea9f2417146101a55763f2fde38b146100ca57600080fd5b346101a15760203660031901126101a1576100e3610931565b6100eb61094c565b6001600160a01b0381811693909290841561014f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101a157826003193601126101a15760035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa918215610233575083916101fe575b6101fb92503391610a1a565b80f35b90506020823d821161022b575b81610218602093836109a7565b810103126101a1576101fb9151906101ef565b3d915061020b565b513d85823e3d90fd5b50346101a157826003193601126101a1575490516001600160a01b03909116815260209150f35b5050346102a55760203660031901126102a5579081906001600160a01b03610289610931565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101a157826003193601126101a1576102c261094c565b60015460ff81161561034b57506001549060ff821615610311575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361037c610d0f565b60ff19161760015551338152a180f35b80848434610431576020366003190112610431576103e96020916103ae61094c565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af190811561042857506103fd575080f35b61041d9060203d8111610421575b61041581836109a7565b810190610a02565b5080f35b503d61040b565b513d84823e3d90fd5b5050fd5b508290346102a55760803660031901126102a557610451610931565b906001600160a01b03604435818116036105545760643567ffffffffffffffff80821161055857366023830112156105585781840135908111610558573691016024011161055457600284541461051157600284556104ae610d0f565b600354169081156104ce5750906104c791602435610a1a565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102a557816003193601126102a557600154905160089190911c6001600160a01b03168152602090f35b83346105ea57806003193601126105ea576105a261094c565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102a557816003193601126102a5576020906002549051908152f35b5050346102a557816003193601126102a55760209060ff6001541690519015158152f35b509190346102a557816003193601126102a55761064b61094c565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561076e57869761073f575b5086156106fc57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561023357506106df578280f35b816106f592903d106104215761041581836109a7565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610767575b61075781836109a7565b8101031261055857519538610686565b503d61074d565b84513d88823e3d90fd5b5090346101a15760203660031901126101a15781359161079661094c565b82156107de575081600254036107aa578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102a5576020806003193601126101a15760035484516370a0823160e01b815233848201528335936001600160a01b0390921692908181602481875afa9081156109025790859187916108d1575b501061088f57846101fb338587610a1a565b855162461bcd60e51b815291820152601e60248201527f42726f4d657267653a20496e73756666696369656e742062616c616e63650000604482015260649150fd5b809250838092503d83116108fb575b6108ea81836109a7565b81010312610558578490518861087d565b503d6108e0565b87513d88823e3d90fd5b8490346102a557816003193601126102a5576003546001600160a01b03168152602090f35b600435906001600160a01b038216820361094757565b600080fd5b60015460081c6001600160a01b0316330361096357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff8211176109c957604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116109ec57565b634e487b7160e01b600052601160045260246000fd5b90816020910312610947575180151581036109475790565b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610cfb57906064610a5e9204906109df565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610cf1578591610cc0575b508511610c675785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610c5d57610c40575b5089549160a083901c60ff1615610ba6575050506201518060ff895460a01c160262ffffff8116908103610b9357610b1890426109df565b9083519284840184811067ffffffffffffffff821117610b80577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610c36577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610c19575b50610b79565b610c2f90843d86116104215761041581836109a7565b5038610c13565b82513d89823e3d90fd5b610c5690883d8a116104215761041581836109a7565b5038610ae0565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610cea575b610cd781836109a7565b81010312610ce6575138610a8f565b8480fd5b503d610ccd565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b60ff60015416610d1b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea2646970667358221220d2f773ea0eb82ebbc261018cf7e7d62b2a66071d13525872e96299203815462464736f6c63430008130033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDD JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD CALLER DUP3 DUP1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x8 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP3 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH20 0x93750140C2ECEA27A53C6ED30380829607815A31 DUP2 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x100 DUP3 PUSH1 0xA8 SHL SUB CALLER PUSH1 0x8 SHL AND SWAP1 DUP3 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0x1 SSTORE CALLER DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD PUSH2 0xD89 SWAP1 DUP2 PUSH2 0xE3 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0x90C JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x435 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x38C JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1A5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0xE3 PUSH2 0x931 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x14F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x233 JUMPI POP DUP4 SWAP2 PUSH2 0x1FE JUMPI JUMPDEST PUSH2 0x1FB SWAP3 POP CALLER SWAP2 PUSH2 0xA1A JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x22B JUMPI JUMPDEST DUP2 PUSH2 0x218 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A1 JUMPI PUSH2 0x1FB SWAP2 MLOAD SWAP1 PUSH2 0x1EF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x289 PUSH2 0x931 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x2C2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x34B JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x311 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x37C PUSH2 0xD0F JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x431 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x431 JUMPI PUSH2 0x3E9 PUSH1 0x20 SWAP2 PUSH2 0x3AE PUSH2 0x94C JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x428 JUMPI POP PUSH2 0x3FD JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x41D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x421 JUMPI JUMPDEST PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA02 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x40B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x451 PUSH2 0x931 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x554 JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x558 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x554 JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x511 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x4AE PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI POP SWAP1 PUSH2 0x4C7 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x5EA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x5A2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x64B PUSH2 0x94C JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x76E JUMPI DUP7 SWAP8 PUSH2 0x73F JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x233 JUMPI POP PUSH2 0x6DF JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x6F5 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x767 JUMPI JUMPDEST PUSH2 0x757 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x686 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x74D JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x796 PUSH2 0x94C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7DE JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x7AA JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD MSTORE DUP4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x902 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0x8D1 JUMPI JUMPDEST POP LT PUSH2 0x88F JUMPI DUP5 PUSH2 0x1FB CALLER DUP6 DUP8 PUSH2 0xA1A JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42726F4D657267653A20496E73756666696369656E742062616C616E63650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x8FB JUMPI JUMPDEST PUSH2 0x8EA DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x87D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8E0 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x947 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x963 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x9EC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x947 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x947 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xCFB JUMPI SWAP1 PUSH1 0x64 PUSH2 0xA5E SWAP3 DIV SWAP1 PUSH2 0x9DF JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xCF1 JUMPI DUP6 SWAP2 PUSH2 0xCC0 JUMPI JUMPDEST POP DUP6 GT PUSH2 0xC67 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xC5D JUMPI PUSH2 0xC40 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xBA6 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xB93 JUMPI PUSH2 0xB18 SWAP1 TIMESTAMP PUSH2 0x9DF JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB80 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xC36 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xC19 JUMPI JUMPDEST POP PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xC2F SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xC56 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xAE0 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xCEA JUMPI JUMPDEST PUSH2 0xCD7 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCE6 JUMPI MLOAD CODESIZE PUSH2 0xA8F JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCCD JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xF7 PUSH20 0xEA0EB82EBBC261018CF7E7D62B2A66071D135258 PUSH19 0xE96299203815462464736F6C63430008130033 ",
              "sourceMap": "349:1011:7:-:0;;;;;;;;2274:20:1;349:1011:7;1716:1:2;1821:22;349:1011:7;1716:1:2;349:1011:7;;734:10:5;349:1011:7;;;;;;;;;2566:40:0;1821:22:2;2566:40:0;;512:3:7;504:11;349:1011;593:42;349:1011;;;;;;534:42;349:1011;525:51;349:1011;;;525:51;349:1011;586:49;349:1011;;;586:49;349:1011;;;;;;734:10:5;349:1011:7;;;;;;;;;;;;;1716:1:2;349:1011:7;734:10:5;349:1011:7;;2274:20:1;349:1011:7;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 2353,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 2562,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2527,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2471,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 2380,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_merge": {
                  "entryPoint": 2586,
                  "id": 820,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 3343,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da71461090c5750806324a47aeb1461082b57806334fcf4371461077857806335faa416146106305780635c975abb1461060c578063679aefce146105ed578063715018a6146105895780638da5cb5b1461055c5780638f4ffcb11461043557838163b6b55f251461038c57508063c4ae3168146102a9578063daf4986314610263578063e1f26f221461023c578063ea9f2417146101a55763f2fde38b146100ca57600080fd5b346101a15760203660031901126101a1576100e3610931565b6100eb61094c565b6001600160a01b0381811693909290841561014f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101a157826003193601126101a15760035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa918215610233575083916101fe575b6101fb92503391610a1a565b80f35b90506020823d821161022b575b81610218602093836109a7565b810103126101a1576101fb9151906101ef565b3d915061020b565b513d85823e3d90fd5b50346101a157826003193601126101a1575490516001600160a01b03909116815260209150f35b5050346102a55760203660031901126102a5579081906001600160a01b03610289610931565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101a157826003193601126101a1576102c261094c565b60015460ff81161561034b57506001549060ff821615610311575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361037c610d0f565b60ff19161760015551338152a180f35b80848434610431576020366003190112610431576103e96020916103ae61094c565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af190811561042857506103fd575080f35b61041d9060203d8111610421575b61041581836109a7565b810190610a02565b5080f35b503d61040b565b513d84823e3d90fd5b5050fd5b508290346102a55760803660031901126102a557610451610931565b906001600160a01b03604435818116036105545760643567ffffffffffffffff80821161055857366023830112156105585781840135908111610558573691016024011161055457600284541461051157600284556104ae610d0f565b600354169081156104ce5750906104c791602435610a1a565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102a557816003193601126102a557600154905160089190911c6001600160a01b03168152602090f35b83346105ea57806003193601126105ea576105a261094c565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102a557816003193601126102a5576020906002549051908152f35b5050346102a557816003193601126102a55760209060ff6001541690519015158152f35b509190346102a557816003193601126102a55761064b61094c565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561076e57869761073f575b5086156106fc57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561023357506106df578280f35b816106f592903d106104215761041581836109a7565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610767575b61075781836109a7565b8101031261055857519538610686565b503d61074d565b84513d88823e3d90fd5b5090346101a15760203660031901126101a15781359161079661094c565b82156107de575081600254036107aa578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102a5576020806003193601126101a15760035484516370a0823160e01b815233848201528335936001600160a01b0390921692908181602481875afa9081156109025790859187916108d1575b501061088f57846101fb338587610a1a565b855162461bcd60e51b815291820152601e60248201527f42726f4d657267653a20496e73756666696369656e742062616c616e63650000604482015260649150fd5b809250838092503d83116108fb575b6108ea81836109a7565b81010312610558578490518861087d565b503d6108e0565b87513d88823e3d90fd5b8490346102a557816003193601126102a5576003546001600160a01b03168152602090f35b600435906001600160a01b038216820361094757565b600080fd5b60015460081c6001600160a01b0316330361096357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff8211176109c957604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116109ec57565b634e487b7160e01b600052601160045260246000fd5b90816020910312610947575180151581036109475790565b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610cfb57906064610a5e9204906109df565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610cf1578591610cc0575b508511610c675785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610c5d57610c40575b5089549160a083901c60ff1615610ba6575050506201518060ff895460a01c160262ffffff8116908103610b9357610b1890426109df565b9083519284840184811067ffffffffffffffff821117610b80577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610c36577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610c19575b50610b79565b610c2f90843d86116104215761041581836109a7565b5038610c13565b82513d89823e3d90fd5b610c5690883d8a116104215761041581836109a7565b5038610ae0565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610cea575b610cd781836109a7565b81010312610ce6575138610a8f565b8480fd5b503d610ccd565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b60ff60015416610d1b57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fdfea2646970667358221220d2f773ea0eb82ebbc261018cf7e7d62b2a66071d13525872e96299203815462464736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0x90C JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x435 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x38C JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1A5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0xE3 PUSH2 0x931 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x14F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x233 JUMPI POP DUP4 SWAP2 PUSH2 0x1FE JUMPI JUMPDEST PUSH2 0x1FB SWAP3 POP CALLER SWAP2 PUSH2 0xA1A JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x22B JUMPI JUMPDEST DUP2 PUSH2 0x218 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A1 JUMPI PUSH2 0x1FB SWAP2 MLOAD SWAP1 PUSH2 0x1EF JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x289 PUSH2 0x931 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x2C2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x34B JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x311 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x37C PUSH2 0xD0F JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x431 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x431 JUMPI PUSH2 0x3E9 PUSH1 0x20 SWAP2 PUSH2 0x3AE PUSH2 0x94C JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x428 JUMPI POP PUSH2 0x3FD JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x41D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x421 JUMPI JUMPDEST PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA02 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x40B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x451 PUSH2 0x931 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x554 JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x558 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x558 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x558 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x554 JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x511 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x4AE PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI POP SWAP1 PUSH2 0x4C7 SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x5EA JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x5A2 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH2 0x64B PUSH2 0x94C JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x76E JUMPI DUP7 SWAP8 PUSH2 0x73F JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x233 JUMPI POP PUSH2 0x6DF JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x6F5 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x767 JUMPI JUMPDEST PUSH2 0x757 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x686 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x74D JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x796 PUSH2 0x94C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x7DE JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x7AA JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD MSTORE DUP4 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x902 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0x8D1 JUMPI JUMPDEST POP LT PUSH2 0x88F JUMPI DUP5 PUSH2 0x1FB CALLER DUP6 DUP8 PUSH2 0xA1A JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42726F4D657267653A20496E73756666696369656E742062616C616E63650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x8FB JUMPI JUMPDEST PUSH2 0x8EA DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x558 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x87D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8E0 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2A5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A5 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x947 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x963 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x9C9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x9EC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x947 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x947 JUMPI SWAP1 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xCFB JUMPI SWAP1 PUSH1 0x64 PUSH2 0xA5E SWAP3 DIV SWAP1 PUSH2 0x9DF JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xCF1 JUMPI DUP6 SWAP2 PUSH2 0xCC0 JUMPI JUMPDEST POP DUP6 GT PUSH2 0xC67 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xC5D JUMPI PUSH2 0xC40 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xBA6 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xB93 JUMPI PUSH2 0xB18 SWAP1 TIMESTAMP PUSH2 0x9DF JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB80 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xC36 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xC19 JUMPI JUMPDEST POP PUSH2 0xB79 JUMP JUMPDEST PUSH2 0xC2F SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xC13 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xC56 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x421 JUMPI PUSH2 0x415 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST POP CODESIZE PUSH2 0xAE0 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xCEA JUMPI JUMPDEST PUSH2 0xCD7 DUP2 DUP4 PUSH2 0x9A7 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCE6 JUMPI MLOAD CODESIZE PUSH2 0xA8F JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCCD JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xF7 PUSH20 0xEA0EB82EBBC261018CF7E7D62B2A66071D135258 PUSH19 0xE96299203815462464736F6C63430008130033 ",
              "sourceMap": "349:1011:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;349:1011:7;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;349:1011:7;;;;;;;2162:22:0;;349:1011:7;;-1:-1:-1;;349:1011:7;;;-1:-1:-1;;;;;;349:1011:7;;;;;;-1:-1:-1;;;;;349:1011:7;;;;;;;;2566:40:0;;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;897:36:7;;922:10;897:36;;;349:1011;;;;-1:-1:-1;;;;;349:1011:7;897:36;349:1011;;;;897:36;;;;;;;;;;;;349:1011;967:10;922;;;967;;:::i;:::-;349:1011;;897:36;;;;;;;;;;;;;;;;;:::i;:::-;;;349:1011;;;;967:10;349:1011;;897:36;;;;;;-1:-1:-1;897:36:7;;;349:1011;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:1011:7;;;;;;;-1:-1:-1;349:1011:7;;;;;;;;;-1:-1:-1;;349:1011:7;;;;;;;-1:-1:-1;;;;;349:1011:7;;:::i;:::-;;;;661:43:8;349:1011:7;;;;;;661:43:8;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;349:1011:7;;;;;;;;1685:7:1;349:1011:7;;;;;;;;-1:-1:-1;;;349:1011:7;1685:7:1;349:1011:7;;734:10:5;349:1011:7;;2521:22:1;;349:1011:7;;2521:22:1;349:1011:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;2499:32:8;349:1011:7;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;349:1011:7;;1685:7:1;349:1011:7;;734:10:5;349:1011:7;;2274:20:1;349:1011:7;;;;;;;;;;;-1:-1:-1;;349:1011:7;;;;2597:60:8;349:1011:7;1063:62:0;;;:::i;:::-;349:1011:7;;;;-1:-1:-1;;;2597:60:8;;2623:10;2597:60;;;349:1011:7;;;2643:4:8;349:1011:7;;;;;;;;;;;;;-1:-1:-1;;;;;349:1011:7;;;;;;;;;;;;2597:60:8;;;;;;;;;;;;;349:1011:7;;;2597:60:8;;;349:1011:7;2597:60:8;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;349:1011:7;;2597:60:8;;;;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;349:1011:7;;;;;;:::i;:::-;;-1:-1:-1;;;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;349:1011:7;;2468:19:2;1759:1;;;349:1011:7;;1204:72:1;;:::i;:::-;349:1011:7;;;2269:20:8;;;349:1011:7;;;;2429:4:8;349:1011:7;;;2429:4:8;:::i;:::-;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;349:1011:7;;-1:-1:-1;;;1759:1:2;;349:1011:7;1759:1:2;;;;349:1011:7;;1759:1:2;;349:1011:7;1759:1:2;349:1011:7;;;1759:1:2;349:1011:7;;1759:1:2;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:1011:7;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;349:1011:7;;-1:-1:-1;;;;;;349:1011:7;;;;;;;;;-1:-1:-1;;;;;349:1011:7;2566:40:0;349:1011:7;;2566:40:0;349:1011:7;;;;;;;;;;;;;;;;;;;;;735:5;349:1011;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;349:1011:7;;;;-1:-1:-1;;;1820:37:8;;1851:4;1820:37;;;349:1011:7;;1820:37:8;;349:1011:7;-1:-1:-1;;;;;349:1011:7;;;;;1820:37:8;349:1011:7;;;;1820:37:8;;;;;;;;;;;349:1011:7;1875:11:8;;;349:1011:7;;;;;;-1:-1:-1;;;1927:39:8;;-1:-1:-1;;;;;349:1011:7;;;;;;;;;1927:39:8;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;1927:39:8;;;;;;;;;;;;349:1011:7;;;1927:39:8;;;;;;-1:-1:-1;1927:39:8;;;;;;:::i;:::-;;;;349:1011:7;;;;;;-1:-1:-1;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;1820:37:8;;;;;;;;;;;;;;;;;:::i;:::-;;;349:1011:7;;;;;1820:37:8;;;;;;;;;;349:1011:7;;;;;;;;;;;;;;;;;-1:-1:-1;;349:1011:7;;;;;;1063:62:0;;;:::i;:::-;770:8:8;;349:1011:7;;;;832:5:8;349:1011:7;832:13:8;828:92;;349:1011:7;;;828:92:8;349:1011:7;;;892:17:8;349:1011:7;832:5:8;349:1011:7;;;;;892:17:8;828:92;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1059:36:7;;1084:10;1059:36;;;349:1011;;;;-1:-1:-1;;;;;349:1011:7;;;;;;;;;;1059:36;;;;;;;;;;;;;;349:1011;1113:17;;349:1011;;1084:10;1199;1084;;;1199;:::i;349:1011::-;;;-1:-1:-1;;;349:1011:7;;;;;;;;;;;;;;;;;;-1:-1:-1;349:1011:7;1059:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;349:1011;;;;;;;1059:36;;;;;;;;;349:1011;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;349:1011:7;;;;;;;;;;-1:-1:-1;;;;;349:1011:7;;;;;;:::o;:::-;;;;1359:130:0;349:1011:7;;;;-1:-1:-1;;;;;349:1011:7;734:10:5;1422:23:0;349:1011:7;;1359:130:0:o;349:1011:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;932:818:8:-;;;;349:1011:7;;;;;;;;;-1:-1:-1;;349:1011:7;;;;;;1035:8:8;349:1011:7;;;;;;;;1116:5:8;349:1011:7;;;;;;;;;;;;;;;;1125:3:8;1091:37;349:1011:7;;1091:37:8;;:::i;:::-;1184:4;;349:1011:7;;;;;;;;;;;;;;;;;1177:37:8;;1208:4;1177:37;;;349:1011:7;1177:37:8;;;;;;;;;;;932:818;1159:55;;;349:1011:7;;;;-1:-1:-1;;;1332:55:8;;-1:-1:-1;;;;;349:1011:7;;1332:55:8;;;349:1011:7;;;1208:4:8;349:1011:7;;;;;;;;;;;;;;;;1332:55:8;;;;349:1011:7;1332:55:8;;349:1011:7;;;;;;1332:55:8;;;;;;;;932:818;-1:-1:-1;349:1011:7;;;;;;;;;1436:20:8;349:1011:7;;;;;1569:6:8;349:1011:7;;;;;;;;;;;;;;;1533:42:8;:15;;:42;:::i;:::-;349:1011:7;;;;;;;;;;;;;;;;1723:20:8;349:1011:7;;;;;;;;;;;;;;1495:82:8;;;349:1011:7;;;1481:10:8;349:1011:7;;1035:8:8;349:1011:7;;;;;;;;;;;1432:276:8;349:1011:7;;;;1723:20:8;932:818::o;349:1011:7:-;-1:-1:-1;;;349:1011:7;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;;;;1432:276:8;349:1011:7;;-1:-1:-1;;;1654:43:8;;-1:-1:-1;;;;;349:1011:7;;;1654:43:8;;;349:1011:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:43:8;349:1011:7;;1654:43:8;;;;;;1723:20;1654:43;;;;;;1432:276;;;;1654:43;;;;;;;;;;;;;:::i;:::-;;;;;;349:1011:7;;;;;;;;;1332:55:8;;;;;;;;;;;;;:::i;:::-;;;;;;349:1011:7;;;;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:3:8;349:1011:7;;;;;;1177:37:8;;;;;;;;;;;;;;;;:::i;:::-;;;349:1011:7;;;;;1177:37:8;;;349:1011:7;;;;1177:37:8;;;;;;349:1011:7;;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;;;;1767:106:1;349:1011:7;1685:7:1;349:1011:7;;;;1767:106:1:o;349:1011:7:-;;;-1:-1:-1;;;349:1011:7;;;;;;;;;;;;-1:-1:-1;;;349:1011:7;;;;;;"
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "vestings(address)": "daf49863",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/BroMerge.sol\":\"BroMerge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/BroMerge.sol\":{\"keccak256\":\"0x3178188d7efd80971f308fa6110a659741947c0adbecc6a42efc2acda2cf6ae1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b629488c4cc35f7fb7416b9fa306f9b4c3bca1d979671cd1dfce7af0499a80e\",\"dweb:/ipfs/QmReH7aEoGHbVizVe3LRKY8YBJREGLeqZ4bmfqfcPV34Rm\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x731fc249ed278f3760a6bef8d362dfce289a1055f37632e5e87bc0cc69c70a33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1ded46e25d0fba5cec5ce15c2561fa37bd14ed4067bc488fd89f17b7c2775c9\",\"dweb:/ipfs/QmZimcRTRiSvZD2kxcHDHpkYTidBYa12yUf1L3Ze1JPYsG\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/Eater.sol": {
        "Eater": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vestings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "vestings(address)": "daf49863",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/Eater.sol\":\"Eater\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x731fc249ed278f3760a6bef8d362dfce289a1055f37632e5e87bc0cc69c70a33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1ded46e25d0fba5cec5ce15c2561fa37bd14ed4067bc488fd89f17b7c2775c9\",\"dweb:/ipfs/QmZimcRTRiSvZD2kxcHDHpkYTidBYa12yUf1L3Ze1JPYsG\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/GenericMerge.sol": {
        "GenericMerge": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_wewe",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_vestingDuration",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "canClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vestings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 288,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x105 JUMPI PUSH1 0x1F PUSH2 0x1084 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x105 JUMPI PUSH2 0x47 DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x55 PUSH1 0x20 DUP5 ADD PUSH2 0x120 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x105 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP1 DUP3 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x4 SLOAD SWAP5 AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP4 AND SWAP2 AND OR OR PUSH1 0x4 SSTORE PUSH2 0xF4F SWAP1 DUP2 PUSH2 0x135 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x105 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xA57 JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8A9 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x761 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x49D JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x3F4 JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1C6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x104 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x10C PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x170 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x1E0 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x25C JUMPI POP DUP4 SWAP2 PUSH2 0x227 JUMPI JUMPDEST PUSH2 0x224 SWAP3 POP CALLER SWAP2 PUSH2 0xBA9 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x254 JUMPI JUMPDEST DUP2 PUSH2 0x241 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C2 JUMPI PUSH2 0x224 SWAP2 MLOAD SWAP1 PUSH2 0x218 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x234 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2B2 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x2EB PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x374 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x33A JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x3A5 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x499 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x499 JUMPI PUSH2 0x451 PUSH1 0x20 SWAP2 PUSH2 0x416 PUSH2 0xA97 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI POP PUSH2 0x465 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x485 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI JUMPDEST PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB2A JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x473 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x4B9 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x5C0 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x5C0 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x5C0 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x5BC JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x579 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x516 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x536 JUMPI POP SWAP1 PUSH2 0x52F SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x652 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x652 JUMPI PUSH2 0x60A PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x67D PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x6EA PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x754 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x716 JUMPI DUP3 PUSH2 0x224 PUSH2 0xE9E JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x75C PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x77C PUSH2 0xA97 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x89F JUMPI DUP7 SWAP8 PUSH2 0x870 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x82D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x25C JUMPI POP PUSH2 0x810 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x826 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x898 JUMPI JUMPDEST PUSH2 0x888 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7B7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x87E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8C7 PUSH2 0xA97 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x90F JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x8DB JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x97C PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA4D JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA1C JUMPI JUMPDEST POP LT PUSH2 0x9C8 JUMPI DUP5 PUSH2 0x224 CALLER DUP6 DUP8 PUSH2 0xBA9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA46 JUMPI JUMPDEST PUSH2 0xA35 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9B6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA2B JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA92 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAAE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB14 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xA92 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xA92 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xB4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB93 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xE8A JUMPI SWAP1 PUSH1 0x64 PUSH2 0xBED SWAP3 DIV SWAP1 PUSH2 0xB86 JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE80 JUMPI DUP6 SWAP2 PUSH2 0xE4F JUMPI JUMPDEST POP DUP6 GT PUSH2 0xDF6 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDCF JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xD35 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xD22 JUMPI PUSH2 0xCA7 SWAP1 TIMESTAMP PUSH2 0xB86 JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0F JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xDA8 JUMPI JUMPDEST POP PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xDBE SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA2 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE5 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xC6F JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE79 JUMPI JUMPDEST PUSH2 0xE66 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE75 JUMPI MLOAD CODESIZE PUSH2 0xC1E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xE5C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH2 0xEF3 JUMPI POP JUMP JUMPDEST PUSH2 0xF0A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 OR REVERT 0x1E CALLDATACOPY EXTCODEHASH 0x2E PUSH31 0x6152AE4079EEB11715C1AE86803335D93B8B843CA81D9FDE64736F6C634300 ADDMOD SGT STOP CALLER ",
              "sourceMap": "303:1539:9:-:0;;;;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;303:1539:9;;;;;-1:-1:-1;;;;;;303:1539:9;;;734:10:5;303:1539:9;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;;734:10:5;;303:1539:9;;;;;2566:40:0;;-1:-1:-1;2566:40:0;434:3:9;426:11;303:1539;;447:12;303:1539;;;;;;;;;469:14;303:1539;;;469:14;303:1539;;;;;;;;;;;;;;447:12;303:1539;;;;;;;;;-1:-1:-1;303:1539:9;;;;;;-1:-1:-1;303:1539:9;;;;;-1:-1:-1;303:1539:9;;;;-1:-1:-1;;;;;303:1539:9;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 2684,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 2858,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2950,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2802,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 2711,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_claim_inner": {
                  "entryPoint": 3742,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_merge": {
                  "entryPoint": 2985,
                  "id": 820,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 2882,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610a575750806324a47aeb1461095c57806334fcf437146108a957806335faa416146107615780634e71d92d146106d05780635c975abb146106ac578063679aefce1461068d57806370a0823114610655578063715018a6146105f15780638da5cb5b146105c45780638f4ffcb11461049d57838163b6b55f25146103f457508063bf3506c1146103b5578063c4ae3168146102d2578063daf498631461028c578063e1f26f2214610265578063ea9f2417146101c65763f2fde38b146100eb57600080fd5b346101c25760203660031901126101c257610104610a7c565b61010c610a97565b6001600160a01b0381811693909290841561017057505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101c257826003193601126101c2576101e0610b42565b60035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa91821561025c57508391610227575b61022492503391610ba9565b80f35b90506020823d8211610254575b8161024160209383610af2565b810103126101c257610224915190610218565b3d9150610234565b513d85823e3d90fd5b50346101c257826003193601126101c2575490516001600160a01b03909116815260209150f35b5050346102ce5760203660031901126102ce579081906001600160a01b036102b2610a7c565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101c257826003193601126101c2576102eb610a97565b60015460ff81161561037457506001549060ff82161561033a575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258936103a5610b42565b60ff19161760015551338152a180f35b5050346102ce5760203660031901126102ce5760209160019082906001600160a01b036103e0610a7c565b168152600585522001549051904210158152f35b8084843461049957602036600319011261049957610451602091610416610a97565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af19081156104905750610465575080f35b6104859060203d8111610489575b61047d8183610af2565b810190610b2a565b5080f35b503d610473565b513d84823e3d90fd5b5050fd5b508290346102ce5760803660031901126102ce576104b9610a7c565b906001600160a01b03604435818116036105bc5760643567ffffffffffffffff8082116105c057366023830112156105c057818401359081116105c057369101602401116105bc5760028454146105795760028455610516610b42565b6003541690811561053657509061052f91602435610ba9565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102ce57816003193601126102ce57600154905160089190911c6001600160a01b03168152602090f35b833461065257806003193601126106525761060a610a97565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102ce5760203660031901126102ce5760209181906001600160a01b0361067d610a7c565b1681526005845220549051908152f35b5050346102ce57816003193601126102ce576020906002549051908152f35b5050346102ce57816003193601126102ce5760209060ff6001541690519015158152f35b5090346101c257826003193601126101c2576106ea610b42565b60ff825460a01c1615610754575b33835260056020526001818420015442106107165782610224610e9e565b906020606492519162461bcd60e51b8352820152601860248201527711585d195c8e8815995cdd1a5b99c81b9bdd08195b99195960421b6044820152fd5b61075c610e9e565b6106f8565b509190346102ce57816003193601126102ce5761077c610a97565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561089f578697610870575b50861561082d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561025c5750610810578280f35b8161082692903d106104895761047d8183610af2565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610898575b6108888183610af2565b810103126105c0575195386107b7565b503d61087e565b84513d88823e3d90fd5b5090346101c25760203660031901126101c2578135916108c7610a97565b821561090f575081600254036108db578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102ce576020806003193601126101c25781359161097c610b42565b60035485516370a0823160e01b815233838201526001600160a01b0390911692908181602481875afa908115610a4d579085918791610a1c575b50106109c85784610224338587610ba9565b855162461bcd60e51b815291820152602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b606482015260849150fd5b809250838092503d8311610a46575b610a358183610af2565b810103126105c057849051886109b6565b503d610a2b565b87513d88823e3d90fd5b8490346102ce57816003193601126102ce576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610a9257565b600080fd5b60015460081c6001600160a01b03163303610aae57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610b1457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610a9257518015158103610a925790565b60ff60015416610b4e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b91908201809211610b9357565b634e487b7160e01b600052601160045260246000fd5b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610e8a57906064610bed920490610b86565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610e80578591610e4f575b508511610df65785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610dec57610dcf575b5089549160a083901c60ff1615610d35575050506201518060ff895460a01c160262ffffff8116908103610d2257610ca79042610b86565b9083519284840184811067ffffffffffffffff821117610d0f577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610dc5577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610da8575b50610d08565b610dbe90843d86116104895761047d8183610af2565b5038610da2565b82513d89823e3d90fd5b610de590883d8a116104895761047d8183610af2565b5038610c6f565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610e79575b610e668183610af2565b81010312610e75575138610c1e565b8480fd5b503d610e5c565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b33600081815260056020908152604080832080549084905560048054925163a9059cbb60e01b81529081019590955260248501529091839160449183916001600160a01b03165af18015610f0d57610ef35750565b610f0a9060203d81116104895761047d8183610af2565b50565b6040513d6000823e3d90fdfea26469706673582212209217fd1e373f2e7e6152ae4079eeb11715c1ae86803335d93b8b843ca81d9fde64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xA57 JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8A9 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x761 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x49D JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x3F4 JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1C6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x104 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x10C PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x170 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x1E0 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x25C JUMPI POP DUP4 SWAP2 PUSH2 0x227 JUMPI JUMPDEST PUSH2 0x224 SWAP3 POP CALLER SWAP2 PUSH2 0xBA9 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x254 JUMPI JUMPDEST DUP2 PUSH2 0x241 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C2 JUMPI PUSH2 0x224 SWAP2 MLOAD SWAP1 PUSH2 0x218 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x234 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2B2 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x2EB PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x374 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x33A JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x3A5 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x499 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x499 JUMPI PUSH2 0x451 PUSH1 0x20 SWAP2 PUSH2 0x416 PUSH2 0xA97 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI POP PUSH2 0x465 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x485 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI JUMPDEST PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB2A JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x473 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x4B9 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x5C0 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x5C0 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x5C0 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x5BC JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x579 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x516 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x536 JUMPI POP SWAP1 PUSH2 0x52F SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x652 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x652 JUMPI PUSH2 0x60A PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x67D PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x6EA PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x754 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x716 JUMPI DUP3 PUSH2 0x224 PUSH2 0xE9E JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x75C PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x77C PUSH2 0xA97 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x89F JUMPI DUP7 SWAP8 PUSH2 0x870 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x82D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x25C JUMPI POP PUSH2 0x810 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x826 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x898 JUMPI JUMPDEST PUSH2 0x888 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7B7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x87E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8C7 PUSH2 0xA97 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x90F JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x8DB JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x97C PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA4D JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA1C JUMPI JUMPDEST POP LT PUSH2 0x9C8 JUMPI DUP5 PUSH2 0x224 CALLER DUP6 DUP8 PUSH2 0xBA9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA46 JUMPI JUMPDEST PUSH2 0xA35 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9B6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA2B JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA92 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAAE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB14 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xA92 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xA92 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xB4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB93 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xE8A JUMPI SWAP1 PUSH1 0x64 PUSH2 0xBED SWAP3 DIV SWAP1 PUSH2 0xB86 JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE80 JUMPI DUP6 SWAP2 PUSH2 0xE4F JUMPI JUMPDEST POP DUP6 GT PUSH2 0xDF6 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDCF JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xD35 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xD22 JUMPI PUSH2 0xCA7 SWAP1 TIMESTAMP PUSH2 0xB86 JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0F JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xDA8 JUMPI JUMPDEST POP PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xDBE SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA2 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE5 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xC6F JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE79 JUMPI JUMPDEST PUSH2 0xE66 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE75 JUMPI MLOAD CODESIZE PUSH2 0xC1E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xE5C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH2 0xEF3 JUMPI POP JUMP JUMPDEST PUSH2 0xF0A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 OR REVERT 0x1E CALLDATACOPY EXTCODEHASH 0x2E PUSH31 0x6152AE4079EEB11715C1AE86803335D93B8B843CA81D9FDE64736F6C634300 ADDMOD SGT STOP CALLER ",
              "sourceMap": "303:1539:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;303:1539:9;;;;;;;2162:22:0;;303:1539:9;;-1:-1:-1;;303:1539:9;;;-1:-1:-1;;;;;;303:1539:9;;;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;;2566:40:0;;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;1204:72:1;;:::i;:::-;303:1539:9;;;;-1:-1:-1;;;1128:36:9;;1153:10;1128:36;;;303:1539;;;;-1:-1:-1;;;;;303:1539:9;1128:36;303:1539;;;;1128:36;;;;;;;;;;;;303:1539;1198:10;1153;;;1198;;:::i;:::-;303:1539;;1128:36;;;;;;;;;;;;;;;;;:::i;:::-;;;303:1539;;;;1198:10;303:1539;;1128:36;;;;;;-1:-1:-1;1128:36:9;;;303:1539;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;-1:-1:-1;303:1539:9;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;;-1:-1:-1;;;;;303:1539:9;;:::i;:::-;;;;661:43:8;303:1539:9;;;;;;661:43:8;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;303:1539:9;;;;;;;;1685:7:1;303:1539:9;;;;;;;;-1:-1:-1;;;303:1539:9;1685:7:1;303:1539:9;;734:10:5;303:1539:9;;2521:22:1;;303:1539:9;;2521:22:1;303:1539:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;2499:32:8;303:1539:9;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;303:1539:9;;1685:7:1;303:1539:9;;734:10:5;303:1539:9;;2274:20:1;303:1539:9;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;:::i;:::-;;;;621:8;303:1539;;;621:21;303:1539;;;646:15;;-1:-1:-1;621:40:9;303:1539;;;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;2597:60:8;303:1539:9;1063:62:0;;;:::i;:::-;303:1539:9;;;;-1:-1:-1;;;2597:60:8;;2623:10;2597:60;;;303:1539:9;;;2643:4:8;303:1539:9;;;;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;;;2597:60:8;;;;;;;;;;;;;303:1539:9;;;2597:60:8;;;303:1539:9;2597:60:8;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;303:1539:9;;2597:60:8;;;;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;:::i;:::-;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;303:1539:9;;2468:19:2;1759:1;;;;;1204:72:1;;:::i;:::-;303:1539:9;;;2269:20:8;;;303:1539:9;;;;2429:4:8;303:1539:9;;;2429:4:8;:::i;:::-;303:1539:9;1759:1:2;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;303:1539:9;;-1:-1:-1;;;1759:1:2;;303:1539:9;1759:1:2;;;;303:1539:9;;1759:1:2;;303:1539:9;1759:1:2;303:1539:9;;;1759:1:2;303:1539:9;;1759:1:2;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;303:1539:9;;-1:-1:-1;;;;;;303:1539:9;;;;;;;;;-1:-1:-1;;;;;303:1539:9;2566:40:0;303:1539:9;;2566:40:0;303:1539:9;;;;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;;;-1:-1:-1;;;;;303:1539:9;;:::i;:::-;;;;759:8;303:1539;;;;;;;;;;;;;;;;;;;;;;;;;;952:5;303:1539;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;1204:72:1;;:::i;:::-;303:1539:9;;;;;;2763:20:8;2759:52;;303:1539:9;1533:10;303:1539;;2829:8:8;303:1539:9;;2829:21:8;303:1539:9;;;2829:21:8;303:1539:9;2854:15:8;-1:-1:-1;303:1539:9;;2908:1:8;;;:::i;303:1539:9:-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;2759:52:8;2799:1;;:::i;:::-;2759:52;;303:1539:9;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;303:1539:9;;;;-1:-1:-1;;;1820:37:8;;1851:4;1820:37;;;303:1539:9;;1820:37:8;;303:1539:9;-1:-1:-1;;;;;303:1539:9;;;;;1820:37:8;303:1539:9;;;;1820:37:8;;;;;;;;;;;303:1539:9;1875:11:8;;;303:1539:9;;;;;;-1:-1:-1;;;1927:39:8;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;1927:39:8;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;1927:39:8;;;;;;;;;;;;303:1539:9;;;1927:39:8;;;;;;-1:-1:-1;1927:39:8;;;;;;:::i;:::-;;;;303:1539:9;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;1820:37:8;;;;;;;;;;;;;;;;;:::i;:::-;;;303:1539:9;;;;;1820:37:8;;;;;;;;;;303:1539:9;;;;;;;;;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;1063:62:0;;;:::i;:::-;770:8:8;;303:1539:9;;;;832:5:8;303:1539:9;832:13:8;828:92;;303:1539:9;;;828:92:8;1759:1:2;303:1539:9;1759:1:2;892:17:8;1759:1:2;832:5:8;1759:1:2;303:1539:9;;;;892:17:8;828:92;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;1204:72:1;;;:::i;:::-;303:1539:9;;;;-1:-1:-1;;;1304:36:9;;1329:10;1304:36;;;303:1539;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;1304:36;;;;;;;;;;;;;;303:1539;1358:17;;303:1539;;1329:10;1455;1329;;;1455;:::i;303:1539::-;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;-1:-1:-1;303:1539:9;1304:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;303:1539;;;;;;;1304:36;;;;;;;;;303:1539;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;;;;;;:::o;:::-;;;;1359:130:0;303:1539:9;;;;-1:-1:-1;;;;;303:1539:9;734:10:5;1422:23:0;303:1539:9;;1359:130:0:o;303:1539:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1767:106:1:-;303:1539:9;1685:7:1;303:1539:9;;;;1767:106:1:o;303:1539:9:-;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;932:818:8;;;;303:1539:9;;;;;;;;;-1:-1:-1;;303:1539:9;;;;;;1035:8:8;303:1539:9;;;;;;;;1116:5:8;303:1539:9;;;;;;;;;;;;;;;;1125:3:8;1091:37;303:1539:9;;1091:37:8;;:::i;:::-;1184:4;;303:1539:9;;;;;;;;;;;;;;;;;1177:37:8;;1208:4;1177:37;;;303:1539:9;1177:37:8;;;;;;;;;;;932:818;1159:55;;;303:1539:9;;;;-1:-1:-1;;;1332:55:8;;-1:-1:-1;;;;;303:1539:9;;1332:55:8;;;303:1539:9;;;1208:4:8;303:1539:9;;;;;;;;;;;;;;;;1332:55:8;;;;303:1539:9;1332:55:8;;303:1539:9;;;;;;1332:55:8;;;;;;;;932:818;-1:-1:-1;303:1539:9;;;;;;;;;1436:20:8;303:1539:9;;;;;1569:6:8;303:1539:9;;;;;;;;;;;;;;;1533:42:8;:15;;:42;:::i;:::-;303:1539:9;;;;;;;;;;;;;;;;1723:20:8;303:1539:9;;;;;;;;;;;;;;1495:82:8;;;303:1539:9;;;1481:10:8;303:1539:9;;1035:8:8;303:1539:9;;;;;1759:1:2;;303:1539:9;;;1759:1:2;1432:276:8;303:1539:9;;;;1723:20:8;932:818::o;303:1539:9:-;-1:-1:-1;;;303:1539:9;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;1432:276:8;303:1539:9;;-1:-1:-1;;;1654:43:8;;-1:-1:-1;;;;;303:1539:9;;;1654:43:8;;;303:1539:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:43:8;303:1539:9;;1654:43:8;;;;;;1723:20;1654:43;;;;;;1432:276;;;;1654:43;;;;;;;;;;;;;:::i;:::-;;;;;;303:1539:9;;;;;;;;;1332:55:8;;;;;;;;;;;;;:::i;:::-;;;;;;303:1539:9;;;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:3:8;303:1539:9;;;;;;1177:37:8;;;;;;;;;;;;;;;;:::i;:::-;;;303:1539:9;;;;;1177:37:8;;;303:1539:9;;;;1177:37:8;;;;;;303:1539:9;;;;;;;;;;-1:-1:-1;;;303:1539:9;;;;;;;;1479:220;1581:10;-1:-1:-1;303:1539:9;;;1572:8;303:1539;;;;;;;;;;1759:1:2;;;;1658:4:9;303:1539;;;;-1:-1:-1;;;1651:41:9;;;;;303:1539;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:1539:9;1651:41;;;;;;;;1479:220;:::o;1651:41::-;;;303:1539;1651:41;;;;;;;;;:::i;:::-;;1479:220::o;1651:41::-;303:1539;;;-1:-1:-1;303:1539:9;;;;"
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "canClaim(address)": "bf3506c1",
              "claim()": "4e71d92d",
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "vestings(address)": "daf49863",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wewe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_vestingDuration\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/GenericMerge.sol\":\"GenericMerge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x731fc249ed278f3760a6bef8d362dfce289a1055f37632e5e87bc0cc69c70a33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1ded46e25d0fba5cec5ce15c2561fa37bd14ed4067bc488fd89f17b7c2775c9\",\"dweb:/ipfs/QmZimcRTRiSvZD2kxcHDHpkYTidBYa12yUf1L3Ze1JPYsG\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x3177601da5cf73493c55d772d3eef90a5a94c1759b25865bb85a5d535673757c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e60c7c822608e8a49bd26ba6b52b44f9e72fe1ff09fd91b3ad3a89f1af9d72b2\",\"dweb:/ipfs/QmdYYZBnwNMZCM47BH17tJXdj3AJStJXDS1oVmXwUfzdKV\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/MergeFactory.sol": {
        "MergeFactory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "merge",
                  "type": "address"
                }
              ],
              "name": "MergeCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowedDeployers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "vestingDuration",
                  "type": "uint8"
                }
              ],
              "name": "createMerge",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "vestingDuration",
                  "type": "uint8"
                },
                {
                  "internalType": "enum MergeFactory.MergeType",
                  "name": "mergeType",
                  "type": "uint8"
                }
              ],
              "name": "createMergeWithType",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMergeCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "mergeTypes",
              "outputs": [
                {
                  "internalType": "enum MergeFactory.MergeType",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "merges",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                }
              ],
              "name": "setAllowedDeployer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "merge",
                  "type": "address"
                }
              ],
              "name": "setMerge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "merge",
                  "type": "address"
                },
                {
                  "internalType": "enum MergeFactory.MergeType",
                  "name": "mergeType",
                  "type": "uint8"
                }
              ],
              "name": "setMergeWithType",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "enum MergeFactory.MergeType",
                  "name": "mergeType",
                  "type": "uint8"
                }
              ],
              "name": "setType",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "tokens",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523461006f5760008054336001600160a01b0319821681178355604092916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3338152600460205220805460ff1916600117905561305290816100758239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081631d06f92b146106a057508063346656461461063557806339db25f7146105e15780634f64b2be146105a15780636d09021814610565578063715018a61461050b5780637f389fd5146104b1578063870a6a87146103875780638da5cb5b1461035f5780639dc79be4146102c9578063a49a7cb114610294578063b49757a6146101fb578063e1f26f22146101cc578063e441eebf1461018d5763f2fde38b146100c857600080fd5b34610189576020366003190112610189576100e16106bc565b906100ea610747565b6001600160a01b0391821692831561013757505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101c85760203660031901126101c8576020916001600160a01b03908290826101b76106bc565b168152600285522054169051908152f35b5080fd5b5050346101c857816003193601126101c85760209051736b9bb36519538e0c073894e964e90172e1c0b41f8152f35b5034610189576020366003190112610189576102156106bc565b9061021e610747565b82516321df0da760e01b8152906020908290816001600160a01b0386165afa9081156102875761025693508491610259575b50610b06565b80f35b61027a915060203d8111610280575b6102728183610878565b810190610ab9565b38610250565b503d610268565b50505051903d90823e3d90fd5b5050346101c857610256906102a836610718565b91906102b2610747565b6001600160a01b0316845260036020528320610ad8565b509034610189576102d936610718565b9190926102e4610747565b81516321df0da760e01b8152936001600160a01b03916020908690818585165afa90811561035557610256958792610331575b506103229082610b06565b16845260036020528320610ad8565b61032291925061034e9060203d8111610280576102728183610878565b9190610317565b83513d88823e3d90fd5b5050346101c857816003193601126101c857905490516001600160a01b039091168152602090f35b509190346101c85760603660031901126101c8576103a36106bc565b926103ac6106d7565b338452816020526103c260ff848620541661079f565b6001600160a01b038581168086526002602052848620549192916103e8908416156107f7565b845191611396918284019284841067ffffffffffffffff85111761049e5784926060949260ff92611c8786398352736b9bb36519538e0c073894e964e90172e1c0b41f6020840152168782015203019085f08015610287571692833b1561049b578251916334fcf43760e01b835260243590830152808260248183885af190811561049057506020946104819285926104875750610b06565b51908152f35b61027a9061084e565b8351903d90823e3d90fd5b80fd5b634e487b7160e01b895260418752602489fd5b509190346101c85760203660031901126101c8576001600160a01b036104d56106bc565b168252600360205260ff818320541690519160028210156104f857602083838152f35b634e487b7160e01b815260218452602490fd5b833461049b578060031936011261049b57610524610747565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101895760203660031901126101895760209260ff918391906001600160a01b036105906106bc565b168252855220541690519015158152f35b503461018957602036600319011261018957359160015483101561049b57506105cb6020926106e7565b905491519160018060a01b039160031b1c168152f35b5090346101895780600319360112610189576105fb6106bc565b916024359283151580940361063157610612610747565b60018060a01b0316845260205282209060ff8019835416911617905580f35b8480fd5b50346101895760803660031901126101895761064f6106bc565b6106576106d7565b9060643592600284101561069c579061068260ff8660209861068b9796953382528a5220541661079f565b6024359061089a565b90516001600160a01b039091168152f35b8580fd5b8490346101c857816003193601126101c8576020906001548152f35b600435906001600160a01b03821682036106d257565b600080fd5b6044359060ff821682036106d257565b60015481101561070257600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60409060031901126106d2576004356001600160a01b03811681036106d2579060243560028110156106d25790565b6000546001600160a01b0316330361075b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156107a657565b60405162461bcd60e51b815260206004820152602360248201527f4d65726765466163746f72793a204e6f7420616c6c6f77656420746f206465706044820152626c6f7960e81b6064820152608490fd5b156107fe57565b60405162461bcd60e51b815260206004820152602260248201527f4d65726765466163746f72793a204d6572676520616c72656164792065786973604482015261747360f01b6064820152608490fd5b67ffffffffffffffff811161086257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761086257604052565b9190600093849260018060a01b03918286169081885260026020526040976108c7858a83205416156107f7565b6002821015610aa55781156109fb5750600114610921576064875162461bcd60e51b815260206004820152602060248201527f4d65726765466163746f72793a20496e76616c6964206d6572676520747970656044820152fd5b865191611396918284019284841067ffffffffffffffff8511176109e75784926060949260ff92611c8786398352736b9bb36519538e0c073894e964e90172e1c0b41f6020840152168982015203019084f080156109dd571693843b15610189578051916334fcf43760e01b83526004830152828260248183895af19081156109d45750908492916109bc575b50506109b991610b06565b90565b8192506109c89061084e565b61049b578083916109ae565b513d84823e3d90fd5b85513d85823e3d90fd5b634e487b7160e01b88526041600452602488fd5b955050865191611084918284019284841067ffffffffffffffff8511176109e75784926060949260ff92610c038639736b9bb36519538e0c073894e964e90172e1c0b41f84526020840152168982015203019084f080156109dd571693843b15610189578051916334fcf43760e01b83526004830152828260248183895af19081156109d45750916109b993918593610a96575b5050610b06565b610a9f9061084e565b38610a8f565b634e487b7160e01b81526021600452602490fd5b908160209103126106d257516001600160a01b03811681036106d25790565b906002811015610af05760ff80198354169116179055565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03908116908115610bbd576000908282526002602052610b3381604084205416156107f7565b600154600160401b811015610ba95790610b758260017fe413d0f68462f6240160d618a454469f475317b43867a99c353c0acc7bf4ec1b9594016001556106e7565b81549060031b908387831b921b19161790558382526002602052604082209416938460018060a01b031982541617905580a3565b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b815260206004820152601b60248201527f4d65726765466163746f72793a20496e76616c6964206d6572676500000000006044820152606490fdfe60803461010557601f61108438819003918201601f19168301916001600160401b0383118484101761010a578084926060946040528339810103126101055761004781610120565b604061005560208401610120565b9201519160ff83168303610105576001600081815581546001600160a81b031980821633600881811b610100600160a81b0316929092179095556040519791946001600160a01b039492939092911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3606460025581600454941660018060a01b0319600354161760035560ff60a01b9060a01b16931691161717600455610f4f90816101358239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101055756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610a575750806324a47aeb1461095c57806334fcf437146108a957806335faa416146107615780634e71d92d146106d05780635c975abb146106ac578063679aefce1461068d57806370a0823114610655578063715018a6146105f15780638da5cb5b146105c45780638f4ffcb11461049d57838163b6b55f25146103f457508063bf3506c1146103b5578063c4ae3168146102d2578063daf498631461028c578063e1f26f2214610265578063ea9f2417146101c65763f2fde38b146100eb57600080fd5b346101c25760203660031901126101c257610104610a7c565b61010c610a97565b6001600160a01b0381811693909290841561017057505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101c257826003193601126101c2576101e0610b42565b60035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa91821561025c57508391610227575b61022492503391610ba9565b80f35b90506020823d8211610254575b8161024160209383610af2565b810103126101c257610224915190610218565b3d9150610234565b513d85823e3d90fd5b50346101c257826003193601126101c2575490516001600160a01b03909116815260209150f35b5050346102ce5760203660031901126102ce579081906001600160a01b036102b2610a7c565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101c257826003193601126101c2576102eb610a97565b60015460ff81161561037457506001549060ff82161561033a575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258936103a5610b42565b60ff19161760015551338152a180f35b5050346102ce5760203660031901126102ce5760209160019082906001600160a01b036103e0610a7c565b168152600585522001549051904210158152f35b8084843461049957602036600319011261049957610451602091610416610a97565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af19081156104905750610465575080f35b6104859060203d8111610489575b61047d8183610af2565b810190610b2a565b5080f35b503d610473565b513d84823e3d90fd5b5050fd5b508290346102ce5760803660031901126102ce576104b9610a7c565b906001600160a01b03604435818116036105bc5760643567ffffffffffffffff8082116105c057366023830112156105c057818401359081116105c057369101602401116105bc5760028454146105795760028455610516610b42565b6003541690811561053657509061052f91602435610ba9565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102ce57816003193601126102ce57600154905160089190911c6001600160a01b03168152602090f35b833461065257806003193601126106525761060a610a97565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102ce5760203660031901126102ce5760209181906001600160a01b0361067d610a7c565b1681526005845220549051908152f35b5050346102ce57816003193601126102ce576020906002549051908152f35b5050346102ce57816003193601126102ce5760209060ff6001541690519015158152f35b5090346101c257826003193601126101c2576106ea610b42565b60ff825460a01c1615610754575b33835260056020526001818420015442106107165782610224610e9e565b906020606492519162461bcd60e51b8352820152601860248201527711585d195c8e8815995cdd1a5b99c81b9bdd08195b99195960421b6044820152fd5b61075c610e9e565b6106f8565b509190346102ce57816003193601126102ce5761077c610a97565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561089f578697610870575b50861561082d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561025c5750610810578280f35b8161082692903d106104895761047d8183610af2565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610898575b6108888183610af2565b810103126105c0575195386107b7565b503d61087e565b84513d88823e3d90fd5b5090346101c25760203660031901126101c2578135916108c7610a97565b821561090f575081600254036108db578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102ce576020806003193601126101c25781359161097c610b42565b60035485516370a0823160e01b815233838201526001600160a01b0390911692908181602481875afa908115610a4d579085918791610a1c575b50106109c85784610224338587610ba9565b855162461bcd60e51b815291820152602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b606482015260849150fd5b809250838092503d8311610a46575b610a358183610af2565b810103126105c057849051886109b6565b503d610a2b565b87513d88823e3d90fd5b8490346102ce57816003193601126102ce576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610a9257565b600080fd5b60015460081c6001600160a01b03163303610aae57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610b1457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610a9257518015158103610a925790565b60ff60015416610b4e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b91908201809211610b9357565b634e487b7160e01b600052601160045260246000fd5b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610e8a57906064610bed920490610b86565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610e80578591610e4f575b508511610df65785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610dec57610dcf575b5089549160a083901c60ff1615610d35575050506201518060ff895460a01c160262ffffff8116908103610d2257610ca79042610b86565b9083519284840184811067ffffffffffffffff821117610d0f577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610dc5577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610da8575b50610d08565b610dbe90843d86116104895761047d8183610af2565b5038610da2565b82513d89823e3d90fd5b610de590883d8a116104895761047d8183610af2565b5038610c6f565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610e79575b610e668183610af2565b81010312610e75575138610c1e565b8480fd5b503d610e5c565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b33600081815260056020908152604080832080549084905560048054925163a9059cbb60e01b81529081019590955260248501529091839160449183916001600160a01b03165af18015610f0d57610ef35750565b610f0a9060203d81116104895761047d8183610af2565b50565b6040513d6000823e3d90fdfea26469706673582212209217fd1e373f2e7e6152ae4079eeb11715c1ae86803335d93b8b843ca81d9fde64736f6c6343000813003360803461010557601f61139638819003918201601f19168301916001600160401b0383118484101761010a578084926060946040528339810103126101055761004781610120565b604061005560208401610120565b9201519160ff83168303610105576001600081815581546001600160a81b031980821633600881811b610100600160a81b0316929092179095556040519791946001600160a01b039492939092911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3606460025581600454941660018060a01b0319600354161760035560ff60a01b9060a01b1693169116171760045561126190816101358239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101055756fe6040608081526004908136101561001557600080fd5b600091823560e01c8063213897fe14610ab657806321df0da714610a8d57806324a47aeb1461099257806334fcf437146108df57806335faa416146107935780634e71d92d146107025780635c975abb146106de57806361d027b3146106b5578063679aefce1461069657806370a082311461065e578063715018a6146105fd5780638da5cb5b146105d05780638f4ffcb11461050457838163b6b55f251461045b57508063bf3506c11461041c578063c4ae316814610339578063daf49863146102f3578063e1f26f22146102cc578063ea9f24171461022d578063f0f44260146101e55763f2fde38b1461010a57600080fd5b346101e15760203660031901126101e157610123610d41565b61012b610d57565b6001600160a01b0381811693909290841561018f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b833461022a57602036600319011261022a576101ff610d41565b610207610d57565b600680546001600160a01b0319166001600160a01b039290921691909117905580f35b80fd5b5090346101e157826003193601126101e157610247610e02565b60035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa9182156102c35750839161028e575b61028b92503391610ebf565b80f35b90506020823d82116102bb575b816102a860209383610db2565b810103126101e15761028b91519061027f565b3d915061029b565b513d85823e3d90fd5b50346101e157826003193601126101e1575490516001600160a01b03909116815260209150f35b505034610335576020366003190112610335579081906001600160a01b03610319610d41565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101e157826003193601126101e157610352610d57565b60015460ff8116156103db57506001549060ff8216156103a1575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361040c610e02565b60ff19161760015551338152a180f35b5050346103355760203660031901126103355760209160019082906001600160a01b03610447610d41565b168152600585522001549051904210158152f35b80848434610500576020366003190112610500576104b860209161047d610d57565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af19081156104f757506104cc575080f35b6104ec9060203d81116104f0575b6104e48183610db2565b810190610dea565b5080f35b503d6104da565b513d84823e3d90fd5b5050fd5b5082903461033557608036600319011261033557610520610d41565b906001600160a01b03604435818116036105cc5760643567ffffffffffffffff81116105c8576105539036908401610d0e565b505061055d610e46565b610565610e02565b6003541690811561058557509061057e91602435610ebf565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b8480fd5b8380fd5b505034610335578160031936011261033557600154905160089190911c6001600160a01b03168152602090f35b833461022a578060031936011261022a57610616610d57565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346103355760203660031901126103355760209181906001600160a01b03610686610d41565b1681526005845220549051908152f35b5050346103355781600319360112610335576020906002549051908152f35b50503461033557816003193601126103355760065490516001600160a01b039091168152602090f35b50503461033557816003193601126103355760209060ff6001541690519015158152f35b5090346101e157826003193601126101e15761071c610e02565b60ff825460a01c1615610786575b3383526005602052600181842001544210610748578261028b6111b0565b906020606492519162461bcd60e51b8352820152601860248201527711585d195c8e8815995cdd1a5b99c81b9bdd08195b99195960421b6044820152fd5b61078e6111b0565b61072a565b509190346103355781600319360112610335576107ae610d57565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa9687156108d55786976108a2575b50861561085f57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af19081156102c35750610842578280f35b8161085892903d106104f0576104e48183610db2565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d83116108ce575b6108ba8183610db2565b810103126108ca575195386107e9565b8580fd5b503d6108b0565b84513d88823e3d90fd5b5090346101e15760203660031901126101e1578135916108fd610d57565b821561094557508160025403610911578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b50829034610335576020806003193601126101e1578135916109b2610e02565b60035485516370a0823160e01b815233838201526001600160a01b0390911692908181602481875afa908115610a83579085918791610a52575b50106109fe578461028b338587610ebf565b855162461bcd60e51b815291820152602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b606482015260849150fd5b809250838092503d8311610a7c575b610a6b8183610db2565b810103126108ca57849051886109ec565b503d610a61565b87513d88823e3d90fd5b50503461033557816003193601126103355760035490516001600160a01b039091168152602090f35b50346101e15760603660031901126101e1578035916001600160a01b03602435818116908190036108ca5760443567ffffffffffffffff8111610d0a57610b009036908601610d0e565b959094610b0b610e46565b60035485516370a0823160e01b81523383820152602098918616908981602481855afa908115610d00579085918c91610ccb575b5010610c735790610b548a9392339086610ebf565b600354875163095ea7b360e01b81526001600160a01b0387168482019081526020810187905290918b9183918a169082908890829060400103925af18015610c6957918a97969594939160a493610c4c575b508087600654168015600014610c465750309a5b8860035416988b519c8d9a8b998a976302454b7160e41b8952880152602487015216604485015260806064850152816084850152848401378181018301849052601f01601f191681010301925af19081156102c35750610c1d575b826001815580f35b813d8311610c3f575b610c308183610db2565b8101031261022a573880610c15565b503d610c26565b9a610bba565b610c6290893d8b116104f0576104e48183610db2565b5038610ba6565b88513d86823e3d90fd5b865162461bcd60e51b81528084018a9052602c60248201527f4d65726765576974684d61726b65743a20496e73756666696369656e7420626160448201526b1b185b98d9481d1bc819585d60a21b6064820152608490fd5b8092508b8092503d8311610cf9575b610ce48183610db2565b81010312610cf55784905138610b3f565b8a80fd5b503d610cda565b88513d8d823e3d90fd5b8680fd5b9181601f84011215610d3c5782359167ffffffffffffffff8311610d3c5760208381860195010111610d3c57565b600080fd5b600435906001600160a01b0382168203610d3c57565b60015460081c6001600160a01b03163303610d6e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610dd457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610d3c57518015158103610d3c5790565b60ff60015416610e0e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b600260005414610e57576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b91908201809211610ea957565b634e487b7160e01b600052601160045260246000fd5b90929160018060a01b039182821692600092848452602093600585526040928382205460025480870290878204148715171561119c57906064610f03920490610e9c565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115611192578591611165575b50851161110c5785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015611102576110e5575b5089549160a083901c60ff161561104b575050506201518060ff895460a01c160262ffffff811690810361103857610fbd9042610e9c565b9083519284840184811067ffffffffffffffff821117611025577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af180156110db577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8959697506110be575b5061101e565b6110d490843d86116104f0576104e48183610db2565b50386110b8565b82513d89823e3d90fd5b6110fb90883d8a116104f0576104e48183610db2565b5038610f85565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d831161118b575b61117c8183610db2565b810103126105c8575138610f34565b503d611172565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b33600081815260056020908152604080832080549084905560048054925163a9059cbb60e01b81529081019590955260248501529091839160449183916001600160a01b03165af1801561121f576112055750565b61121c9060203d81116104f0576104e48183610db2565b50565b6040513d6000823e3d90fdfea2646970667358221220954ef735ee8819364a9c258753fcca5addf47509606a1dbdb8fa745f7544bed064736f6c63430008130033a2646970667358221220fb22014585c64a6f2e1c92048aeaa91f494299e62db4c4aa344e7ad24f0e233064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 CALLER DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x3052 SWAP1 DUP2 PUSH2 0x75 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D06F92B EQ PUSH2 0x6A0 JUMPI POP DUP1 PUSH4 0x34665646 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0x39DB25F7 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x6D090218 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x7F389FD5 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x870A6A87 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x9DC79BE4 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xA49A7CB1 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xB49757A6 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xE441EEBF EQ PUSH2 0x18D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xE1 PUSH2 0x6BC JUMP JUMPDEST SWAP1 PUSH2 0xEA PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x137 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x1B7 PUSH2 0x6BC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x215 PUSH2 0x6BC JUMP JUMPDEST SWAP1 PUSH2 0x21E PUSH2 0x747 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x21DF0DA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x287 JUMPI PUSH2 0x256 SWAP4 POP DUP5 SWAP2 PUSH2 0x259 JUMPI JUMPDEST POP PUSH2 0xB06 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH2 0x27A SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x280 JUMPI JUMPDEST PUSH2 0x272 DUP2 DUP4 PUSH2 0x878 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB9 JUMP JUMPDEST CODESIZE PUSH2 0x250 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x268 JUMP JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI PUSH2 0x256 SWAP1 PUSH2 0x2A8 CALLDATASIZE PUSH2 0x718 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B2 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 PUSH2 0xAD8 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x189 JUMPI PUSH2 0x2D9 CALLDATASIZE PUSH2 0x718 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x2E4 PUSH2 0x747 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x21DF0DA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP1 DUP7 SWAP1 DUP2 DUP6 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x355 JUMPI PUSH2 0x256 SWAP6 DUP8 SWAP3 PUSH2 0x331 JUMPI JUMPDEST POP PUSH2 0x322 SWAP1 DUP3 PUSH2 0xB06 JUMP JUMPDEST AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x322 SWAP2 SWAP3 POP PUSH2 0x34E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x280 JUMPI PUSH2 0x272 DUP2 DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C8 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1C8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C8 JUMPI PUSH2 0x3A3 PUSH2 0x6BC JUMP JUMPDEST SWAP3 PUSH2 0x3AC PUSH2 0x6D7 JUMP JUMPDEST CALLER DUP5 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x3C2 PUSH1 0xFF DUP5 DUP7 KECCAK256 SLOAD AND PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x3E8 SWAP1 DUP5 AND ISZERO PUSH2 0x7F7 JUMP JUMPDEST DUP5 MLOAD SWAP2 PUSH2 0x1396 SWAP2 DUP3 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x49E JUMPI DUP5 SWAP3 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0xFF SWAP3 PUSH2 0x1C87 DUP7 CODECOPY DUP4 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F PUSH1 0x20 DUP5 ADD MSTORE AND DUP8 DUP3 ADD MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0x287 JUMPI AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x49B JUMPI DUP3 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 ADD MSTORE DUP1 DUP3 PUSH1 0x24 DUP2 DUP4 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI POP PUSH1 0x20 SWAP5 PUSH2 0x481 SWAP3 DUP6 SWAP3 PUSH2 0x487 JUMPI POP PUSH2 0xB06 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x27A SWAP1 PUSH2 0x84E JUMP JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4D5 PUSH2 0x6BC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP4 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP2 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x20 DUP4 DUP4 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 DUP5 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x49B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x49B JUMPI PUSH2 0x524 PUSH2 0x747 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 SWAP3 PUSH1 0xFF SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x590 PUSH2 0x6BC JUMP JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x49B JUMPI POP PUSH2 0x5CB PUSH1 0x20 SWAP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x189 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x189 JUMPI PUSH2 0x5FB PUSH2 0x6BC JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP1 SWAP5 SUB PUSH2 0x631 JUMPI PUSH2 0x612 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 MSTORE DUP3 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x64F PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x657 PUSH2 0x6D7 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x69C JUMPI SWAP1 PUSH2 0x682 PUSH1 0xFF DUP7 PUSH1 0x20 SWAP9 PUSH2 0x68B SWAP8 SWAP7 SWAP6 CALLER DUP3 MSTORE DUP11 MSTORE KECCAK256 SLOAD AND PUSH2 0x79F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x89A JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6D2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x6D2 JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x6D2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6D2 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x75B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x7A6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204E6F7420616C6C6F77656420746F20646570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6C6F79 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x7FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204D6572676520616C72656164792065786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x862 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x862 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x0 SWAP4 DUP5 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP7 AND SWAP1 DUP2 DUP9 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP8 PUSH2 0x8C7 DUP6 DUP11 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xAA5 JUMPI DUP2 ISZERO PUSH2 0x9FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x921 JUMPI PUSH1 0x64 DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A20496E76616C6964206D657267652074797065 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD SWAP2 PUSH2 0x1396 SWAP2 DUP3 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x9E7 JUMPI DUP5 SWAP3 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0xFF SWAP3 PUSH2 0x1C87 DUP7 CODECOPY DUP4 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F PUSH1 0x20 DUP5 ADD MSTORE AND DUP10 DUP3 ADD MSTORE SUB ADD SWAP1 DUP5 CREATE DUP1 ISZERO PUSH2 0x9DD JUMPI AND SWAP4 DUP5 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI DUP1 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP4 DUP10 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D4 JUMPI POP SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0x9BC JUMPI JUMPDEST POP POP PUSH2 0x9B9 SWAP2 PUSH2 0xB06 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 SWAP3 POP PUSH2 0x9C8 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x49B JUMPI DUP1 DUP4 SWAP2 PUSH2 0x9AE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP6 POP POP DUP7 MLOAD SWAP2 PUSH2 0x1084 SWAP2 DUP3 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x9E7 JUMPI DUP5 SWAP3 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0xFF SWAP3 PUSH2 0xC03 DUP7 CODECOPY PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE AND DUP10 DUP3 ADD MSTORE SUB ADD SWAP1 DUP5 CREATE DUP1 ISZERO PUSH2 0x9DD JUMPI AND SWAP4 DUP5 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI DUP1 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP4 DUP10 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D4 JUMPI POP SWAP2 PUSH2 0x9B9 SWAP4 SWAP2 DUP6 SWAP4 PUSH2 0xA96 JUMPI JUMPDEST POP POP PUSH2 0xB06 JUMP JUMPDEST PUSH2 0xA9F SWAP1 PUSH2 0x84E JUMP JUMPDEST CODESIZE PUSH2 0xA8F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6D2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6D2 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xAF0 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xB33 DUP2 PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xBA9 JUMPI SWAP1 PUSH2 0xB75 DUP3 PUSH1 0x1 PUSH32 0xE413D0F68462F6240160D618A454469F475317B43867A99C353C0ACC7BF4EC1B SWAP6 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0x6E7 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP8 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP4 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP5 AND SWAP4 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A20496E76616C6964206D657267650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID PUSH1 0x80 CALLVALUE PUSH2 0x105 JUMPI PUSH1 0x1F PUSH2 0x1084 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x105 JUMPI PUSH2 0x47 DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x55 PUSH1 0x20 DUP5 ADD PUSH2 0x120 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x105 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP1 DUP3 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x4 SLOAD SWAP5 AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP4 AND SWAP2 AND OR OR PUSH1 0x4 SSTORE PUSH2 0xF4F SWAP1 DUP2 PUSH2 0x135 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x105 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xA57 JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8A9 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x761 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x49D JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x3F4 JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1C6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x104 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x10C PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x170 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x1E0 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x25C JUMPI POP DUP4 SWAP2 PUSH2 0x227 JUMPI JUMPDEST PUSH2 0x224 SWAP3 POP CALLER SWAP2 PUSH2 0xBA9 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x254 JUMPI JUMPDEST DUP2 PUSH2 0x241 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C2 JUMPI PUSH2 0x224 SWAP2 MLOAD SWAP1 PUSH2 0x218 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x234 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2B2 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x2EB PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x374 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x33A JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x3A5 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x499 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x499 JUMPI PUSH2 0x451 PUSH1 0x20 SWAP2 PUSH2 0x416 PUSH2 0xA97 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI POP PUSH2 0x465 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x485 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI JUMPDEST PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB2A JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x473 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x4B9 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x5C0 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x5C0 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x5C0 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x5BC JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x579 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x516 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x536 JUMPI POP SWAP1 PUSH2 0x52F SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x652 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x652 JUMPI PUSH2 0x60A PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x67D PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x6EA PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x754 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x716 JUMPI DUP3 PUSH2 0x224 PUSH2 0xE9E JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x75C PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x77C PUSH2 0xA97 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x89F JUMPI DUP7 SWAP8 PUSH2 0x870 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x82D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x25C JUMPI POP PUSH2 0x810 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x826 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x898 JUMPI JUMPDEST PUSH2 0x888 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7B7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x87E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8C7 PUSH2 0xA97 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x90F JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x8DB JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x97C PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA4D JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA1C JUMPI JUMPDEST POP LT PUSH2 0x9C8 JUMPI DUP5 PUSH2 0x224 CALLER DUP6 DUP8 PUSH2 0xBA9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA46 JUMPI JUMPDEST PUSH2 0xA35 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9B6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA2B JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA92 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAAE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB14 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xA92 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xA92 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xB4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB93 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xE8A JUMPI SWAP1 PUSH1 0x64 PUSH2 0xBED SWAP3 DIV SWAP1 PUSH2 0xB86 JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE80 JUMPI DUP6 SWAP2 PUSH2 0xE4F JUMPI JUMPDEST POP DUP6 GT PUSH2 0xDF6 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDCF JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xD35 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xD22 JUMPI PUSH2 0xCA7 SWAP1 TIMESTAMP PUSH2 0xB86 JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0F JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xDA8 JUMPI JUMPDEST POP PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xDBE SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA2 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE5 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xC6F JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE79 JUMPI JUMPDEST PUSH2 0xE66 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE75 JUMPI MLOAD CODESIZE PUSH2 0xC1E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xE5C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH2 0xEF3 JUMPI POP JUMP JUMPDEST PUSH2 0xF0A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 OR REVERT 0x1E CALLDATACOPY EXTCODEHASH 0x2E PUSH31 0x6152AE4079EEB11715C1AE86803335D93B8B843CA81D9FDE64736F6C634300 ADDMOD SGT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x105 JUMPI PUSH1 0x1F PUSH2 0x1396 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x105 JUMPI PUSH2 0x47 DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x55 PUSH1 0x20 DUP5 ADD PUSH2 0x120 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x105 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP1 DUP3 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x4 SLOAD SWAP5 AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP4 AND SWAP2 AND OR OR PUSH1 0x4 SSTORE PUSH2 0x1261 SWAP1 DUP2 PUSH2 0x135 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x105 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x213897FE EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xA8D JUMPI DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x992 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x504 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x45B JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x1E5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x123 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x12B PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x18F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH2 0x1FF PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x207 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x247 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2C3 JUMPI POP DUP4 SWAP2 PUSH2 0x28E JUMPI JUMPDEST PUSH2 0x28B SWAP3 POP CALLER SWAP2 PUSH2 0xEBF JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2BB JUMPI JUMPDEST DUP2 PUSH2 0x2A8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E1 JUMPI PUSH2 0x28B SWAP2 MLOAD SWAP1 PUSH2 0x27F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x319 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x352 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x3DB JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x3A1 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x40C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x447 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x500 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x500 JUMPI PUSH2 0x4B8 PUSH1 0x20 SWAP2 PUSH2 0x47D PUSH2 0xD57 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4F7 JUMPI POP PUSH2 0x4CC JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x4EC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI JUMPDEST PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xDEA JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x4DA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH2 0x520 PUSH2 0xD41 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5CC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C8 JUMPI PUSH2 0x553 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xD0E JUMP JUMPDEST POP POP PUSH2 0x55D PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x565 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x585 JUMPI POP SWAP1 PUSH2 0x57E SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22A JUMPI PUSH2 0x616 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x686 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x6 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x71C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x786 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x748 JUMPI DUP3 PUSH2 0x28B PUSH2 0x11B0 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x78E PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH2 0x7AE PUSH2 0xD57 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x8D5 JUMPI DUP7 SWAP8 PUSH2 0x8A2 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x85F JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0x842 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x858 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8CE JUMPI JUMPDEST PUSH2 0x8BA DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7E9 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8B0 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8FD PUSH2 0xD57 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x945 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x911 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x9B2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA83 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA52 JUMPI JUMPDEST POP LT PUSH2 0x9FE JUMPI DUP5 PUSH2 0x28B CALLER DUP6 DUP8 PUSH2 0xEBF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA7C JUMPI JUMPDEST PUSH2 0xA6B DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9EC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA61 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x8CA JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD0A JUMPI PUSH2 0xB00 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xD0E JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xB0B PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x20 SWAP9 SWAP2 DUP7 AND SWAP1 DUP10 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD00 JUMPI SWAP1 DUP6 SWAP2 DUP13 SWAP2 PUSH2 0xCCB JUMPI JUMPDEST POP LT PUSH2 0xC73 JUMPI SWAP1 PUSH2 0xB54 DUP11 SWAP4 SWAP3 CALLER SWAP1 DUP7 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x3 SLOAD DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP12 SWAP2 DUP4 SWAP2 DUP11 AND SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xC69 JUMPI SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 PUSH1 0xA4 SWAP4 PUSH2 0xC4C JUMPI JUMPDEST POP DUP1 DUP8 PUSH1 0x6 SLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xC46 JUMPI POP ADDRESS SWAP11 JUMPDEST DUP9 PUSH1 0x3 SLOAD AND SWAP9 DUP12 MLOAD SWAP13 DUP14 SWAP11 DUP12 SWAP10 DUP11 SWAP8 PUSH4 0x2454B71 PUSH1 0xE4 SHL DUP10 MSTORE DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD MSTORE DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0xC1D JUMPI JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xC30 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x22A JUMPI CODESIZE DUP1 PUSH2 0xC15 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC26 JUMP JUMPDEST SWAP11 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xC62 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xBA6 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765576974684D61726B65743A20496E73756666696369656E74206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B185B98D9481D1BC819585D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP12 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xCF9 JUMPI JUMPDEST PUSH2 0xCE4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCF5 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0xB3F JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCDA JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xD3C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xD3C JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD6E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDD4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xE0E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xE57 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEA9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x119C JUMPI SWAP1 PUSH1 0x64 PUSH2 0xF03 SWAP3 DIV SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1192 JUMPI DUP6 SWAP2 PUSH2 0x1165 JUMPI JUMPDEST POP DUP6 GT PUSH2 0x110C JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH2 0x10E5 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0x104B JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0x1038 JUMPI PUSH2 0xFBD SWAP1 TIMESTAMP PUSH2 0xE9C JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1025 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0x10DB JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0x10BE JUMPI JUMPDEST POP PUSH2 0x101E JUMP JUMPDEST PUSH2 0x10D4 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0x10B8 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x10FB SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xF85 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x118B JUMPI JUMPDEST PUSH2 0x117C DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C8 JUMPI MLOAD CODESIZE PUSH2 0xF34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1172 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x121F JUMPI PUSH2 0x1205 JUMPI POP JUMP JUMPDEST PUSH2 0x121C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x4E 0xF7 CALLDATALOAD 0xEE DUP9 NOT CALLDATASIZE 0x4A SWAP13 0x25 DUP8 MSTORE8 0xFC 0xCA GAS 0xDD DELEGATECALL PUSH22 0x9606A1DBDB8FA745F7544BED064736F6C6343000813 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0x22 ADD GASLIMIT DUP6 0xC6 0x4A PUSH16 0x2E1C92048AEAA91F494299E62DB4C4AA CALLVALUE 0x4E PUSH27 0xD24F0E233064736F6C634300081300330000000000000000000000 ",
              "sourceMap": "343:2899:10:-:0;;;;;;;2518:6:0;343:2899:10;;734:10:5;-1:-1:-1;;;;;;343:2899:10;;;;;;;;2518:6:0;-1:-1:-1;;;;;343:2899:10;2566:40:0;2518:6;;2566:40;734:10:5;343:2899:10;;756:16;343:2899;;;;;-1:-1:-1;;343:2899:10;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1724,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 2745,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_enum_MergeType": {
                  "entryPoint": 1816,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "abi_decode_uint8": {
                  "entryPoint": 1751,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2168,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_6214": {
                  "entryPoint": 2126,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 1863,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_createMergeWithType_inner": {
                  "entryPoint": 2202,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "fun_setMerge": {
                  "entryPoint": 2822,
                  "id": 1475,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b329": {
                  "entryPoint": 1951,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b60c": {
                  "entryPoint": 2039,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 1767,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_offsett_enum_MergeType_to_enum_MergeType": {
                  "entryPoint": 2776,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c9081631d06f92b146106a057508063346656461461063557806339db25f7146105e15780634f64b2be146105a15780636d09021814610565578063715018a61461050b5780637f389fd5146104b1578063870a6a87146103875780638da5cb5b1461035f5780639dc79be4146102c9578063a49a7cb114610294578063b49757a6146101fb578063e1f26f22146101cc578063e441eebf1461018d5763f2fde38b146100c857600080fd5b34610189576020366003190112610189576100e16106bc565b906100ea610747565b6001600160a01b0391821692831561013757505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101c85760203660031901126101c8576020916001600160a01b03908290826101b76106bc565b168152600285522054169051908152f35b5080fd5b5050346101c857816003193601126101c85760209051736b9bb36519538e0c073894e964e90172e1c0b41f8152f35b5034610189576020366003190112610189576102156106bc565b9061021e610747565b82516321df0da760e01b8152906020908290816001600160a01b0386165afa9081156102875761025693508491610259575b50610b06565b80f35b61027a915060203d8111610280575b6102728183610878565b810190610ab9565b38610250565b503d610268565b50505051903d90823e3d90fd5b5050346101c857610256906102a836610718565b91906102b2610747565b6001600160a01b0316845260036020528320610ad8565b509034610189576102d936610718565b9190926102e4610747565b81516321df0da760e01b8152936001600160a01b03916020908690818585165afa90811561035557610256958792610331575b506103229082610b06565b16845260036020528320610ad8565b61032291925061034e9060203d8111610280576102728183610878565b9190610317565b83513d88823e3d90fd5b5050346101c857816003193601126101c857905490516001600160a01b039091168152602090f35b509190346101c85760603660031901126101c8576103a36106bc565b926103ac6106d7565b338452816020526103c260ff848620541661079f565b6001600160a01b038581168086526002602052848620549192916103e8908416156107f7565b845191611396918284019284841067ffffffffffffffff85111761049e5784926060949260ff92611c8786398352736b9bb36519538e0c073894e964e90172e1c0b41f6020840152168782015203019085f08015610287571692833b1561049b578251916334fcf43760e01b835260243590830152808260248183885af190811561049057506020946104819285926104875750610b06565b51908152f35b61027a9061084e565b8351903d90823e3d90fd5b80fd5b634e487b7160e01b895260418752602489fd5b509190346101c85760203660031901126101c8576001600160a01b036104d56106bc565b168252600360205260ff818320541690519160028210156104f857602083838152f35b634e487b7160e01b815260218452602490fd5b833461049b578060031936011261049b57610524610747565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101895760203660031901126101895760209260ff918391906001600160a01b036105906106bc565b168252855220541690519015158152f35b503461018957602036600319011261018957359160015483101561049b57506105cb6020926106e7565b905491519160018060a01b039160031b1c168152f35b5090346101895780600319360112610189576105fb6106bc565b916024359283151580940361063157610612610747565b60018060a01b0316845260205282209060ff8019835416911617905580f35b8480fd5b50346101895760803660031901126101895761064f6106bc565b6106576106d7565b9060643592600284101561069c579061068260ff8660209861068b9796953382528a5220541661079f565b6024359061089a565b90516001600160a01b039091168152f35b8580fd5b8490346101c857816003193601126101c8576020906001548152f35b600435906001600160a01b03821682036106d257565b600080fd5b6044359060ff821682036106d257565b60015481101561070257600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60409060031901126106d2576004356001600160a01b03811681036106d2579060243560028110156106d25790565b6000546001600160a01b0316330361075b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156107a657565b60405162461bcd60e51b815260206004820152602360248201527f4d65726765466163746f72793a204e6f7420616c6c6f77656420746f206465706044820152626c6f7960e81b6064820152608490fd5b156107fe57565b60405162461bcd60e51b815260206004820152602260248201527f4d65726765466163746f72793a204d6572676520616c72656164792065786973604482015261747360f01b6064820152608490fd5b67ffffffffffffffff811161086257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761086257604052565b9190600093849260018060a01b03918286169081885260026020526040976108c7858a83205416156107f7565b6002821015610aa55781156109fb5750600114610921576064875162461bcd60e51b815260206004820152602060248201527f4d65726765466163746f72793a20496e76616c6964206d6572676520747970656044820152fd5b865191611396918284019284841067ffffffffffffffff8511176109e75784926060949260ff92611c8786398352736b9bb36519538e0c073894e964e90172e1c0b41f6020840152168982015203019084f080156109dd571693843b15610189578051916334fcf43760e01b83526004830152828260248183895af19081156109d45750908492916109bc575b50506109b991610b06565b90565b8192506109c89061084e565b61049b578083916109ae565b513d84823e3d90fd5b85513d85823e3d90fd5b634e487b7160e01b88526041600452602488fd5b955050865191611084918284019284841067ffffffffffffffff8511176109e75784926060949260ff92610c038639736b9bb36519538e0c073894e964e90172e1c0b41f84526020840152168982015203019084f080156109dd571693843b15610189578051916334fcf43760e01b83526004830152828260248183895af19081156109d45750916109b993918593610a96575b5050610b06565b610a9f9061084e565b38610a8f565b634e487b7160e01b81526021600452602490fd5b908160209103126106d257516001600160a01b03811681036106d25790565b906002811015610af05760ff80198354169116179055565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03908116908115610bbd576000908282526002602052610b3381604084205416156107f7565b600154600160401b811015610ba95790610b758260017fe413d0f68462f6240160d618a454469f475317b43867a99c353c0acc7bf4ec1b9594016001556106e7565b81549060031b908387831b921b19161790558382526002602052604082209416938460018060a01b031982541617905580a3565b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b815260206004820152601b60248201527f4d65726765466163746f72793a20496e76616c6964206d6572676500000000006044820152606490fdfe60803461010557601f61108438819003918201601f19168301916001600160401b0383118484101761010a578084926060946040528339810103126101055761004781610120565b604061005560208401610120565b9201519160ff83168303610105576001600081815581546001600160a81b031980821633600881811b610100600160a81b0316929092179095556040519791946001600160a01b039492939092911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3606460025581600454941660018060a01b0319600354161760035560ff60a01b9060a01b16931691161717600455610f4f90816101358239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101055756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610a575750806324a47aeb1461095c57806334fcf437146108a957806335faa416146107615780634e71d92d146106d05780635c975abb146106ac578063679aefce1461068d57806370a0823114610655578063715018a6146105f15780638da5cb5b146105c45780638f4ffcb11461049d57838163b6b55f25146103f457508063bf3506c1146103b5578063c4ae3168146102d2578063daf498631461028c578063e1f26f2214610265578063ea9f2417146101c65763f2fde38b146100eb57600080fd5b346101c25760203660031901126101c257610104610a7c565b61010c610a97565b6001600160a01b0381811693909290841561017057505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101c257826003193601126101c2576101e0610b42565b60035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa91821561025c57508391610227575b61022492503391610ba9565b80f35b90506020823d8211610254575b8161024160209383610af2565b810103126101c257610224915190610218565b3d9150610234565b513d85823e3d90fd5b50346101c257826003193601126101c2575490516001600160a01b03909116815260209150f35b5050346102ce5760203660031901126102ce579081906001600160a01b036102b2610a7c565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101c257826003193601126101c2576102eb610a97565b60015460ff81161561037457506001549060ff82161561033a575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258936103a5610b42565b60ff19161760015551338152a180f35b5050346102ce5760203660031901126102ce5760209160019082906001600160a01b036103e0610a7c565b168152600585522001549051904210158152f35b8084843461049957602036600319011261049957610451602091610416610a97565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af19081156104905750610465575080f35b6104859060203d8111610489575b61047d8183610af2565b810190610b2a565b5080f35b503d610473565b513d84823e3d90fd5b5050fd5b508290346102ce5760803660031901126102ce576104b9610a7c565b906001600160a01b03604435818116036105bc5760643567ffffffffffffffff8082116105c057366023830112156105c057818401359081116105c057369101602401116105bc5760028454146105795760028455610516610b42565b6003541690811561053657509061052f91602435610ba9565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b845162461bcd60e51b8152602081840152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8580fd5b5050346102ce57816003193601126102ce57600154905160089190911c6001600160a01b03168152602090f35b833461065257806003193601126106525761060a610a97565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346102ce5760203660031901126102ce5760209181906001600160a01b0361067d610a7c565b1681526005845220549051908152f35b5050346102ce57816003193601126102ce576020906002549051908152f35b5050346102ce57816003193601126102ce5760209060ff6001541690519015158152f35b5090346101c257826003193601126101c2576106ea610b42565b60ff825460a01c1615610754575b33835260056020526001818420015442106107165782610224610e9e565b906020606492519162461bcd60e51b8352820152601860248201527711585d195c8e8815995cdd1a5b99c81b9bdd08195b99195960421b6044820152fd5b61075c610e9e565b6106f8565b509190346102ce57816003193601126102ce5761077c610a97565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa96871561089f578697610870575b50861561082d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af190811561025c5750610810578280f35b8161082692903d106104895761047d8183610af2565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610898575b6108888183610af2565b810103126105c0575195386107b7565b503d61087e565b84513d88823e3d90fd5b5090346101c25760203660031901126101c2578135916108c7610a97565b821561090f575081600254036108db578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b508290346102ce576020806003193601126101c25781359161097c610b42565b60035485516370a0823160e01b815233838201526001600160a01b0390911692908181602481875afa908115610a4d579085918791610a1c575b50106109c85784610224338587610ba9565b855162461bcd60e51b815291820152602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b606482015260849150fd5b809250838092503d8311610a46575b610a358183610af2565b810103126105c057849051886109b6565b503d610a2b565b87513d88823e3d90fd5b8490346102ce57816003193601126102ce576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610a9257565b600080fd5b60015460081c6001600160a01b03163303610aae57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610b1457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610a9257518015158103610a925790565b60ff60015416610b4e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b91908201809211610b9357565b634e487b7160e01b600052601160045260246000fd5b90929160018060a01b0391828216926000928484526020936005855260409283822054600254808702908782041487151715610e8a57906064610bed920490610b86565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115610e80578591610e4f575b508511610df65785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015610dec57610dcf575b5089549160a083901c60ff1615610d35575050506201518060ff895460a01c160262ffffff8116908103610d2257610ca79042610b86565b9083519284840184811067ffffffffffffffff821117610d0f577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af18015610dc5577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c895969750610da8575b50610d08565b610dbe90843d86116104895761047d8183610af2565b5038610da2565b82513d89823e3d90fd5b610de590883d8a116104895761047d8183610af2565b5038610c6f565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d8311610e79575b610e668183610af2565b81010312610e75575138610c1e565b8480fd5b503d610e5c565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b33600081815260056020908152604080832080549084905560048054925163a9059cbb60e01b81529081019590955260248501529091839160449183916001600160a01b03165af18015610f0d57610ef35750565b610f0a9060203d81116104895761047d8183610af2565b50565b6040513d6000823e3d90fdfea26469706673582212209217fd1e373f2e7e6152ae4079eeb11715c1ae86803335d93b8b843ca81d9fde64736f6c6343000813003360803461010557601f61139638819003918201601f19168301916001600160401b0383118484101761010a578084926060946040528339810103126101055761004781610120565b604061005560208401610120565b9201519160ff83168303610105576001600081815581546001600160a81b031980821633600881811b610100600160a81b0316929092179095556040519791946001600160a01b039492939092911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3606460025581600454941660018060a01b0319600354161760035560ff60a01b9060a01b1693169116171760045561126190816101358239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101055756fe6040608081526004908136101561001557600080fd5b600091823560e01c8063213897fe14610ab657806321df0da714610a8d57806324a47aeb1461099257806334fcf437146108df57806335faa416146107935780634e71d92d146107025780635c975abb146106de57806361d027b3146106b5578063679aefce1461069657806370a082311461065e578063715018a6146105fd5780638da5cb5b146105d05780638f4ffcb11461050457838163b6b55f251461045b57508063bf3506c11461041c578063c4ae316814610339578063daf49863146102f3578063e1f26f22146102cc578063ea9f24171461022d578063f0f44260146101e55763f2fde38b1461010a57600080fd5b346101e15760203660031901126101e157610123610d41565b61012b610d57565b6001600160a01b0381811693909290841561018f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b833461022a57602036600319011261022a576101ff610d41565b610207610d57565b600680546001600160a01b0319166001600160a01b039290921691909117905580f35b80fd5b5090346101e157826003193601126101e157610247610e02565b60035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa9182156102c35750839161028e575b61028b92503391610ebf565b80f35b90506020823d82116102bb575b816102a860209383610db2565b810103126101e15761028b91519061027f565b3d915061029b565b513d85823e3d90fd5b50346101e157826003193601126101e1575490516001600160a01b03909116815260209150f35b505034610335576020366003190112610335579081906001600160a01b03610319610d41565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101e157826003193601126101e157610352610d57565b60015460ff8116156103db57506001549060ff8216156103a1575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361040c610e02565b60ff19161760015551338152a180f35b5050346103355760203660031901126103355760209160019082906001600160a01b03610447610d41565b168152600585522001549051904210158152f35b80848434610500576020366003190112610500576104b860209161047d610d57565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af19081156104f757506104cc575080f35b6104ec9060203d81116104f0575b6104e48183610db2565b810190610dea565b5080f35b503d6104da565b513d84823e3d90fd5b5050fd5b5082903461033557608036600319011261033557610520610d41565b906001600160a01b03604435818116036105cc5760643567ffffffffffffffff81116105c8576105539036908401610d0e565b505061055d610e46565b610565610e02565b6003541690811561058557509061057e91602435610ebf565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b8480fd5b8380fd5b505034610335578160031936011261033557600154905160089190911c6001600160a01b03168152602090f35b833461022a578060031936011261022a57610616610d57565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346103355760203660031901126103355760209181906001600160a01b03610686610d41565b1681526005845220549051908152f35b5050346103355781600319360112610335576020906002549051908152f35b50503461033557816003193601126103355760065490516001600160a01b039091168152602090f35b50503461033557816003193601126103355760209060ff6001541690519015158152f35b5090346101e157826003193601126101e15761071c610e02565b60ff825460a01c1615610786575b3383526005602052600181842001544210610748578261028b6111b0565b906020606492519162461bcd60e51b8352820152601860248201527711585d195c8e8815995cdd1a5b99c81b9bdd08195b99195960421b6044820152fd5b61078e6111b0565b61072a565b509190346103355781600319360112610335576107ae610d57565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa9687156108d55786976108a2575b50861561085f57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af19081156102c35750610842578280f35b8161085892903d106104f0576104e48183610db2565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d83116108ce575b6108ba8183610db2565b810103126108ca575195386107e9565b8580fd5b503d6108b0565b84513d88823e3d90fd5b5090346101e15760203660031901126101e1578135916108fd610d57565b821561094557508160025403610911578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b50829034610335576020806003193601126101e1578135916109b2610e02565b60035485516370a0823160e01b815233838201526001600160a01b0390911692908181602481875afa908115610a83579085918791610a52575b50106109fe578461028b338587610ebf565b855162461bcd60e51b815291820152602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b606482015260849150fd5b809250838092503d8311610a7c575b610a6b8183610db2565b810103126108ca57849051886109ec565b503d610a61565b87513d88823e3d90fd5b50503461033557816003193601126103355760035490516001600160a01b039091168152602090f35b50346101e15760603660031901126101e1578035916001600160a01b03602435818116908190036108ca5760443567ffffffffffffffff8111610d0a57610b009036908601610d0e565b959094610b0b610e46565b60035485516370a0823160e01b81523383820152602098918616908981602481855afa908115610d00579085918c91610ccb575b5010610c735790610b548a9392339086610ebf565b600354875163095ea7b360e01b81526001600160a01b0387168482019081526020810187905290918b9183918a169082908890829060400103925af18015610c6957918a97969594939160a493610c4c575b508087600654168015600014610c465750309a5b8860035416988b519c8d9a8b998a976302454b7160e41b8952880152602487015216604485015260806064850152816084850152848401378181018301849052601f01601f191681010301925af19081156102c35750610c1d575b826001815580f35b813d8311610c3f575b610c308183610db2565b8101031261022a573880610c15565b503d610c26565b9a610bba565b610c6290893d8b116104f0576104e48183610db2565b5038610ba6565b88513d86823e3d90fd5b865162461bcd60e51b81528084018a9052602c60248201527f4d65726765576974684d61726b65743a20496e73756666696369656e7420626160448201526b1b185b98d9481d1bc819585d60a21b6064820152608490fd5b8092508b8092503d8311610cf9575b610ce48183610db2565b81010312610cf55784905138610b3f565b8a80fd5b503d610cda565b88513d8d823e3d90fd5b8680fd5b9181601f84011215610d3c5782359167ffffffffffffffff8311610d3c5760208381860195010111610d3c57565b600080fd5b600435906001600160a01b0382168203610d3c57565b60015460081c6001600160a01b03163303610d6e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610dd457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610d3c57518015158103610d3c5790565b60ff60015416610e0e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b600260005414610e57576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b91908201809211610ea957565b634e487b7160e01b600052601160045260246000fd5b90929160018060a01b039182821692600092848452602093600585526040928382205460025480870290878204148715171561119c57906064610f03920490610e9c565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115611192578591611165575b50851161110c5785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015611102576110e5575b5089549160a083901c60ff161561104b575050506201518060ff895460a01c160262ffffff811690810361103857610fbd9042610e9c565b9083519284840184811067ffffffffffffffff821117611025577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af180156110db577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8959697506110be575b5061101e565b6110d490843d86116104f0576104e48183610db2565b50386110b8565b82513d89823e3d90fd5b6110fb90883d8a116104f0576104e48183610db2565b5038610f85565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d831161118b575b61117c8183610db2565b810103126105c8575138610f34565b503d611172565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b33600081815260056020908152604080832080549084905560048054925163a9059cbb60e01b81529081019590955260248501529091839160449183916001600160a01b03165af1801561121f576112055750565b61121c9060203d81116104f0576104e48183610db2565b50565b6040513d6000823e3d90fdfea2646970667358221220954ef735ee8819364a9c258753fcca5addf47509606a1dbdb8fa745f7544bed064736f6c63430008130033a2646970667358221220fb22014585c64a6f2e1c92048aeaa91f494299e62db4c4aa344e7ad24f0e233064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D06F92B EQ PUSH2 0x6A0 JUMPI POP DUP1 PUSH4 0x34665646 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0x39DB25F7 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x6D090218 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x7F389FD5 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x870A6A87 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x9DC79BE4 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xA49A7CB1 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xB49757A6 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xE441EEBF EQ PUSH2 0x18D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0xE1 PUSH2 0x6BC JUMP JUMPDEST SWAP1 PUSH2 0xEA PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x137 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x1B7 PUSH2 0x6BC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x215 PUSH2 0x6BC JUMP JUMPDEST SWAP1 PUSH2 0x21E PUSH2 0x747 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x21DF0DA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x287 JUMPI PUSH2 0x256 SWAP4 POP DUP5 SWAP2 PUSH2 0x259 JUMPI JUMPDEST POP PUSH2 0xB06 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH2 0x27A SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x280 JUMPI JUMPDEST PUSH2 0x272 DUP2 DUP4 PUSH2 0x878 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xAB9 JUMP JUMPDEST CODESIZE PUSH2 0x250 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x268 JUMP JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI PUSH2 0x256 SWAP1 PUSH2 0x2A8 CALLDATASIZE PUSH2 0x718 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2B2 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 PUSH2 0xAD8 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x189 JUMPI PUSH2 0x2D9 CALLDATASIZE PUSH2 0x718 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x2E4 PUSH2 0x747 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x21DF0DA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x20 SWAP1 DUP7 SWAP1 DUP2 DUP6 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x355 JUMPI PUSH2 0x256 SWAP6 DUP8 SWAP3 PUSH2 0x331 JUMPI JUMPDEST POP PUSH2 0x322 SWAP1 DUP3 PUSH2 0xB06 JUMP JUMPDEST AND DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0x322 SWAP2 SWAP3 POP PUSH2 0x34E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x280 JUMPI PUSH2 0x272 DUP2 DUP4 PUSH2 0x878 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x317 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C8 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1C8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C8 JUMPI PUSH2 0x3A3 PUSH2 0x6BC JUMP JUMPDEST SWAP3 PUSH2 0x3AC PUSH2 0x6D7 JUMP JUMPDEST CALLER DUP5 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x3C2 PUSH1 0xFF DUP5 DUP7 KECCAK256 SLOAD AND PUSH2 0x79F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x3E8 SWAP1 DUP5 AND ISZERO PUSH2 0x7F7 JUMP JUMPDEST DUP5 MLOAD SWAP2 PUSH2 0x1396 SWAP2 DUP3 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x49E JUMPI DUP5 SWAP3 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0xFF SWAP3 PUSH2 0x1C87 DUP7 CODECOPY DUP4 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F PUSH1 0x20 DUP5 ADD MSTORE AND DUP8 DUP3 ADD MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0x287 JUMPI AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x49B JUMPI DUP3 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP4 ADD MSTORE DUP1 DUP3 PUSH1 0x24 DUP2 DUP4 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI POP PUSH1 0x20 SWAP5 PUSH2 0x481 SWAP3 DUP6 SWAP3 PUSH2 0x487 JUMPI POP PUSH2 0xB06 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x27A SWAP1 PUSH2 0x84E JUMP JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4D5 PUSH2 0x6BC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF DUP2 DUP4 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP2 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x20 DUP4 DUP4 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 DUP5 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x49B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x49B JUMPI PUSH2 0x524 PUSH2 0x747 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH1 0x20 SWAP3 PUSH1 0xFF SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x590 PUSH2 0x6BC JUMP JUMPDEST AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x49B JUMPI POP PUSH2 0x5CB PUSH1 0x20 SWAP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x189 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x189 JUMPI PUSH2 0x5FB PUSH2 0x6BC JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP1 SWAP5 SUB PUSH2 0x631 JUMPI PUSH2 0x612 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 MSTORE DUP3 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x189 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x189 JUMPI PUSH2 0x64F PUSH2 0x6BC JUMP JUMPDEST PUSH2 0x657 PUSH2 0x6D7 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x2 DUP5 LT ISZERO PUSH2 0x69C JUMPI SWAP1 PUSH2 0x682 PUSH1 0xFF DUP7 PUSH1 0x20 SWAP9 PUSH2 0x68B SWAP8 SWAP7 SWAP6 CALLER DUP3 MSTORE DUP11 MSTORE KECCAK256 SLOAD AND PUSH2 0x79F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x89A JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C8 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6D2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x6D2 JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x6D2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6D2 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x75B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x7A6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204E6F7420616C6C6F77656420746F20646570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6C6F79 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x7FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204D6572676520616C72656164792065786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x862 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x862 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x0 SWAP4 DUP5 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP7 AND SWAP1 DUP2 DUP9 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP8 PUSH2 0x8C7 DUP6 DUP11 DUP4 KECCAK256 SLOAD AND ISZERO PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xAA5 JUMPI DUP2 ISZERO PUSH2 0x9FB JUMPI POP PUSH1 0x1 EQ PUSH2 0x921 JUMPI PUSH1 0x64 DUP8 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A20496E76616C6964206D657267652074797065 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD SWAP2 PUSH2 0x1396 SWAP2 DUP3 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x9E7 JUMPI DUP5 SWAP3 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0xFF SWAP3 PUSH2 0x1C87 DUP7 CODECOPY DUP4 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F PUSH1 0x20 DUP5 ADD MSTORE AND DUP10 DUP3 ADD MSTORE SUB ADD SWAP1 DUP5 CREATE DUP1 ISZERO PUSH2 0x9DD JUMPI AND SWAP4 DUP5 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI DUP1 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP4 DUP10 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D4 JUMPI POP SWAP1 DUP5 SWAP3 SWAP2 PUSH2 0x9BC JUMPI JUMPDEST POP POP PUSH2 0x9B9 SWAP2 PUSH2 0xB06 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP2 SWAP3 POP PUSH2 0x9C8 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x49B JUMPI DUP1 DUP4 SWAP2 PUSH2 0x9AE JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST SWAP6 POP POP DUP7 MLOAD SWAP2 PUSH2 0x1084 SWAP2 DUP3 DUP5 ADD SWAP3 DUP5 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x9E7 JUMPI DUP5 SWAP3 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0xFF SWAP3 PUSH2 0xC03 DUP7 CODECOPY PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE AND DUP10 DUP3 ADD MSTORE SUB ADD SWAP1 DUP5 CREATE DUP1 ISZERO PUSH2 0x9DD JUMPI AND SWAP4 DUP5 EXTCODESIZE ISZERO PUSH2 0x189 JUMPI DUP1 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP3 DUP3 PUSH1 0x24 DUP2 DUP4 DUP10 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D4 JUMPI POP SWAP2 PUSH2 0x9B9 SWAP4 SWAP2 DUP6 SWAP4 PUSH2 0xA96 JUMPI JUMPDEST POP POP PUSH2 0xB06 JUMP JUMPDEST PUSH2 0xA9F SWAP1 PUSH2 0x84E JUMP JUMPDEST CODESIZE PUSH2 0xA8F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6D2 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6D2 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xAF0 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xBBD JUMPI PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xB33 DUP2 PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xBA9 JUMPI SWAP1 PUSH2 0xB75 DUP3 PUSH1 0x1 PUSH32 0xE413D0F68462F6240160D618A454469F475317B43867A99C353C0ACC7BF4EC1B SWAP6 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0x6E7 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP8 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP4 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP5 AND SWAP4 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A20496E76616C6964206D657267650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID PUSH1 0x80 CALLVALUE PUSH2 0x105 JUMPI PUSH1 0x1F PUSH2 0x1084 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x105 JUMPI PUSH2 0x47 DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x55 PUSH1 0x20 DUP5 ADD PUSH2 0x120 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x105 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP1 DUP3 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x4 SLOAD SWAP5 AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP4 AND SWAP2 AND OR OR PUSH1 0x4 SSTORE PUSH2 0xF4F SWAP1 DUP2 PUSH2 0x135 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x105 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xA57 JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x95C JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8A9 JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x761 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x6D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x49D JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x3F4 JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1C6 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x104 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x10C PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x170 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x1E0 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x25C JUMPI POP DUP4 SWAP2 PUSH2 0x227 JUMPI JUMPDEST PUSH2 0x224 SWAP3 POP CALLER SWAP2 PUSH2 0xBA9 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x254 JUMPI JUMPDEST DUP2 PUSH2 0x241 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C2 JUMPI PUSH2 0x224 SWAP2 MLOAD SWAP1 PUSH2 0x218 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x234 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2B2 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x2EB PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x374 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x33A JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x3A5 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E0 PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x499 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x499 JUMPI PUSH2 0x451 PUSH1 0x20 SWAP2 PUSH2 0x416 PUSH2 0xA97 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x490 JUMPI POP PUSH2 0x465 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x485 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI JUMPDEST PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB2A JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x473 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x4B9 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x5C0 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x5C0 JUMPI DUP2 DUP5 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x5C0 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x5BC JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x579 JUMPI PUSH1 0x2 DUP5 SSTORE PUSH2 0x516 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x536 JUMPI POP SWAP1 PUSH2 0x52F SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xBA9 JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x652 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x652 JUMPI PUSH2 0x60A PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x67D PUSH2 0xA7C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI PUSH2 0x6EA PUSH2 0xB42 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x754 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x716 JUMPI DUP3 PUSH2 0x224 PUSH2 0xE9E JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x75C PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH2 0x77C PUSH2 0xA97 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x89F JUMPI DUP7 SWAP8 PUSH2 0x870 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x82D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x25C JUMPI POP PUSH2 0x810 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x826 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x898 JUMPI JUMPDEST PUSH2 0x888 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7B7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x87E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8C7 PUSH2 0xA97 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x90F JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x8DB JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x97C PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA4D JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA1C JUMPI JUMPDEST POP LT PUSH2 0x9C8 JUMPI DUP5 PUSH2 0x224 CALLER DUP6 DUP8 PUSH2 0xBA9 JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA46 JUMPI JUMPDEST PUSH2 0xA35 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C0 JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9B6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA2B JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x2CE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2CE JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA92 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xAAE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xB14 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xA92 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xA92 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xB4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB93 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xE8A JUMPI SWAP1 PUSH1 0x64 PUSH2 0xBED SWAP3 DIV SWAP1 PUSH2 0xB86 JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE80 JUMPI DUP6 SWAP2 PUSH2 0xE4F JUMPI JUMPDEST POP DUP6 GT PUSH2 0xDF6 JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDCF JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0xD35 JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0xD22 JUMPI PUSH2 0xCA7 SWAP1 TIMESTAMP PUSH2 0xB86 JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0F JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0xDA8 JUMPI JUMPDEST POP PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xDBE SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xDA2 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xDE5 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP CODESIZE PUSH2 0xC6F JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE79 JUMPI JUMPDEST PUSH2 0xE66 DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE75 JUMPI MLOAD CODESIZE PUSH2 0xC1E JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xE5C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH2 0xEF3 JUMPI POP JUMP JUMPDEST PUSH2 0xF0A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x489 JUMPI PUSH2 0x47D DUP2 DUP4 PUSH2 0xAF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 OR REVERT 0x1E CALLDATACOPY EXTCODEHASH 0x2E PUSH31 0x6152AE4079EEB11715C1AE86803335D93B8B843CA81D9FDE64736F6C634300 ADDMOD SGT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x105 JUMPI PUSH1 0x1F PUSH2 0x1396 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x105 JUMPI PUSH2 0x47 DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x55 PUSH1 0x20 DUP5 ADD PUSH2 0x120 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x105 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP1 DUP3 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x4 SLOAD SWAP5 AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP4 AND SWAP2 AND OR OR PUSH1 0x4 SSTORE PUSH2 0x1261 SWAP1 DUP2 PUSH2 0x135 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x105 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x213897FE EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xA8D JUMPI DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x992 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x504 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x45B JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x1E5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x123 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x12B PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x18F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH2 0x1FF PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x207 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x247 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2C3 JUMPI POP DUP4 SWAP2 PUSH2 0x28E JUMPI JUMPDEST PUSH2 0x28B SWAP3 POP CALLER SWAP2 PUSH2 0xEBF JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2BB JUMPI JUMPDEST DUP2 PUSH2 0x2A8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E1 JUMPI PUSH2 0x28B SWAP2 MLOAD SWAP1 PUSH2 0x27F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x319 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x352 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x3DB JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x3A1 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x40C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x447 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x500 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x500 JUMPI PUSH2 0x4B8 PUSH1 0x20 SWAP2 PUSH2 0x47D PUSH2 0xD57 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4F7 JUMPI POP PUSH2 0x4CC JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x4EC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI JUMPDEST PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xDEA JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x4DA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH2 0x520 PUSH2 0xD41 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5CC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C8 JUMPI PUSH2 0x553 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xD0E JUMP JUMPDEST POP POP PUSH2 0x55D PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x565 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x585 JUMPI POP SWAP1 PUSH2 0x57E SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22A JUMPI PUSH2 0x616 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x686 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x6 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x71C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x786 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x748 JUMPI DUP3 PUSH2 0x28B PUSH2 0x11B0 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x78E PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH2 0x7AE PUSH2 0xD57 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x8D5 JUMPI DUP7 SWAP8 PUSH2 0x8A2 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x85F JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0x842 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x858 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8CE JUMPI JUMPDEST PUSH2 0x8BA DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7E9 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8B0 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8FD PUSH2 0xD57 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x945 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x911 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x9B2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA83 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA52 JUMPI JUMPDEST POP LT PUSH2 0x9FE JUMPI DUP5 PUSH2 0x28B CALLER DUP6 DUP8 PUSH2 0xEBF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA7C JUMPI JUMPDEST PUSH2 0xA6B DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9EC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA61 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x8CA JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD0A JUMPI PUSH2 0xB00 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xD0E JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xB0B PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x20 SWAP9 SWAP2 DUP7 AND SWAP1 DUP10 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD00 JUMPI SWAP1 DUP6 SWAP2 DUP13 SWAP2 PUSH2 0xCCB JUMPI JUMPDEST POP LT PUSH2 0xC73 JUMPI SWAP1 PUSH2 0xB54 DUP11 SWAP4 SWAP3 CALLER SWAP1 DUP7 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x3 SLOAD DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP12 SWAP2 DUP4 SWAP2 DUP11 AND SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xC69 JUMPI SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 PUSH1 0xA4 SWAP4 PUSH2 0xC4C JUMPI JUMPDEST POP DUP1 DUP8 PUSH1 0x6 SLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xC46 JUMPI POP ADDRESS SWAP11 JUMPDEST DUP9 PUSH1 0x3 SLOAD AND SWAP9 DUP12 MLOAD SWAP13 DUP14 SWAP11 DUP12 SWAP10 DUP11 SWAP8 PUSH4 0x2454B71 PUSH1 0xE4 SHL DUP10 MSTORE DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD MSTORE DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0xC1D JUMPI JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xC30 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x22A JUMPI CODESIZE DUP1 PUSH2 0xC15 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC26 JUMP JUMPDEST SWAP11 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xC62 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xBA6 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765576974684D61726B65743A20496E73756666696369656E74206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B185B98D9481D1BC819585D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP12 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xCF9 JUMPI JUMPDEST PUSH2 0xCE4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCF5 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0xB3F JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCDA JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xD3C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xD3C JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD6E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDD4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xE0E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xE57 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEA9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x119C JUMPI SWAP1 PUSH1 0x64 PUSH2 0xF03 SWAP3 DIV SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1192 JUMPI DUP6 SWAP2 PUSH2 0x1165 JUMPI JUMPDEST POP DUP6 GT PUSH2 0x110C JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH2 0x10E5 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0x104B JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0x1038 JUMPI PUSH2 0xFBD SWAP1 TIMESTAMP PUSH2 0xE9C JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1025 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0x10DB JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0x10BE JUMPI JUMPDEST POP PUSH2 0x101E JUMP JUMPDEST PUSH2 0x10D4 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0x10B8 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x10FB SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xF85 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x118B JUMPI JUMPDEST PUSH2 0x117C DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C8 JUMPI MLOAD CODESIZE PUSH2 0xF34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1172 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x121F JUMPI PUSH2 0x1205 JUMPI POP JUMP JUMPDEST PUSH2 0x121C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x4E 0xF7 CALLDATALOAD 0xEE DUP9 NOT CALLDATASIZE 0x4A SWAP13 0x25 DUP8 MSTORE8 0xFC 0xCA GAS 0xDD DELEGATECALL PUSH22 0x9606A1DBDB8FA745F7544BED064736F6C6343000813 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0x22 ADD GASLIMIT DUP6 0xC6 0x4A PUSH16 0x2E1C92048AEAA91F494299E62DB4C4AA CALLVALUE 0x4E PUSH27 0xD24F0E233064736F6C634300081300330000000000000000000000 ",
              "sourceMap": "343:2899:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;-1:-1:-1;;;;;343:2899:10;;;;2162:22:0;;343:2899:10;;-1:-1:-1;;343:2899:10;;-1:-1:-1;;;;;;343:2899:10;;;;;;;2566:40:0;343:2899:10;;2566:40:0;343:2899:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;-1:-1:-1;;;;;343:2899:10;;;;;;:::i;:::-;;;;577:41;343:2899;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:42;343:2899;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;343:2899:10;;-1:-1:-1;;;2164:26:10;;343:2899;;;;;;-1:-1:-1;;;;;343:2899:10;;2164:26;;;;;;;2217:5;2164:26;;;;;;343:2899;2217:5;;:::i;:::-;343:2899;;2164:26;;;;343:2899;2164:26;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;343:2899;;;;;;;;;;;;;;;;;;2536:29;343:2899;;;;:::i;:::-;1063:62:0;;;;:::i;:::-;-1:-1:-1;;;;;343:2899:10;;;2536:10;343:2899;;;;2536:29;:::i;343:2899::-;;;;;;;;;:::i;:::-;1063:62:0;;;;;:::i;:::-;343:2899:10;;-1:-1:-1;;;2343:26:10;;343:2899;-1:-1:-1;;;;;343:2899:10;2343:26;;343:2899;;;;;;2343:26;;;;;;;2412:29;2343:26;;;;;343:2899;2396:5;;;;;:::i;:::-;343:2899;;;2412:10;2343:26;343:2899;;;2412:29;:::i;2343:26::-;2396:5;2343:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;343:2899;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;343:2899:10;;;;;;;;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;:::i;:::-;;;;:::i;:::-;3100:10;343:2899;;;;;3075:76;343:2899;;;;;;3075:76;:::i;:::-;-1:-1:-1;;;;;343:2899:10;;;;;;1035:6;343:2899;;;;;;;;;1027:74;;343:2899;;1035:27;1027:74;:::i;:::-;343:2899;;1135:49;;;;;;;;;;;;;;;;;;343:2899;1135:49;;343:2899;1135:49;;;;343:2899;;478:42;343:2899;;;;;;;;;1135:49;;;;;;;;;343:2899;1195:29;;;;;;343:2899;;;;;;1195:29;;343:2899;;1195:29;;;343:2899;1195:29;;343:2899;1195:29;;;;;;;;;;;343:2899;1195:29;1251:5;1195:29;;;;;1251:5;;:::i;:::-;343:2899;;;;;1195:29;;;;:::i;:::-;343:2899;;;;;;;;;;1195:29;343:2899;;1135:49;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;-1:-1:-1;;;;;343:2899:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;343:2899:10;;-1:-1:-1;;;;;;343:2899:10;;;;;;-1:-1:-1;;;;;343:2899:10;2566:40:0;343:2899:10;;2566:40:0;343:2899:10;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;;;;;;-1:-1:-1;;;;;343:2899:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;;;526:23;;;;;;;343:2899;526:23;;:::i;:::-;343:2899;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1063:62:0;;:::i;:::-;343:2899:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;343:2899:10;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;3100:10;3075:76;343:2899;3100:10;343:2899;3100:10;3161:1;3100:10;;;;343:2899;;;;;;;3075:76;:::i;:::-;343:2899;;3161:1;;:::i;:::-;343:2899;;-1:-1:-1;;;;;343:2899:10;;;;;;;;;;;;;;;;;;;;;;;;;;878:6;343:2899;;;;;;;;-1:-1:-1;;;;;343:2899:10;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;526:23;343:2899;;;;;;526:23;-1:-1:-1;343:2899:10;;-1:-1:-1;343:2899:10;;;-1:-1:-1;343:2899:10;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;343:2899:10;;;;;;;;;;;;;;;;:::o;1359:130:0:-;1273:6;343:2899:10;-1:-1:-1;;;;;343:2899:10;734:10:5;1422:23:0;343:2899:10;;1359:130:0:o;343:2899:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1292:788::-;;;343:2899;1292:788;;343:2899;;;;;;;;;;;;;;1452:6;343:2899;;;;1444:74;343:2899;;;;;;1452:27;1444:74;:::i;:::-;1452:6;343:2899;;;;;1533:30;;1529:238;;1781:33;343:2899;1781:33;1777:244;;343:2899;;;;;;2031:42;;343:2899;2031:42;;;343:2899;;;;;;;;;;;2031:42;1777:244;343:2899;;1854:49;;;;;;;;;;;;;;;;;;343:2899;1854:49;;343:2899;1854:49;;;;343:2899;;478:42;343:2899;;;;;;;;;1854:49;;;;;;;;;343:2899;1918:29;;;;;;343:2899;;;;;;1918:29;;;;;343:2899;1918:29;;343:2899;1918:29;;;;;;;;;;;;;;;;;1777:244;1978:5;;;;;:::i;:::-;1998:12;:::o;1918:29::-;;;;;;;:::i;:::-;343:2899;;1918:29;;;;;;343:2899;;;;;;;;1854:49;343:2899;;;;;;;;;1854:49;-1:-1:-1;;;343:2899:10;;;;;;;;1529:238;343:2899;;;;;1603:46;;;;;;;;;;;;;;;;;;343:2899;1603:46;;343:2899;1603:46;;;;478:42;343:2899;;;;;;;;;;;1603:46;;;;;;;;;343:2899;1664:29;;;;;;343:2899;;;;;;1664:29;;;;;343:2899;1664:29;;343:2899;1664:29;;;;;;;;;;;;1724:5;1664:29;;;;;;1529:238;1724:5;;;:::i;1664:29::-;;;;:::i;:::-;;;;343:2899;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;343:2899:10;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;343:2899:10;;;;;-1:-1:-1;343:2899:10;2578:319;-1:-1:-1;;;;;343:2899:10;;;;2654:19;;343:2899;;2671:1;343:2899;;;;2723:6;343:2899;;2715:74;343:2899;;;;;;2723:27;2715:74;:::i;:::-;343:2899;;-1:-1:-1;;;343:2899:10;;;;;;;;;2864:26;343:2899;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2723:6;343:2899;;;;;;;;;;;;;;;;;;;;;2864:26;;2578:319::o;343:2899::-;-1:-1:-1;;;343:2899:10;;;;;;;;;;;-1:-1:-1;;;343:2899:10;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "allowedDeployers(address)": "6d090218",
              "createMerge(address,uint256,uint8)": "870a6a87",
              "createMergeWithType(address,uint256,uint8,uint8)": "34665646",
              "getMergeCount()": "1d06f92b",
              "mergeTypes(address)": "7f389fd5",
              "merges(address)": "e441eebf",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setAllowedDeployer(address,bool)": "39db25f7",
              "setMerge(address)": "b49757a6",
              "setMergeWithType(address,uint8)": "9dc79be4",
              "setType(address,uint8)": "a49a7cb1",
              "tokens(uint256)": "4f64b2be",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merge\",\"type\":\"address\"}],\"name\":\"MergeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedDeployers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"vestingDuration\",\"type\":\"uint8\"}],\"name\":\"createMerge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"vestingDuration\",\"type\":\"uint8\"},{\"internalType\":\"enum MergeFactory.MergeType\",\"name\":\"mergeType\",\"type\":\"uint8\"}],\"name\":\"createMergeWithType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMergeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mergeTypes\",\"outputs\":[{\"internalType\":\"enum MergeFactory.MergeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"merges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merge\",\"type\":\"address\"}],\"name\":\"setMerge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merge\",\"type\":\"address\"},{\"internalType\":\"enum MergeFactory.MergeType\",\"name\":\"mergeType\",\"type\":\"uint8\"}],\"name\":\"setMergeWithType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum MergeFactory.MergeType\",\"name\":\"mergeType\",\"type\":\"uint8\"}],\"name\":\"setType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/MergeFactory.sol\":\"MergeFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x731fc249ed278f3760a6bef8d362dfce289a1055f37632e5e87bc0cc69c70a33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1ded46e25d0fba5cec5ce15c2561fa37bd14ed4067bc488fd89f17b7c2775c9\",\"dweb:/ipfs/QmZimcRTRiSvZD2kxcHDHpkYTidBYa12yUf1L3Ze1JPYsG\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x3177601da5cf73493c55d772d3eef90a5a94c1759b25865bb85a5d535673757c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e60c7c822608e8a49bd26ba6b52b44f9e72fe1ff09fd91b3ad3a89f1af9d72b2\",\"dweb:/ipfs/QmdYYZBnwNMZCM47BH17tJXdj3AJStJXDS1oVmXwUfzdKV\"]},\"contracts/core/merge/MergeFactory.sol\":{\"keccak256\":\"0xbe3db929708f6f22f3a85982503627c4e0839f3cd3001fdf58b58cc4c685cab6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f65e1fba699621eb803cac7f184dbb70c08391959b5024546ffbe30143540a07\",\"dweb:/ipfs/QmRrKTBDegkgJBcsFAPJxHsYDKvvrFJe6U93zum6fCuh3m\"]},\"contracts/core/merge/MergeWithMarket.sol\":{\"keccak256\":\"0xef88443bbd7445732ed3edc4e897f7fa18df3ce672397ee502cd56b0b0d67c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6101d2c172dbc2b16edb4b57987ac4b3e7f6d59c4ce15a7ca5b92b23d1b0a8de\",\"dweb:/ipfs/QmYi2yUiB934omRo7mVfN5DZTan4rb6xizzPqnUaH5zsj7\"]},\"contracts/interfaces/IAMM.sol\":{\"keccak256\":\"0x07b4bb28eacf58b1194c9464cf8e68824530c873a5c89a19a70046cea8bc7bc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119610f746a910ecb9bcbf2bdfd60d21b4a132a700d34d104a9727bdf56cc16f\",\"dweb:/ipfs/Qma1oWk489YELXmhj79eVgxZWZxZ3e525fM15RG8uUZTJM\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/MergeWithMarket.sol": {
        "MergeWithMarket": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_wewe",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_vestingDuration",
                  "type": "uint8"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "canClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAMM",
                  "name": "amm",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "mergeAndSell",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_treasury",
                  "type": "address"
                }
              ],
              "name": "setTreasury",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "treasury",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vestings",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 288,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461010557601f61139638819003918201601f19168301916001600160401b0383118484101761010a578084926060946040528339810103126101055761004781610120565b604061005560208401610120565b9201519160ff83168303610105576001600081815581546001600160a81b031980821633600881811b610100600160a81b0316929092179095556040519791946001600160a01b039492939092911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3606460025581600454941660018060a01b0319600354161760035560ff60a01b9060a01b1693169116171760045561126190816101358239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101055756fe6040608081526004908136101561001557600080fd5b600091823560e01c8063213897fe14610ab657806321df0da714610a8d57806324a47aeb1461099257806334fcf437146108df57806335faa416146107935780634e71d92d146107025780635c975abb146106de57806361d027b3146106b5578063679aefce1461069657806370a082311461065e578063715018a6146105fd5780638da5cb5b146105d05780638f4ffcb11461050457838163b6b55f251461045b57508063bf3506c11461041c578063c4ae316814610339578063daf49863146102f3578063e1f26f22146102cc578063ea9f24171461022d578063f0f44260146101e55763f2fde38b1461010a57600080fd5b346101e15760203660031901126101e157610123610d41565b61012b610d57565b6001600160a01b0381811693909290841561018f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b833461022a57602036600319011261022a576101ff610d41565b610207610d57565b600680546001600160a01b0319166001600160a01b039290921691909117905580f35b80fd5b5090346101e157826003193601126101e157610247610e02565b60035481516370a0823160e01b815233938101939093526001600160a01b0316602083602481845afa9182156102c35750839161028e575b61028b92503391610ebf565b80f35b90506020823d82116102bb575b816102a860209383610db2565b810103126101e15761028b91519061027f565b3d915061029b565b513d85823e3d90fd5b50346101e157826003193601126101e1575490516001600160a01b03909116815260209150f35b505034610335576020366003190112610335579081906001600160a01b03610319610d41565b1681526005602052206001815491015482519182526020820152f35b5080fd5b50346101e157826003193601126101e157610352610d57565b60015460ff8116156103db57506001549060ff8216156103a1575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589361040c610e02565b60ff19161760015551338152a180f35b5050346103355760203660031901126103355760209160019082906001600160a01b03610447610d41565b168152600585522001549051904210158152f35b80848434610500576020366003190112610500576104b860209161047d610d57565b805484516323b872dd60e01b815233818401908152306020820152923560408401529586936001600160a01b03909216928492839160600190565b03925af19081156104f757506104cc575080f35b6104ec9060203d81116104f0575b6104e48183610db2565b810190610dea565b5080f35b503d6104da565b513d84823e3d90fd5b5050fd5b5082903461033557608036600319011261033557610520610d41565b906001600160a01b03604435818116036105cc5760643567ffffffffffffffff81116105c8576105539036908401610d0e565b505061055d610e46565b610565610e02565b6003541690811561058557509061057e91602435610ebf565b6001815580f35b606490602086519162461bcd60e51b8352820152601c60248201527f45617465723a20546f6b656e2061646472657373206e6f7420736574000000006044820152fd5b8480fd5b8380fd5b505034610335578160031936011261033557600154905160089190911c6001600160a01b03168152602090f35b833461022a578060031936011261022a57610616610d57565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346103355760203660031901126103355760209181906001600160a01b03610686610d41565b1681526005845220549051908152f35b5050346103355781600319360112610335576020906002549051908152f35b50503461033557816003193601126103355760065490516001600160a01b039091168152602090f35b50503461033557816003193601126103355760209060ff6001541690519015158152f35b5090346101e157826003193601126101e15761071c610e02565b60ff825460a01c1615610786575b3383526005602052600181842001544210610748578261028b6111b0565b906020606492519162461bcd60e51b8352820152601860248201527711585d195c8e8815995cdd1a5b99c81b9bdd08195b99195960421b6044820152fd5b61078e6111b0565b61072a565b509190346103355781600319360112610335576107ae610d57565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa9687156108d55786976108a2575b50861561085f57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af19081156102c35750610842578280f35b8161085892903d106104f0576104e48183610db2565b5081808280f35b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d83116108ce575b6108ba8183610db2565b810103126108ca575195386107e9565b8580fd5b503d6108b0565b84513d88823e3d90fd5b5090346101e15760203660031901126101e1578135916108fd610d57565b821561094557508160025403610911578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b50829034610335576020806003193601126101e1578135916109b2610e02565b60035485516370a0823160e01b815233838201526001600160a01b0390911692908181602481875afa908115610a83579085918791610a52575b50106109fe578461028b338587610ebf565b855162461bcd60e51b815291820152602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b606482015260849150fd5b809250838092503d8311610a7c575b610a6b8183610db2565b810103126108ca57849051886109ec565b503d610a61565b87513d88823e3d90fd5b50503461033557816003193601126103355760035490516001600160a01b039091168152602090f35b50346101e15760603660031901126101e1578035916001600160a01b03602435818116908190036108ca5760443567ffffffffffffffff8111610d0a57610b009036908601610d0e565b959094610b0b610e46565b60035485516370a0823160e01b81523383820152602098918616908981602481855afa908115610d00579085918c91610ccb575b5010610c735790610b548a9392339086610ebf565b600354875163095ea7b360e01b81526001600160a01b0387168482019081526020810187905290918b9183918a169082908890829060400103925af18015610c6957918a97969594939160a493610c4c575b508087600654168015600014610c465750309a5b8860035416988b519c8d9a8b998a976302454b7160e41b8952880152602487015216604485015260806064850152816084850152848401378181018301849052601f01601f191681010301925af19081156102c35750610c1d575b826001815580f35b813d8311610c3f575b610c308183610db2565b8101031261022a573880610c15565b503d610c26565b9a610bba565b610c6290893d8b116104f0576104e48183610db2565b5038610ba6565b88513d86823e3d90fd5b865162461bcd60e51b81528084018a9052602c60248201527f4d65726765576974684d61726b65743a20496e73756666696369656e7420626160448201526b1b185b98d9481d1bc819585d60a21b6064820152608490fd5b8092508b8092503d8311610cf9575b610ce48183610db2565b81010312610cf55784905138610b3f565b8a80fd5b503d610cda565b88513d8d823e3d90fd5b8680fd5b9181601f84011215610d3c5782359167ffffffffffffffff8311610d3c5760208381860195010111610d3c57565b600080fd5b600435906001600160a01b0382168203610d3c57565b60015460081c6001600160a01b03163303610d6e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610dd457604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610d3c57518015158103610d3c5790565b60ff60015416610e0e57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b600260005414610e57576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b91908201809211610ea957565b634e487b7160e01b600052601160045260246000fd5b90929160018060a01b039182821692600092848452602093600585526040928382205460025480870290878204148715171561119c57906064610f03920490610e9c565b92600499828b5416888c60248951809481936370a0823160e01b835230908301525afa908115611192578591611165575b50851161110c5785516323b872dd60e01b81526001600160a01b0383168c82019081523060208201526040810189905290918991839190829003606001908290889088165af18015611102576110e5575b5089549160a083901c60ff161561104b575050506201518060ff895460a01c160262ffffff811690810361103857610fbd9042610e9c565b9083519284840184811067ffffffffffffffff821117611025577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c898999a509185916001949383528552878501928352338152600588522092518355519101555b51908152a2565b634e487b7160e01b835260418b52602483fd5b634e487b7160e01b825260118952602482fd5b855163a9059cbb60e01b81526001600160a01b039092169a82019a8b5260208b019490945291989192869284929183918c919083906040010393165af180156110db577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8959697506110be575b5061101e565b6110d490843d86116104f0576104e48183610db2565b50386110b8565b82513d89823e3d90fd5b6110fb90883d8a116104f0576104e48183610db2565b5038610f85565b86513d86823e3d90fd5b855162461bcd60e51b8152808c01899052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508881813d831161118b575b61117c8183610db2565b810103126105c8575138610f34565b503d611172565b87513d87823e3d90fd5b634e487b7160e01b84526011600452602484fd5b33600081815260056020908152604080832080549084905560048054925163a9059cbb60e01b81529081019590955260248501529091839160449183916001600160a01b03165af1801561121f576112055750565b61121c9060203d81116104f0576104e48183610db2565b50565b6040513d6000823e3d90fdfea2646970667358221220954ef735ee8819364a9c258753fcca5addf47509606a1dbdb8fa745f7544bed064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x105 JUMPI PUSH1 0x1F PUSH2 0x1396 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x10A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x105 JUMPI PUSH2 0x47 DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH1 0x40 PUSH2 0x55 PUSH1 0x20 DUP5 ADD PUSH2 0x120 JUMP JUMPDEST SWAP3 ADD MLOAD SWAP2 PUSH1 0xFF DUP4 AND DUP4 SUB PUSH2 0x105 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP1 DUP3 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP6 SSTORE PUSH1 0x40 MLOAD SWAP8 SWAP2 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP4 SWAP1 SWAP3 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x4 SLOAD SWAP5 AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 PUSH1 0xA0 SHL AND SWAP4 AND SWAP2 AND OR OR PUSH1 0x4 SSTORE PUSH2 0x1261 SWAP1 DUP2 PUSH2 0x135 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x105 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x213897FE EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xA8D JUMPI DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x992 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x504 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x45B JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x1E5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x123 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x12B PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x18F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH2 0x1FF PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x207 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x247 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2C3 JUMPI POP DUP4 SWAP2 PUSH2 0x28E JUMPI JUMPDEST PUSH2 0x28B SWAP3 POP CALLER SWAP2 PUSH2 0xEBF JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2BB JUMPI JUMPDEST DUP2 PUSH2 0x2A8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E1 JUMPI PUSH2 0x28B SWAP2 MLOAD SWAP1 PUSH2 0x27F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x319 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x352 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x3DB JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x3A1 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x40C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x447 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x500 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x500 JUMPI PUSH2 0x4B8 PUSH1 0x20 SWAP2 PUSH2 0x47D PUSH2 0xD57 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4F7 JUMPI POP PUSH2 0x4CC JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x4EC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI JUMPDEST PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xDEA JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x4DA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH2 0x520 PUSH2 0xD41 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5CC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C8 JUMPI PUSH2 0x553 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xD0E JUMP JUMPDEST POP POP PUSH2 0x55D PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x565 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x585 JUMPI POP SWAP1 PUSH2 0x57E SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22A JUMPI PUSH2 0x616 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x686 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x6 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x71C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x786 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x748 JUMPI DUP3 PUSH2 0x28B PUSH2 0x11B0 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x78E PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH2 0x7AE PUSH2 0xD57 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x8D5 JUMPI DUP7 SWAP8 PUSH2 0x8A2 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x85F JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0x842 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x858 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8CE JUMPI JUMPDEST PUSH2 0x8BA DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7E9 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8B0 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8FD PUSH2 0xD57 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x945 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x911 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x9B2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA83 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA52 JUMPI JUMPDEST POP LT PUSH2 0x9FE JUMPI DUP5 PUSH2 0x28B CALLER DUP6 DUP8 PUSH2 0xEBF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA7C JUMPI JUMPDEST PUSH2 0xA6B DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9EC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA61 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x8CA JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD0A JUMPI PUSH2 0xB00 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xD0E JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xB0B PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x20 SWAP9 SWAP2 DUP7 AND SWAP1 DUP10 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD00 JUMPI SWAP1 DUP6 SWAP2 DUP13 SWAP2 PUSH2 0xCCB JUMPI JUMPDEST POP LT PUSH2 0xC73 JUMPI SWAP1 PUSH2 0xB54 DUP11 SWAP4 SWAP3 CALLER SWAP1 DUP7 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x3 SLOAD DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP12 SWAP2 DUP4 SWAP2 DUP11 AND SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xC69 JUMPI SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 PUSH1 0xA4 SWAP4 PUSH2 0xC4C JUMPI JUMPDEST POP DUP1 DUP8 PUSH1 0x6 SLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xC46 JUMPI POP ADDRESS SWAP11 JUMPDEST DUP9 PUSH1 0x3 SLOAD AND SWAP9 DUP12 MLOAD SWAP13 DUP14 SWAP11 DUP12 SWAP10 DUP11 SWAP8 PUSH4 0x2454B71 PUSH1 0xE4 SHL DUP10 MSTORE DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD MSTORE DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0xC1D JUMPI JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xC30 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x22A JUMPI CODESIZE DUP1 PUSH2 0xC15 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC26 JUMP JUMPDEST SWAP11 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xC62 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xBA6 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765576974684D61726B65743A20496E73756666696369656E74206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B185B98D9481D1BC819585D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP12 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xCF9 JUMPI JUMPDEST PUSH2 0xCE4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCF5 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0xB3F JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCDA JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xD3C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xD3C JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD6E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDD4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xE0E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xE57 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEA9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x119C JUMPI SWAP1 PUSH1 0x64 PUSH2 0xF03 SWAP3 DIV SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1192 JUMPI DUP6 SWAP2 PUSH2 0x1165 JUMPI JUMPDEST POP DUP6 GT PUSH2 0x110C JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH2 0x10E5 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0x104B JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0x1038 JUMPI PUSH2 0xFBD SWAP1 TIMESTAMP PUSH2 0xE9C JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1025 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0x10DB JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0x10BE JUMPI JUMPDEST POP PUSH2 0x101E JUMP JUMPDEST PUSH2 0x10D4 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0x10B8 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x10FB SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xF85 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x118B JUMPI JUMPDEST PUSH2 0x117C DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C8 JUMPI MLOAD CODESIZE PUSH2 0xF34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1172 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x121F JUMPI PUSH2 0x1205 JUMPI POP JUMP JUMPDEST PUSH2 0x121C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x4E 0xF7 CALLDATALOAD 0xEE DUP9 NOT CALLDATASIZE 0x4A SWAP13 0x25 DUP8 MSTORE8 0xFC 0xCA GAS 0xDD DELEGATECALL PUSH22 0x9606A1DBDB8FA745F7544BED064736F6C6343000813 STOP CALLER ",
              "sourceMap": "215:918:11:-:0;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;215:918:11;;;;;-1:-1:-1;;;;;;215:918:11;;;734:10:5;215:918:11;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;-1:-1:-1;;;;;215:918:11;;;734:10:5;;215:918:11;;;;;2566:40:0;;-1:-1:-1;2566:40:0;434:3:9;426:11;215:918:11;;447:12:9;215:918:11;;;;;;;;;469:14:9;215:918:11;;;469:14:9;215:918:11;;;;;;;;;;;;;;447:12:9;215:918:11;;;;;;;;;-1:-1:-1;215:918:11;;;;;;-1:-1:-1;215:918:11;;;;;-1:-1:-1;215:918:11;;;;-1:-1:-1;;;;;215:918:11;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3393,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3562,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 3342,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3740,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3506,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 3415,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_claim_inner": {
                  "entryPoint": 4528,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_merge": {
                  "entryPoint": 3775,
                  "id": 820,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 3654,
                  "id": 265,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 3586,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x213897FE EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xA8D JUMPI DUP1 PUSH4 0x24A47AEB EQ PUSH2 0x992 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x793 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x702 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x696 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x65E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x504 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x45B JUMPI POP DUP1 PUSH4 0xBF3506C1 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xDAF49863 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x1E5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x123 PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x12B PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x18F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22A JUMPI PUSH2 0x1FF PUSH2 0xD41 JUMP JUMPDEST PUSH2 0x207 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x247 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP4 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2C3 JUMPI POP DUP4 SWAP2 PUSH2 0x28E JUMPI JUMPDEST PUSH2 0x28B SWAP3 POP CALLER SWAP2 PUSH2 0xEBF JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x2BB JUMPI JUMPDEST DUP2 PUSH2 0x2A8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E1 JUMPI PUSH2 0x28B SWAP2 MLOAD SWAP1 PUSH2 0x27F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x29B JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x319 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x352 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x3DB JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x3A1 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x40C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x447 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 TIMESTAMP LT ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x500 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x500 JUMPI PUSH2 0x4B8 PUSH1 0x20 SWAP2 PUSH2 0x47D PUSH2 0xD57 JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP5 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE SWAP3 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4F7 JUMPI POP PUSH2 0x4CC JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x4EC SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI JUMPDEST PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xDEA JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x4DA JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH2 0x520 PUSH2 0xD41 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 AND SUB PUSH2 0x5CC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5C8 JUMPI PUSH2 0x553 SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0xD0E JUMP JUMPDEST POP POP PUSH2 0x55D PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x565 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x585 JUMPI POP SWAP1 PUSH2 0x57E SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20546F6B656E2061646472657373206E6F742073657400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x22A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22A JUMPI PUSH2 0x616 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x686 PUSH2 0xD41 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x6 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI PUSH2 0x71C PUSH2 0xE02 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x786 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 DUP2 DUP5 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0x748 JUMPI DUP3 PUSH2 0x28B PUSH2 0x11B0 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x11585D195C8E8815995CDD1A5B99C81B9BDD08195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x78E PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH2 0x7AE PUSH2 0xD57 JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0x8D5 JUMPI DUP7 SWAP8 PUSH2 0x8A2 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x85F JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0x842 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x858 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8CE JUMPI JUMPDEST PUSH2 0x8BA DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x7E9 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8B0 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x8FD PUSH2 0xD57 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x945 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0x911 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x335 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x9B2 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 DUP2 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA83 JUMPI SWAP1 DUP6 SWAP2 DUP8 SWAP2 PUSH2 0xA52 JUMPI JUMPDEST POP LT PUSH2 0x9FE JUMPI DUP5 PUSH2 0x28B CALLER DUP6 DUP8 PUSH2 0xEBF JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP2 POP REVERT JUMPDEST DUP1 SWAP3 POP DUP4 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xA7C JUMPI JUMPDEST PUSH2 0xA6B DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8CA JUMPI DUP5 SWAP1 MLOAD DUP9 PUSH2 0x9EC JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xA61 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x335 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x335 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E1 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x8CA JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD0A JUMPI PUSH2 0xB00 SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xD0E JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xB0B PUSH2 0xE46 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP6 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD MSTORE PUSH1 0x20 SWAP9 SWAP2 DUP7 AND SWAP1 DUP10 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD00 JUMPI SWAP1 DUP6 SWAP2 DUP13 SWAP2 PUSH2 0xCCB JUMPI JUMPDEST POP LT PUSH2 0xC73 JUMPI SWAP1 PUSH2 0xB54 DUP11 SWAP4 SWAP3 CALLER SWAP1 DUP7 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x3 SLOAD DUP8 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP12 SWAP2 DUP4 SWAP2 DUP11 AND SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xC69 JUMPI SWAP2 DUP11 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP2 PUSH1 0xA4 SWAP4 PUSH2 0xC4C JUMPI JUMPDEST POP DUP1 DUP8 PUSH1 0x6 SLOAD AND DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0xC46 JUMPI POP ADDRESS SWAP11 JUMPDEST DUP9 PUSH1 0x3 SLOAD AND SWAP9 DUP12 MLOAD SWAP13 DUP14 SWAP11 DUP12 SWAP10 DUP11 SWAP8 PUSH4 0x2454B71 PUSH1 0xE4 SHL DUP10 MSTORE DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD MSTORE DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x2C3 JUMPI POP PUSH2 0xC1D JUMPI JUMPDEST DUP3 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xC30 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x22A JUMPI CODESIZE DUP1 PUSH2 0xC15 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC26 JUMP JUMPDEST SWAP11 PUSH2 0xBBA JUMP JUMPDEST PUSH2 0xC62 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xBA6 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP11 SWAP1 MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765576974684D61726B65743A20496E73756666696369656E74206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B185B98D9481D1BC819585D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP12 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xCF9 JUMPI JUMPDEST PUSH2 0xCE4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xCF5 JUMPI DUP5 SWAP1 MLOAD CODESIZE PUSH2 0xB3F JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xCDA JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xD3C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xD3C JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3C JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD6E JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDD4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xD3C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xE0E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xE57 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEA9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP3 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x5 DUP6 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP3 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x119C JUMPI SWAP1 PUSH1 0x64 PUSH2 0xF03 SWAP3 DIV SWAP1 PUSH2 0xE9C JUMP JUMPDEST SWAP3 PUSH1 0x4 SWAP10 DUP3 DUP12 SLOAD AND DUP9 DUP13 PUSH1 0x24 DUP10 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1192 JUMPI DUP6 SWAP2 PUSH2 0x1165 JUMPI JUMPDEST POP DUP6 GT PUSH2 0x110C JUMPI DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP13 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP2 DUP10 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH1 0x60 ADD SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x1102 JUMPI PUSH2 0x10E5 JUMPI JUMPDEST POP DUP10 SLOAD SWAP2 PUSH1 0xA0 DUP4 SWAP1 SHR PUSH1 0xFF AND ISZERO PUSH2 0x104B JUMPI POP POP POP PUSH3 0x15180 PUSH1 0xFF DUP10 SLOAD PUSH1 0xA0 SHR AND MUL PUSH3 0xFFFFFF DUP2 AND SWAP1 DUP2 SUB PUSH2 0x1038 JUMPI PUSH2 0xFBD SWAP1 TIMESTAMP PUSH2 0xE9C JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP3 DUP5 DUP5 ADD DUP5 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1025 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP9 SWAP10 SWAP11 POP SWAP2 DUP6 SWAP2 PUSH1 0x1 SWAP5 SWAP4 DUP4 MSTORE DUP6 MSTORE DUP8 DUP6 ADD SWAP3 DUP4 MSTORE CALLER DUP2 MSTORE PUSH1 0x5 DUP9 MSTORE KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD SWAP2 ADD SSTORE JUMPDEST MLOAD SWAP1 DUP2 MSTORE LOG2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 DUP12 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 DUP10 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP11 DUP3 ADD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 SWAP9 SWAP2 SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 DUP13 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x40 ADD SUB SWAP4 AND GAS CALL DUP1 ISZERO PUSH2 0x10DB JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 SWAP8 POP PUSH2 0x10BE JUMPI JUMPDEST POP PUSH2 0x101E JUMP JUMPDEST PUSH2 0x10D4 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0x10B8 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x10FB SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP CODESIZE PUSH2 0xF85 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP13 ADD DUP10 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x118B JUMPI JUMPDEST PUSH2 0x117C DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5C8 JUMPI MLOAD CODESIZE PUSH2 0xF34 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1172 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP6 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x121F JUMPI PUSH2 0x1205 JUMPI POP JUMP JUMPDEST PUSH2 0x121C SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x4F0 JUMPI PUSH2 0x4E4 DUP2 DUP4 PUSH2 0xDB2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0x4E 0xF7 CALLDATALOAD 0xEE DUP9 NOT CALLDATASIZE 0x4A SWAP13 0x25 DUP8 MSTORE8 0xFC 0xCA GAS 0xDD DELEGATECALL PUSH22 0x9606A1DBDB8FA745F7544BED064736F6C6343000813 STOP CALLER ",
              "sourceMap": "215:918:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;215:918:11;;;;;;;2162:22:0;;215:918:11;;-1:-1:-1;;215:918:11;;;-1:-1:-1;;;;;;215:918:11;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;2566:40:0;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;480:20:11;215:918;;-1:-1:-1;;;;;;215:918:11;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1204:72:1;;:::i;:::-;215:918:11;;;;-1:-1:-1;;;1128:36:9;;1153:10;1128:36;;;215:918:11;;;;-1:-1:-1;;;;;215:918:11;1128:36:9;215:918:11;;;;1128:36:9;;;;;;;;;;;;215:918:11;1198:10:9;1153;;;1198;;:::i;:::-;215:918:11;;1128:36:9;;;;;;;;;;;;;;;;;:::i;:::-;;;215:918:11;;;;1198:10:9;215:918:11;;1128:36:9;;;;;;-1:-1:-1;1128:36:9;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;;-1:-1:-1;215:918:11;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;;-1:-1:-1;;;;;215:918:11;;:::i;:::-;;;;661:43:8;215:918:11;;;;;;661:43:8;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;215:918:11;;;;;;;;1685:7:1;215:918:11;;;;;;;;-1:-1:-1;;;215:918:11;1685:7:1;215:918:11;;734:10:5;215:918:11;;2521:22:1;;215:918:11;;2521:22:1;215:918:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;2499:32:8;215:918:11;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;215:918:11;;1685:7:1;215:918:11;;734:10:5;215:918:11;;2274:20:1;215:918:11;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;;;;;-1:-1:-1;;;;;215:918:11;;:::i;:::-;;;;621:8:9;215:918:11;;;621:21:9;215:918:11;;;646:15:9;;-1:-1:-1;621:40:9;215:918:11;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;2597:60:8;215:918:11;1063:62:0;;;:::i;:::-;215:918:11;;;;-1:-1:-1;;;2597:60:8;;2623:10;2597:60;;;215:918:11;;;2643:4:8;215:918:11;;;;;;;;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;2597:60:8;;;;;;;;;;;;;215:918:11;;;2597:60:8;;;215:918:11;2597:60:8;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;215:918:11;;2597:60:8;;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;:::i;:::-;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2227:103:2;;;;:::i;:::-;1204:72:1;;:::i;:::-;215:918:11;;;2269:20:8;;;215:918:11;;;;2429:4:8;215:918:11;;;2429:4:8;:::i;:::-;215:918:11;1759:1:2;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;215:918:11;;-1:-1:-1;;;;;;215:918:11;;;;;;;;;-1:-1:-1;;;;;215:918:11;2566:40:0;215:918:11;;2566:40:0;215:918:11;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;;;-1:-1:-1;;;;;215:918:11;;:::i;:::-;;;;759:8:9;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;952:5:9;215:918:11;;;;;;;;;;;;;;;;;;;;;262:23;215:918;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;1204:72:1;;:::i;:::-;215:918:11;;;;;;2763:20:8;2759:52;;215:918:11;1533:10:9;215:918:11;;2829:8:8;215:918:11;;2829:21:8;215:918:11;;;2829:21:8;215:918:11;2854:15:8;-1:-1:-1;215:918:11;;2908:1:8;;;:::i;215:918:11:-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;2759:52:8;2799:1;;:::i;:::-;2759:52;;215:918:11;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;215:918:11;;;;-1:-1:-1;;;1820:37:8;;1851:4;1820:37;;;215:918:11;;1820:37:8;;215:918:11;-1:-1:-1;;;;;215:918:11;;;;;1820:37:8;215:918:11;;;;1820:37:8;;;;;;;;;;;215:918:11;1875:11:8;;;215:918:11;;;;;;-1:-1:-1;;;1927:39:8;;-1:-1:-1;;;;;215:918:11;;;;;;;;;1927:39:8;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;1927:39:8;;;;;;;;;;;;215:918:11;;;1927:39:8;;;;;;-1:-1:-1;1927:39:8;;;;;;:::i;:::-;;;;215:918:11;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;;;;;;;;;;1820:37:8;;;;;;;;;;;;;;;;;:::i;:::-;;;215:918:11;;;;;1820:37:8;;;;215:918:11;;;;1820:37:8;;;;;;215:918:11;;;;;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;1063:62:0;;;:::i;:::-;770:8:8;;215:918:11;;;;832:5:8;215:918:11;832:13:8;828:92;;215:918:11;;;828:92:8;1759:1:2;215:918:11;1759:1:2;892:17:8;1759:1:2;832:5:8;1759:1:2;215:918:11;;;;892:17:8;828:92;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;1204:72:1;;;:::i;:::-;215:918:11;;;;-1:-1:-1;;;1304:36:9;;1329:10;1304:36;;;215:918:11;-1:-1:-1;;;;;215:918:11;;;;;;;;;;1304:36:9;;;;;;;;;;;;;;215:918:11;1358:17:9;;215:918:11;;1329:10:9;1455;1329;;;1455;:::i;215:918:11:-;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;-1:-1:-1;215:918:11;1304:36:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;215:918:11;;;;;;;1304:36:9;;;;;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2227:103:2;;;;;:::i;:::-;215:918:11;;;;-1:-1:-1;;;637:36:11;;662:10;637:36;;;215:918;;;;;;;;;;;;637:36;;;;;;;;;;;;;;215:918;691:17;;215:918;;662:10;791;662;;;;791;;;:::i;:::-;215:918;;;;-1:-1:-1;;;879:44:11;;-1:-1:-1;;;;;215:918:11;;879:44;;;215:918;;;;;;;;;;;;;;;;;;;;879:44;;215:918;;;;879:44;;;;;;;;;;;;;;;;215:918;879:44;;;215:918;;;;1019:8;215:918;;1019:22;;:49;215:918;;;1052:4;;1019:49;;215:918;;;;;;;;;;;;;;;;;1078:46;;;;215:918;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:918:11;;;1078:46;;;;;;;;;;;;;1019:49;1759:1:2;215:918:11;1759:1:2;;215:918:11;;1078:46;;;;;;;;;;;;:::i;:::-;;;215:918;;;;1078:46;;;;;;;;;1019:49;;;;879:44;;;;;;;;;;;;;:::i;:::-;;;;;;215:918;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;637:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;215:918;;;;;;;637:36;;;215:918;;;;637:36;;;;;;215:918;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;215:918:11;;;;;;:::o;1359:130:0:-;215:918:11;;;;-1:-1:-1;;;;;215:918:11;734:10:5;1422:23:0;215:918:11;;1359:130:0:o;215:918:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1767:106:1:-;215:918:11;1685:7:1;215:918:11;;;;1767:106:1:o;215:918:11:-;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;2336:287:2;1759:1;2468:7;215:918:11;2468:19:2;1759:1;;;2468:7;1759:1;2336:287::o;1759:1::-;215:918:11;;-1:-1:-1;;;1759:1:2;;;;;;;;;;;215:918:11;1759:1:2;215:918:11;;;1759:1:2;;;;215:918:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;932:818:8;;;;215:918:11;;;;;;;;;-1:-1:-1;;215:918:11;;;;;;1035:8:8;215:918:11;;;;;;;;1116:5:8;215:918:11;;;;;;;;;;;;;;;;1125:3:8;1091:37;215:918:11;;1091:37:8;;:::i;:::-;1184:4;;215:918:11;;;;;;;;;;;;;;;;;1177:37:8;;1208:4;1177:37;;;215:918:11;1177:37:8;;;;;;;;;;;932:818;1159:55;;;215:918:11;;;;-1:-1:-1;;;1332:55:8;;-1:-1:-1;;;;;215:918:11;;1332:55:8;;;215:918:11;;;1208:4:8;215:918:11;;;;;;;;;;;;;;;;1332:55:8;;;;215:918:11;1332:55:8;;215:918:11;;;;;;1332:55:8;;;;;;;;932:818;-1:-1:-1;215:918:11;;;;;;;;;1436:20:8;215:918:11;;;;;1569:6:8;215:918:11;;;;;;;;;;;;;;;1533:42:8;:15;;:42;:::i;:::-;215:918:11;;;;;;;;;;;;;;;;1723:20:8;215:918:11;;;;;;;;;;;;;;1495:82:8;;;215:918:11;;;1481:10:8;215:918:11;;1035:8:8;215:918:11;;;;;1759:1:2;;215:918:11;;;1759:1:2;1432:276:8;215:918:11;;;;1723:20:8;932:818::o;215:918:11:-;-1:-1:-1;;;215:918:11;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;1432:276:8;215:918:11;;-1:-1:-1;;;1654:43:8;;-1:-1:-1;;;;;215:918:11;;;1654:43:8;;;215:918:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1654:43:8;215:918:11;;1654:43:8;;;;;;1723:20;1654:43;;;;;;1432:276;;;;1654:43;;;;;;;;;;;;;:::i;:::-;;;;;;215:918:11;;;;;;;;;1332:55:8;;;;;;;;;;;;;:::i;:::-;;;;;;215:918:11;;;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:3:8;215:918:11;;;;;;1177:37:8;;;;;;;;;;;;;;;;:::i;:::-;;;215:918:11;;;;;1177:37:8;;;;;;;;;215:918:11;;;;;;;;;;-1:-1:-1;;;215:918:11;;;;;;;;1479:220:9;1581:10;-1:-1:-1;215:918:11;;;1572:8:9;215:918:11;;;;;;;;;;1759:1:2;;;;1658:4:9;215:918:11;;;;-1:-1:-1;;;1651:41:9;;;;;215:918:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:918:11;1651:41:9;;;;;;;;1479:220;:::o;1651:41::-;;;215:918:11;1651:41:9;;;;;;;;;:::i;:::-;;1479:220::o;1651:41::-;215:918:11;;;-1:-1:-1;215:918:11;;;;"
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "canClaim(address)": "bf3506c1",
              "claim()": "4e71d92d",
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "mergeAndSell(uint256,address,bytes)": "213897fe",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "setTreasury(address)": "f0f44260",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "treasury()": "61d027b3",
              "vestings(address)": "daf49863",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wewe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_vestingDuration\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAMM\",\"name\":\"amm\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"mergeAndSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/MergeWithMarket.sol\":\"MergeWithMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x731fc249ed278f3760a6bef8d362dfce289a1055f37632e5e87bc0cc69c70a33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1ded46e25d0fba5cec5ce15c2561fa37bd14ed4067bc488fd89f17b7c2775c9\",\"dweb:/ipfs/QmZimcRTRiSvZD2kxcHDHpkYTidBYa12yUf1L3Ze1JPYsG\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x3177601da5cf73493c55d772d3eef90a5a94c1759b25865bb85a5d535673757c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e60c7c822608e8a49bd26ba6b52b44f9e72fe1ff09fd91b3ad3a89f1af9d72b2\",\"dweb:/ipfs/QmdYYZBnwNMZCM47BH17tJXdj3AJStJXDS1oVmXwUfzdKV\"]},\"contracts/core/merge/MergeWithMarket.sol\":{\"keccak256\":\"0xef88443bbd7445732ed3edc4e897f7fa18df3ce672397ee502cd56b0b0d67c98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6101d2c172dbc2b16edb4b57987ac4b3e7f6d59c4ce15a7ca5b92b23d1b0a8de\",\"dweb:/ipfs/QmYi2yUiB934omRo7mVfN5DZTan4rb6xizzPqnUaH5zsj7\"]},\"contracts/interfaces/IAMM.sol\":{\"keccak256\":\"0x07b4bb28eacf58b1194c9464cf8e68824530c873a5c89a19a70046cea8bc7bc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119610f746a910ecb9bcbf2bdfd60d21b4a132a700d34d104a9727bdf56cc16f\",\"dweb:/ipfs/Qma1oWk489YELXmhj79eVgxZWZxZ3e525fM15RG8uUZTJM\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAMM.sol": {
        "IAMM": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "Bought",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "Sold",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "buy",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "sell",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "sellAndBuy",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "buy(uint256,address,address,bytes)": "987bb07b",
              "sell(uint256,address,address,bytes)": "2454b710",
              "sellAndBuy(uint256,address,address,bytes)": "03679454"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Sold\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"sellAndBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAMM.sol\":\"IAMM\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAMM.sol\":{\"keccak256\":\"0x07b4bb28eacf58b1194c9464cf8e68824530c873a5c89a19a70046cea8bc7bc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119610f746a910ecb9bcbf2bdfd60d21b4a132a700d34d104a9727bdf56cc16f\",\"dweb:/ipfs/Qma1oWk489YELXmhj79eVgxZWZxZ3e525fM15RG8uUZTJM\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IMergeV2.sol": {
        "IMergeV2": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "setRate(uint256)": "34fcf437"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMergeV2.sol\":\"IMergeV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "IWeweReceiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWeweReceiver.sol\":\"IWeweReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      }
    }
  }
}