{
  "id": "0de2436eae2d28f1267e289d6b7e82c5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/core/merge/Eater.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../../interfaces/IWeweReceiver.sol\";\n\nabstract contract Eater is IWeweReceiver, ReentrancyGuard, Pausable, Ownable {\n    uint256 internal _rate;\n    address internal _token;\n    address public wewe;\n\n    function _setRate(uint256 rate) internal {\n        require(rate > 0, \"Eater: Rate must be greater than 0\");\n\n        if (_rate != rate) {\n            _rate = rate;\n            emit RateChanged(rate);\n        }\n    }\n\n    function _merge(uint256 amount, address token, address from) internal whenNotPaused {\n        uint256 weweToTransfer = (amount * _rate) / 100;\n        require(\n            weweToTransfer <= IERC20(wewe).balanceOf(address(this)),\n            \"Eater: Insufficient token balance to transfer\"\n        );\n\n        IERC20(token).transferFrom(from, address(this), amount);\n        IERC20(wewe).transfer(from, weweToTransfer);\n\n        emit Merged(amount, from);\n    }\n\n    function sweep() external onlyOwner {\n        uint256 balance = IERC20(wewe).balanceOf(address(this));\n        require(balance > 0, \"Eater: No balance to sweep\");\n        IERC20(wewe).transfer(owner(), balance);\n    }\n\n    /// @notice Wewe token approveAndCall function\n    function receiveApproval(\n        address from,\n        uint256 amount,\n        address,\n        bytes calldata\n    ) external nonReentrant whenNotPaused {\n        // After wewe approve and call, it will call this function\n        require(_token != address(0), \"GenericEater: Token address not set\");\n\n        // Eat the underlying token \"_token\" with the amount of \"amount\"\n        _merge(amount, _token, from);\n    }\n\n    function togglePause() external onlyOwner {\n        if (paused()) {\n            _unpause();\n        } else {\n            _pause();\n        }\n    }\n\n    function _deposit(uint256 amount) internal {\n        IERC20(wewe).transferFrom(msg.sender, address(this), amount);\n    }\n\n    event Merged(uint256 amount, address indexed account);\n    event RateChanged(uint256 newRate);\n}\n"
      },
      "contracts/core/merge/GenericMerge.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"./IMergeV2.sol\";\nimport {Eater} from \"./Eater.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract GenericMerge is Eater, IMergeV2 {\n    function getToken() external view returns (address) {\n        return _token;\n    }\n\n    constructor(address _wewe, address token) {\n        _rate = 100;\n        wewe = _wewe;\n        _token = token;\n    }\n\n    function getRate() external view returns (uint256) {\n        return _rate;\n    }\n\n    function setRate(uint256 rate) external onlyOwner {\n        _setRate(rate);\n    }\n\n    function mergeAll() external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        _merge(balance, _token, msg.sender);\n    }\n\n    function merge(uint256 amount) external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"GenericMerge: Insufficient balance to eat\");\n\n        _merge(amount, _token, msg.sender);\n    }\n\n    // @notice Fund this contract with wewe token\n    function deposit(uint256 amount) external onlyOwner {\n        _deposit(amount);\n    }\n}\n"
      },
      "contracts/core/merge/IMergeV2.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IMergeV2 {\n    function deposit(uint256 amount) external;\n    function getRate() external view returns (uint256);\n    function setRate(uint256 rate) external;\n    function getToken() external view returns (address);\n    function merge(uint256 amount) external;\n    function mergeAll() external;\n}\n"
      },
      "contracts/core/merge/MergeFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport \"./IMergeV2.sol\";\nimport {GenericMerge} from \"./GenericMerge.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MergeFactory is Ownable {\n    address public constant wewe = 0x6b9bb36519538e0C073894E964E90172E1c0B41F;\n    address[] public tokens;\n    // token => merge\n    mapping(address => address) public merges;\n    mapping(address => bool) public allowedDeployers;\n\n    constructor() {\n        allowedDeployers[msg.sender] = true;\n    }\n\n    function getMergeCount() external view returns (uint256) {\n        return tokens.length;\n    }\n\n    function createMerge(address token, uint256 rate) external onlyDeployer returns (address) {\n        require(merges[token] == address(0), \"MergeFactory: Merge already exists\");\n        address merge = address(new GenericMerge(token, wewe));\n        IMergeV2(merge).setRate(rate);\n        _setMerge(token, merge);\n        return merge;\n    }\n\n    function setMerge(address merge) external onlyOwner {\n        address token = IMergeV2(merge).getToken();\n        require(token != address(0), \"MergeFactory: Invalid merge\");\n        _setMerge(token, merge);\n    }\n\n    function _setMerge(address token, address merge) internal {\n        require(merges[token] == address(0), \"MergeFactory: Merge already exists\");\n        tokens.push(token);\n        merges[token] = merge;\n\n        emit MergeCreated(token, merge);\n    }\n\n    function setAllowedDeployer(address deployer, bool allowed) external onlyOwner {\n        allowedDeployers[deployer] = allowed;\n    }\n\n    modifier onlyDeployer() {\n        require(allowedDeployers[msg.sender], \"MergeFactory: Not allowed to deploy\");\n        _;\n    }\n\n    event MergeCreated(address indexed token, address indexed merge);\n}\n"
      },
      "contracts/interfaces/IApproveAndCall.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IApproveAndCall {\n    function approveAndCall(address spender, uint256 amount, bytes calldata extraData) external returns (bool);\n}\n"
      },
      "contracts/interfaces/IERC20Errors.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.19;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n"
      },
      "contracts/interfaces/IFarm.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface IFarm {\n    struct UserInfo {\n        uint256 amount; // How many LP tokens the user has provided.\n        int256 rewardDebt; // Reward debt. See explanation below.\n    }\n\n    struct PoolInfo {\n        uint128 accChaosPerShare; // Accumulated CHAOS per share, times 1e12.\n        uint64 lastRewardBlock; // Last block number that CHAOS distribution occurs.\n        uint64 allocPoint; // How many allocation points assigned to this pool. CHAOS to distribute per block.\n        uint256 totalSupply; // CHAOS allocated to the pool\n        uint8 weight; // Arbitrary weight for the pool\n    }\n\n    function getPoolInfo(uint256 pid) external view returns (PoolInfo memory);\n    function totalAllocPoint() external view returns (uint256);\n    function deposit(uint256 pid, uint256 amount, address to) external;\n    function withdraw(uint256 pid, uint256 amount, address to) external;\n    function emergencyWithdraw(uint256 pid) external;\n\n    function harvest(uint256 pid, address to) external;\n    function withdrawAndHarvest(uint256 pid, uint256 amount, address to) external;\n    function setVaultWeight(uint256 pid, uint8 weight) external;\n\n    function refundAll() external;\n    function refund(uint256 amount) external;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount, address indexed to);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount, address indexed to);\n    event Harvest(address indexed user, uint256 indexed pid, uint256 amount);\n\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount, address indexed to);\n    event Refunded(uint256 amount);\n}\n"
      },
      "contracts/interfaces/IOwnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface IOwnable {\n    function owner() external returns (address);\n}\n"
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IWeweReceiver {\n    function receiveApproval(address from, uint256 amount, address token, bytes calldata extraData) external;\n}\n"
      },
      "contracts/token/CHAOS.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport \"./ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../interfaces/IOwnable.sol\";\nimport \"../interfaces/IFarm.sol\";\nimport \"../interfaces/IApproveAndCall.sol\";\nimport {IWeweReceiver} from \"../interfaces/IWeweReceiver.sol\";\n\ncontract CHAOS is ERC20, IApproveAndCall, Ownable, ReentrancyGuard {\n    IFarm private _farm;\n\n    constructor() ERC20(\"CHAOS\", \"CHAOS\") {}\n\n    function setFarm(address farm) external onlyOwner {\n        _farm = IFarm(farm);\n    }\n\n    function mint(uint256 amount) external onlyOwner {\n        _mint(msg.sender, amount);\n    }\n\n    function mintToFarm(uint256 amount) external onlyOwner {\n        require(address(_farm) != address(0), \"CHAOS: Farm not set\");\n        _mint(address(_farm), amount);\n    }\n\n    function collectEmissions(uint256 pid) external {\n        require(address(_farm) != address(0), \"CHAOS: Farm not set\");\n        _farm.harvest(pid, msg.sender);\n    }\n\n    function approveAndCall(\n        address spender,\n        uint256 amount,\n        bytes calldata extraData\n    ) external nonReentrant returns (bool) {\n        // Approve the spender to spend the tokens\n        _approve(msg.sender, spender, amount);\n\n        // Call the receiveApproval function on the spender contract\n        IWeweReceiver(spender).receiveApproval(msg.sender, amount, address(this), extraData);\n\n        return true;\n    }\n}\n"
      },
      "contracts/token/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.19;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\nimport {IERC20Errors} from \"../interfaces/IERC20Errors.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "viaIR": true,
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "Ownable": [
              112
            ]
          },
          "id": 113,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 113,
              "sourceUnit": 419,
              "src": "127:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nameLocations": [
                      "683:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "683:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "683:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "159:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 112,
              "linearizedBaseContracts": [
                112,
                418
              ],
              "name": "Ownable",
              "nameLocation": "672:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "713:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "697:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "732:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "769:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "753:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "800:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "784:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "752:57:0"
                  },
                  "src": "726:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "926:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "955:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "955:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "936:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "936:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "816:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "926:0:0"
                  },
                  "scope": 112,
                  "src": "912:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 30,
                    "nodeType": "Block",
                    "src": "1084:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1094:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:13:0"
                      },
                      {
                        "id": 29,
                        "nodeType": "PlaceholderStatement",
                        "src": "1117:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "981:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 31,
                  "name": "onlyOwner",
                  "nameLocation": "1072:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1081:2:0"
                  },
                  "src": "1063:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "1256:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 37,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1273:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 36,
                        "id": 38,
                        "nodeType": "Return",
                        "src": "1266:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 40,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1210:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1215:2:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1247:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:9:0"
                  },
                  "scope": 112,
                  "src": "1201:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1404:85:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 45,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "1422:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1422:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 47,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "1433:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1433:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1422:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1447:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 44,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1414:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:68:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1368:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1379:2:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:0:0"
                  },
                  "scope": 112,
                  "src": "1359:130:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "1878:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1915:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 62,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1907:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 61,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1907:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1907:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1888:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66,
                        "nodeType": "ExpressionStatement",
                        "src": "1888:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1495:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 68,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 58,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 57,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1868:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1868:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1868:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1833:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1850:2:0"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1878:0:0"
                  },
                  "scope": 112,
                  "src": "1824:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "2144:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "2162:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2182:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2174:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 78,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2174:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2174:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2162:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2186:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 76,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2154:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "2154:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2256:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2237:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2237:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "2237:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "1931:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 91,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 74,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 73,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2134:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2134:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2134:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2083:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2109:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "2101:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2101:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2100:18:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2144:0:0"
                  },
                  "scope": 112,
                  "src": "2074:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2489:124:0",
                    "statements": [
                      {
                        "assignments": [
                          98
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2507:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 110,
                            "src": "2499:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 97,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2499:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "id": 99,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2518:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2499:25:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2534:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 102,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2543:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2534:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2534:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 106,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "2587:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 107,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2597:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 105,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2566:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2566:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "EmitStatement",
                        "src": "2561:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 92,
                    "nodeType": "StructuredDocumentation",
                    "src": "2278:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2435:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2462:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "2454:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2454:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2453:18:0"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:0:0"
                  },
                  "scope": 112,
                  "src": "2426:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 113,
              "src": "654:1961:0",
              "usedErrors": []
            }
          ],
          "src": "102:2514:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "Pausable": [
              220
            ]
          },
          "id": 221,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 114,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 115,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 221,
              "sourceUnit": 419,
              "src": "130:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 117,
                    "name": "Context",
                    "nameLocations": [
                      "632:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "632:7:1"
                  },
                  "id": 118,
                  "nodeType": "InheritanceSpecifier",
                  "src": "632:7:1"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 116,
                "nodeType": "StructuredDocumentation",
                "src": "162:439:1",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 220,
              "linearizedBaseContracts": [
                220,
                418
              ],
              "name": "Pausable",
              "nameLocation": "620:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "646:73:1",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 123,
                  "name": "Paused",
                  "nameLocation": "730:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "745:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "737:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:17:1"
                  },
                  "src": "724:30:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "760:70:1",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 128,
                  "name": "Unpaused",
                  "nameLocation": "841:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "858:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "850:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:17:1"
                  },
                  "src": "835:32:1"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "886:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "873:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "986:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 134,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "996:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1006:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "996:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 137,
                        "nodeType": "ExpressionStatement",
                        "src": "996:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "900:67:1",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 139,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "983:2:1"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:0:1"
                  },
                  "scope": 220,
                  "src": "972:46:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1229:47:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1239:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:19:1"
                      },
                      {
                        "id": 145,
                        "nodeType": "PlaceholderStatement",
                        "src": "1268:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 140,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:175:1",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 147,
                  "name": "whenNotPaused",
                  "nameLocation": "1213:13:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1226:2:1"
                  },
                  "src": "1204:72:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "1476:44:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 150,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "1486:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:16:1"
                      },
                      {
                        "id": 153,
                        "nodeType": "PlaceholderStatement",
                        "src": "1512:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "1282:167:1",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 155,
                  "name": "whenPaused",
                  "nameLocation": "1463:10:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1473:2:1"
                  },
                  "src": "1454:66:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "1668:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 161,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "1685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 160,
                        "id": 162,
                        "nodeType": "Return",
                        "src": "1678:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 156,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:84:1",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1624:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1630:2:1"
                  },
                  "returnParameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "1662:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1662:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1661:6:1"
                  },
                  "scope": 220,
                  "src": "1615:84:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "1818:55:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1836:9:1",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 169,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "1837:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1837:8:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1847:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 168,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1828:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "1828:38:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "1705:57:1",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1776:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1818:0:1"
                  },
                  "scope": 220,
                  "src": "1767:106:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "1993:58:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 181,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2011:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2011:8:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2021:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 180,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2003:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "2003:41:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:61:1",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 187,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "1954:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1968:2:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1993:0:1"
                  },
                  "scope": 220,
                  "src": "1945:106:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "2235:66:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 193,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2245:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2255:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2245:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:14:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 198,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2281:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2281:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 197,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "EmitStatement",
                        "src": "2269:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 188,
                    "nodeType": "StructuredDocumentation",
                    "src": "2057:124:1",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 191,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 190,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2221:13:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2221:13:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2221:13:1"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2195:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2201:2:1"
                  },
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2235:0:1"
                  },
                  "scope": 220,
                  "src": "2186:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "2481:69:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 209,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2491:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2501:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2491:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "2491:15:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 214,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2530:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2530:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 213,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "2521:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2521:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "EmitStatement",
                        "src": "2516:27:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "2307:121:1",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 207,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 206,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2470:10:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 155,
                        "src": "2470:10:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2470:10:1"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2442:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2450:2:1"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:0:1"
                  },
                  "scope": 220,
                  "src": "2433:117:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 221,
              "src": "602:1950:1",
              "usedErrors": []
            }
          ],
          "src": "105:2448:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              285
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 222,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 223,
                "nodeType": "StructuredDocumentation",
                "src": "137:750:2",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "906:15:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 226,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1701:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1676:41:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 229,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1748:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1723:37:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1783:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1767:23:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1811:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 234,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "1821:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 235,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "1831:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1821:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:22:2"
                      }
                    ]
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1808:2:2"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1811:0:2"
                  },
                  "scope": 285,
                  "src": "1797:53:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 249,
                    "nodeType": "Block",
                    "src": "2251:79:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 242,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "2261:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:21:2"
                      },
                      {
                        "id": 245,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 246,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2303:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2303:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:20:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "1856:366:2",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 250,
                  "name": "nonReentrant",
                  "nameLocation": "2236:12:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2248:2:2"
                  },
                  "src": "2227:103:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "2375:248:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 254,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "2468:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 255,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "2479:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2468:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2489:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2460:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:63:2"
                      },
                      {
                        "expression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 260,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2598:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 261,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2608:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2598:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "2598:18:2"
                      }
                    ]
                  },
                  "id": 265,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2345:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2364:2:2"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:2"
                  },
                  "scope": 285,
                  "src": "2336:287:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "2667:171:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 268,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2809:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 269,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "2819:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2809:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "2809:22:2"
                      }
                    ]
                  },
                  "id": 273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2638:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2656:2:2"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2667:0:2"
                  },
                  "scope": 285,
                  "src": "2629:209:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3081:43:2",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 279,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "3098:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 280,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3109:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3098:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 278,
                        "id": 282,
                        "nodeType": "Return",
                        "src": "3091:26:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "2844:168:2",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3026:23:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3049:2:2"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "3075:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3075:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3074:6:2"
                  },
                  "scope": 285,
                  "src": "3017:107:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 286,
              "src": "888:2238:2",
              "usedErrors": []
            }
          ],
          "src": "112:3015:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ]
          },
          "id": 364,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 363,
              "linearizedBaseContracts": [
                363
              ],
              "name": "IERC20",
              "nameLocation": "212:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 297,
                  "name": "Transfer",
                  "nameLocation": "394:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "403:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 293,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "425:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "445:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:3"
                  },
                  "src": "388:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 298,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 306,
                  "name": "Approval",
                  "nameLocation": "625:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "634:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 302,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "657:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 304,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "682:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:3"
                  },
                  "src": "619:78:3"
                },
                {
                  "documentation": {
                    "id": 307,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:3",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 312,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:3"
                  },
                  "returnParameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "820:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:3"
                  },
                  "scope": 363,
                  "src": "774:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:3",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "931:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:3"
                  },
                  "returnParameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "971:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:3"
                  },
                  "scope": 363,
                  "src": "912:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:3",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1211:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1223:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:3"
                  },
                  "returnParameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1257:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:3"
                  },
                  "scope": 363,
                  "src": "1193:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 331,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1557:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1572:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:3"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:3"
                  },
                  "scope": 363,
                  "src": "1538:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:3",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2291:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2308:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:3"
                  },
                  "returnParameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2342:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:3"
                  },
                  "scope": 363,
                  "src": "2274:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 351,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:3",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 362,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2676:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2668:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 355,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2690:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2682:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2702:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2694:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2694:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:42:3"
                  },
                  "returnParameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2728:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2727:6:3"
                  },
                  "scope": 363,
                  "src": "2646:88:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 364,
              "src": "202:2534:3",
              "usedErrors": []
            }
          ],
          "src": "106:2631:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ]
          },
          "id": 389,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 366,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 389,
              "sourceUnit": 364,
              "src": "135:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 368,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "305:6:4"
                  },
                  "id": 369,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 367,
                "nodeType": "StructuredDocumentation",
                "src": "160:116:4",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
              },
              "fullyImplemented": false,
              "id": 388,
              "linearizedBaseContracts": [
                388,
                363
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:4"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "416:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:4"
                  },
                  "scope": 388,
                  "src": "377:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 376,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:4"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "539:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:4"
                  },
                  "scope": 388,
                  "src": "498:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 387,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:4"
                  },
                  "returnParameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "673:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:4"
                  },
                  "scope": 388,
                  "src": "630:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 389,
              "src": "277:405:4",
              "usedErrors": []
            }
          ],
          "src": "110:573:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              418
            ]
          },
          "id": 419,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 390,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 391,
                "nodeType": "StructuredDocumentation",
                "src": "126:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 418,
              "linearizedBaseContracts": [
                418
              ],
              "name": "Context",
              "nameLocation": "641:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "717:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "734:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "738:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "734:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 395,
                        "id": 398,
                        "nodeType": "Return",
                        "src": "727:17:5"
                      }
                    ]
                  },
                  "id": 400,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "664:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "674:2:5"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "708:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "707:9:5"
                  },
                  "scope": 418,
                  "src": "655:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "824:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 405,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "841:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "845:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "841:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 404,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "834:15:5"
                      }
                    ]
                  },
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "766:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "774:2:5"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "808:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:16:5"
                  },
                  "scope": 418,
                  "src": "757:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "934:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "951:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 413,
                        "id": 415,
                        "nodeType": "Return",
                        "src": "944:8:5"
                      }
                    ]
                  },
                  "id": 417,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "871:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "891:2:5"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "925:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "924:9:5"
                  },
                  "scope": 418,
                  "src": "862:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 419,
              "src": "623:338:5",
              "usedErrors": []
            }
          ],
          "src": "101:861:5"
        },
        "id": 5
      },
      "contracts/core/merge/Eater.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/Eater.sol",
          "exportedSymbols": {
            "Eater": [
              644
            ],
            "IERC20": [
              363
            ],
            "IWeweReceiver": [
              1205
            ],
            "Ownable": [
              112
            ],
            "Pausable": [
              220
            ],
            "ReentrancyGuard": [
              285
            ]
          },
          "id": 645,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 420,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 422,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 645,
              "sourceUnit": 364,
              "src": "59:70:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 421,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "67:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 424,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 645,
              "sourceUnit": 113,
              "src": "130:67:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 423,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 112,
                    "src": "138:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 426,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 645,
              "sourceUnit": 221,
              "src": "198:71:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 425,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "206:8:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 428,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 645,
              "sourceUnit": 286,
              "src": "270:85:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 427,
                    "name": "ReentrancyGuard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 285,
                    "src": "278:15:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
              "file": "../../interfaces/IWeweReceiver.sol",
              "id": 429,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 645,
              "sourceUnit": 1206,
              "src": "356:44:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 430,
                    "name": "IWeweReceiver",
                    "nameLocations": [
                      "429:13:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1205,
                    "src": "429:13:6"
                  },
                  "id": 431,
                  "nodeType": "InheritanceSpecifier",
                  "src": "429:13:6"
                },
                {
                  "baseName": {
                    "id": 432,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "444:15:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "444:15:6"
                  },
                  "id": 433,
                  "nodeType": "InheritanceSpecifier",
                  "src": "444:15:6"
                },
                {
                  "baseName": {
                    "id": 434,
                    "name": "Pausable",
                    "nameLocations": [
                      "461:8:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 220,
                    "src": "461:8:6"
                  },
                  "id": 435,
                  "nodeType": "InheritanceSpecifier",
                  "src": "461:8:6"
                },
                {
                  "baseName": {
                    "id": 436,
                    "name": "Ownable",
                    "nameLocations": [
                      "471:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "471:7:6"
                  },
                  "id": 437,
                  "nodeType": "InheritanceSpecifier",
                  "src": "471:7:6"
                }
              ],
              "canonicalName": "Eater",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 644,
              "linearizedBaseContracts": [
                644,
                112,
                220,
                418,
                285,
                1205
              ],
              "name": "Eater",
              "nameLocation": "420:5:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "502:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "485:22:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "530:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "513:23:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "e1f26f22",
                  "id": 443,
                  "mutability": "mutable",
                  "name": "wewe",
                  "nameLocation": "557:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "542:19:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 468,
                    "nodeType": "Block",
                    "src": "609:174:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 449,
                                "name": "rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "627:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "634:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "627:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a2052617465206d7573742062652067726561746572207468616e2030",
                              "id": 452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "637:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f4281e2a04a1e1357e47cd4c75fcaf306a2360a0f45e2665764b2a1efc4de50c",
                                "typeString": "literal_string \"Eater: Rate must be greater than 0\""
                              },
                              "value": "Eater: Rate must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f4281e2a04a1e1357e47cd4c75fcaf306a2360a0f45e2665764b2a1efc4de50c",
                                "typeString": "literal_string \"Eater: Rate must be greater than 0\""
                              }
                            ],
                            "id": 448,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "619:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "619:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "619:55:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 455,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "689:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 456,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "698:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "689:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 467,
                        "nodeType": "IfStatement",
                        "src": "685:92:6",
                        "trueBody": {
                          "id": 466,
                          "nodeType": "Block",
                          "src": "704:73:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 458,
                                  "name": "_rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 439,
                                  "src": "718:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 459,
                                  "name": "rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 445,
                                  "src": "726:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "718:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 461,
                              "nodeType": "ExpressionStatement",
                              "src": "718:12:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 463,
                                    "name": "rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 445,
                                    "src": "761:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 462,
                                  "name": "RateChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 643,
                                  "src": "749:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "749:17:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 465,
                              "nodeType": "EmitStatement",
                              "src": "744:22:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 469,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRate",
                  "nameLocation": "577:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "594:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 469,
                        "src": "586:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:14:6"
                  },
                  "returnParameters": {
                    "id": 447,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "609:0:6"
                  },
                  "scope": 644,
                  "src": "568:215:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 529,
                    "nodeType": "Block",
                    "src": "873:376:6",
                    "statements": [
                      {
                        "assignments": [
                          481
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 481,
                            "mutability": "mutable",
                            "name": "weweToTransfer",
                            "nameLocation": "891:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 529,
                            "src": "883:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 480,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "883:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 488,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 482,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "909:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 483,
                                  "name": "_rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 439,
                                  "src": "918:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "909:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 485,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "908:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "927:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "908:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "883:47:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 490,
                                "name": "weweToTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 481,
                                "src": "961:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 497,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1010:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Eater_$644",
                                          "typeString": "contract Eater"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Eater_$644",
                                          "typeString": "contract Eater"
                                        }
                                      ],
                                      "id": 496,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1002:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 495,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1002:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1002:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 492,
                                        "name": "wewe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 443,
                                        "src": "986:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 491,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "979:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "979:12:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$363",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "992:9:6",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 320,
                                  "src": "979:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "979:37:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "961:55:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a20496e73756666696369656e7420746f6b656e2062616c616e636520746f207472616e73666572",
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1030:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6fff524f507ecf61abe1fdafa351d8d0f5ecb04310282e4d66a638fb704e9f7",
                                "typeString": "literal_string \"Eater: Insufficient token balance to transfer\""
                              },
                              "value": "Eater: Insufficient token balance to transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a6fff524f507ecf61abe1fdafa351d8d0f5ecb04310282e4d66a638fb704e9f7",
                                "typeString": "literal_string \"Eater: Insufficient token balance to transfer\""
                              }
                            ],
                            "id": 489,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "940:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:147:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "940:147:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 508,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "1125:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 511,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1139:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$644",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$644",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1131:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 509,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1131:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1131:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 513,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "1146:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 505,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 473,
                                  "src": "1105:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 504,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1098:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1098:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1112:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "1098:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1098:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 515,
                        "nodeType": "ExpressionStatement",
                        "src": "1098:55:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "1185:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 521,
                              "name": "weweToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "1191:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 517,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "1170:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 516,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1163:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1163:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1176:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "1163:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "1163:43:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 525,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "1229:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 526,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 475,
                              "src": "1237:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 524,
                            "name": "Merged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "1222:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1222:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 528,
                        "nodeType": "EmitStatement",
                        "src": "1217:25:6"
                      }
                    ]
                  },
                  "id": 530,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 478,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 477,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "859:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "859:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "859:13:6"
                    }
                  ],
                  "name": "_merge",
                  "nameLocation": "798:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "813:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "805:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "829:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "821:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "844:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 530,
                        "src": "836:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "804:45:6"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "873:0:6"
                  },
                  "scope": 644,
                  "src": "789:460:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "1291:181:6",
                    "statements": [
                      {
                        "assignments": [
                          536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 536,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1309:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 563,
                            "src": "1301:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 535,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1301:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 546,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 543,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1350:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$644",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$644",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1342:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 541,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1342:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1342:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 538,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "1326:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 537,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1319:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1319:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1332:9:6",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1319:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1319:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1301:55:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 550,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 548,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "1374:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1384:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1374:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a204e6f2062616c616e636520746f207377656570",
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1387:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e72d135eac75cef95ab73191830654ce1661cc9d6bb69b1b577638911a2b17fd",
                                "typeString": "literal_string \"Eater: No balance to sweep\""
                              },
                              "value": "Eater: No balance to sweep"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e72d135eac75cef95ab73191830654ce1661cc9d6bb69b1b577638911a2b17fd",
                                "typeString": "literal_string \"Eater: No balance to sweep\""
                              }
                            ],
                            "id": 547,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1366:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 553,
                        "nodeType": "ExpressionStatement",
                        "src": "1366:50:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 558,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1448:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1448:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 560,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "1457:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 555,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "1433:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 554,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1426:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1426:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1439:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "1426:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1426:39:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "1426:39:6"
                      }
                    ]
                  },
                  "functionSelector": "35faa416",
                  "id": 564,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 533,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 532,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1281:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1281:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1281:9:6"
                    }
                  ],
                  "name": "sweep",
                  "nameLocation": "1264:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1269:2:6"
                  },
                  "returnParameters": {
                    "id": 534,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:6"
                  },
                  "scope": 644,
                  "src": "1255:217:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1204
                  ],
                  "body": {
                    "id": 596,
                    "nodeType": "Block",
                    "src": "1683:264:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 581,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 441,
                                "src": "1768:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1786:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 583,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1778:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 582,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1778:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1778:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1768:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "47656e6572696345617465723a20546f6b656e2061646472657373206e6f7420736574",
                              "id": 587,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1790:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3fbf59243852d45b9b5e8542e1bdc631a8e45f89176ef73c01951ed5f5a739bc",
                                "typeString": "literal_string \"GenericEater: Token address not set\""
                              },
                              "value": "GenericEater: Token address not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3fbf59243852d45b9b5e8542e1bdc631a8e45f89176ef73c01951ed5f5a739bc",
                                "typeString": "literal_string \"GenericEater: Token address not set\""
                              }
                            ],
                            "id": 580,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1760:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1760:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "1760:68:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 591,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 569,
                              "src": "1919:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 592,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "1927:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 593,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 567,
                              "src": "1935:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 590,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "1912:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1912:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "1912:28:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 565,
                    "nodeType": "StructuredDocumentation",
                    "src": "1478:46:6",
                    "text": "@notice Wewe token approveAndCall function"
                  },
                  "functionSelector": "8f4ffcb1",
                  "id": 597,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 576,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 575,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1656:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 250,
                        "src": "1656:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1656:12:6"
                    },
                    {
                      "id": 578,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 577,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1669:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1669:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1669:13:6"
                    }
                  ],
                  "name": "receiveApproval",
                  "nameLocation": "1538:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1571:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "1563:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1593:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "1585:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1585:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "1609:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1609:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 573,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "1626:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 572,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1626:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1553:93:6"
                  },
                  "returnParameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1683:0:6"
                  },
                  "scope": 644,
                  "src": "1529:418:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 613,
                    "nodeType": "Block",
                    "src": "1995:104:6",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 602,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "2009:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2009:8:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 611,
                          "nodeType": "Block",
                          "src": "2060:33:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 608,
                                  "name": "_pause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "2074:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2074:8:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 610,
                              "nodeType": "ExpressionStatement",
                              "src": "2074:8:6"
                            }
                          ]
                        },
                        "id": 612,
                        "nodeType": "IfStatement",
                        "src": "2005:88:6",
                        "trueBody": {
                          "id": 607,
                          "nodeType": "Block",
                          "src": "2019:35:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 604,
                                  "name": "_unpause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "2033:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2033:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 606,
                              "nodeType": "ExpressionStatement",
                              "src": "2033:10:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "c4ae3168",
                  "id": 614,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 600,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 599,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1985:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1985:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1985:9:6"
                    }
                  ],
                  "name": "togglePause",
                  "nameLocation": "1962:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1973:2:6"
                  },
                  "returnParameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1995:0:6"
                  },
                  "scope": 644,
                  "src": "1953:146:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 632,
                    "nodeType": "Block",
                    "src": "2148:77:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 623,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2184:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2188:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2184:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 627,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2204:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$644",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$644",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2196:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 625,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2196:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2196:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 629,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "2211:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 620,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "2165:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 619,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "2158:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2158:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2171:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "2158:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2158:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 631,
                        "nodeType": "ExpressionStatement",
                        "src": "2158:60:6"
                      }
                    ]
                  },
                  "id": 633,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deposit",
                  "nameLocation": "2114:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2131:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 633,
                        "src": "2123:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2123:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2122:16:6"
                  },
                  "returnParameters": {
                    "id": 618,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2148:0:6"
                  },
                  "scope": 644,
                  "src": "2105:120:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "adc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8",
                  "id": 639,
                  "name": "Merged",
                  "nameLocation": "2237:6:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 635,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2252:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "2244:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2244:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 637,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2276:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "2260:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 636,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2260:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2243:41:6"
                  },
                  "src": "2231:54:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f10",
                  "id": 643,
                  "name": "RateChanged",
                  "nameLocation": "2296:11:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 642,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 641,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRate",
                        "nameLocation": "2316:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "2308:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2307:17:6"
                  },
                  "src": "2290:35:6"
                }
              ],
              "scope": 645,
              "src": "402:1925:6",
              "usedErrors": []
            }
          ],
          "src": "33:2295:6"
        },
        "id": 6
      },
      "contracts/core/merge/GenericMerge.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/GenericMerge.sol",
          "exportedSymbols": {
            "Eater": [
              644
            ],
            "GenericMerge": [
              769
            ],
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ],
            "IMergeV2": [
              800
            ]
          },
          "id": 770,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 646,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:7"
            },
            {
              "absolutePath": "contracts/core/merge/IMergeV2.sol",
              "file": "./IMergeV2.sol",
              "id": 647,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 770,
              "sourceUnit": 801,
              "src": "59:24:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/Eater.sol",
              "file": "./Eater.sol",
              "id": 649,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 770,
              "sourceUnit": 645,
              "src": "84:34:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 648,
                    "name": "Eater",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 644,
                    "src": "92:5:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 651,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 770,
              "sourceUnit": 389,
              "src": "119:97:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 650,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 388,
                    "src": "127:14:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 653,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 770,
              "sourceUnit": 364,
              "src": "217:70:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 652,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "225:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 654,
                    "name": "Eater",
                    "nameLocations": [
                      "314:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 644,
                    "src": "314:5:7"
                  },
                  "id": 655,
                  "nodeType": "InheritanceSpecifier",
                  "src": "314:5:7"
                },
                {
                  "baseName": {
                    "id": 656,
                    "name": "IMergeV2",
                    "nameLocations": [
                      "321:8:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 800,
                    "src": "321:8:7"
                  },
                  "id": 657,
                  "nodeType": "InheritanceSpecifier",
                  "src": "321:8:7"
                }
              ],
              "canonicalName": "GenericMerge",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 769,
              "linearizedBaseContracts": [
                769,
                800,
                644,
                112,
                220,
                418,
                285,
                1205
              ],
              "name": "GenericMerge",
              "nameLocation": "298:12:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    791
                  ],
                  "body": {
                    "id": 664,
                    "nodeType": "Block",
                    "src": "388:30:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 662,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 441,
                          "src": "405:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 661,
                        "id": 663,
                        "nodeType": "Return",
                        "src": "398:13:7"
                      }
                    ]
                  },
                  "functionSelector": "21df0da7",
                  "id": 665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "345:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "353:2:7"
                  },
                  "returnParameters": {
                    "id": 661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "379:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "379:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "378:9:7"
                  },
                  "scope": 769,
                  "src": "336:82:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 684,
                    "nodeType": "Block",
                    "src": "466:74:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 672,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "476:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "484:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "476:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 675,
                        "nodeType": "ExpressionStatement",
                        "src": "476:11:7"
                      },
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 676,
                            "name": "wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "497:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 677,
                            "name": "_wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "504:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "497:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "497:12:7"
                      },
                      {
                        "expression": {
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 680,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "519:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 681,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "528:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "519:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 683,
                        "nodeType": "ExpressionStatement",
                        "src": "519:14:7"
                      }
                    ]
                  },
                  "id": 685,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 667,
                        "mutability": "mutable",
                        "name": "_wewe",
                        "nameLocation": "444:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "436:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "459:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "451:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "451:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "435:30:7"
                  },
                  "returnParameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "466:0:7"
                  },
                  "scope": 769,
                  "src": "424:116:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    781
                  ],
                  "body": {
                    "id": 692,
                    "nodeType": "Block",
                    "src": "597:29:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 690,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "614:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 689,
                        "id": 691,
                        "nodeType": "Return",
                        "src": "607:12:7"
                      }
                    ]
                  },
                  "functionSelector": "679aefce",
                  "id": 693,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "555:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 686,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "562:2:7"
                  },
                  "returnParameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "588:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "587:9:7"
                  },
                  "scope": 769,
                  "src": "546:80:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    786
                  ],
                  "body": {
                    "id": 704,
                    "nodeType": "Block",
                    "src": "682:31:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 701,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "701:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 700,
                            "name": "_setRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "692:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "692:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "692:14:7"
                      }
                    ]
                  },
                  "functionSelector": "34fcf437",
                  "id": 705,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 698,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 697,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "672:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "672:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "672:9:7"
                    }
                  ],
                  "name": "setRate",
                  "nameLocation": "641:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 696,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "657:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 705,
                        "src": "649:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "649:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "648:14:7"
                  },
                  "returnParameters": {
                    "id": 699,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "682:0:7"
                  },
                  "scope": 769,
                  "src": "632:81:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    799
                  ],
                  "body": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "748:116:7",
                    "statements": [
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "766:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 725,
                            "src": "758:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "758:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 717,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 714,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "801:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "805:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "801:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 711,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "783:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 710,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "776:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "776:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "791:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "776:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "776:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "758:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 719,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "829:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 720,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "838:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 721,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "846:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "850:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "846:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 718,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "822:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "822:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "822:35:7"
                      }
                    ]
                  },
                  "functionSelector": "ea9f2417",
                  "id": 726,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "728:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 706,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "736:2:7"
                  },
                  "returnParameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "748:0:7"
                  },
                  "scope": 769,
                  "src": "719:145:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    796
                  ],
                  "body": {
                    "id": 755,
                    "nodeType": "Block",
                    "src": "910:197:7",
                    "statements": [
                      {
                        "assignments": [
                          732
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 732,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "928:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 755,
                            "src": "920:15:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 731,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "920:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 740,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 737,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "963:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "967:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "963:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 734,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 441,
                                  "src": "945:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 733,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "938:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "938:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "953:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "938:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "938:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "920:54:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 742,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "992:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 743,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "1003:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "992:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "47656e657269634d657267653a20496e73756666696369656e742062616c616e636520746f20656174",
                              "id": 745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1011:43:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_56f84ab3557aa002e3821e289449209d21d11b7ab04217ed57ab1b5127489f80",
                                "typeString": "literal_string \"GenericMerge: Insufficient balance to eat\""
                              },
                              "value": "GenericMerge: Insufficient balance to eat"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_56f84ab3557aa002e3821e289449209d21d11b7ab04217ed57ab1b5127489f80",
                                "typeString": "literal_string \"GenericMerge: Insufficient balance to eat\""
                              }
                            ],
                            "id": 741,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "984:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:71:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 747,
                        "nodeType": "ExpressionStatement",
                        "src": "984:71:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 749,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 728,
                              "src": "1073:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 750,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "1081:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1089:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1093:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1089:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 748,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "1066:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1066:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 754,
                        "nodeType": "ExpressionStatement",
                        "src": "1066:34:7"
                      }
                    ]
                  },
                  "functionSelector": "24a47aeb",
                  "id": 756,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "879:5:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "893:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 756,
                        "src": "885:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "884:16:7"
                  },
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "910:0:7"
                  },
                  "scope": 769,
                  "src": "870:237:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    776
                  ],
                  "body": {
                    "id": 767,
                    "nodeType": "Block",
                    "src": "1215:33:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 764,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 758,
                              "src": "1234:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 763,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "1225:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1225:16:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 766,
                        "nodeType": "ExpressionStatement",
                        "src": "1225:16:7"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 768,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 761,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 760,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1205:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1205:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1205:9:7"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1172:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1188:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 768,
                        "src": "1180:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1180:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1179:16:7"
                  },
                  "returnParameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1215:0:7"
                  },
                  "scope": 769,
                  "src": "1163:85:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 770,
              "src": "289:961:7",
              "usedErrors": []
            }
          ],
          "src": "33:1218:7"
        },
        "id": 7
      },
      "contracts/core/merge/IMergeV2.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/IMergeV2.sol",
          "exportedSymbols": {
            "IMergeV2": [
              800
            ]
          },
          "id": 801,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 771,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IMergeV2",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 800,
              "linearizedBaseContracts": [
                800
              ],
              "name": "IMergeV2",
              "nameLocation": "68:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "b6b55f25",
                  "id": 776,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "92:7:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 773,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "108:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 776,
                        "src": "100:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "100:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "99:16:8"
                  },
                  "returnParameters": {
                    "id": 775,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "124:0:8"
                  },
                  "scope": 800,
                  "src": "83:42:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "679aefce",
                  "id": 781,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "139:7:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "146:2:8"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 781,
                        "src": "172:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:9:8"
                  },
                  "scope": 800,
                  "src": "130:51:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "34fcf437",
                  "id": 786,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRate",
                  "nameLocation": "195:7:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 783,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "211:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 786,
                        "src": "203:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:14:8"
                  },
                  "returnParameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "225:0:8"
                  },
                  "scope": 800,
                  "src": "186:40:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "21df0da7",
                  "id": 791,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "240:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 787,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:2:8"
                  },
                  "returnParameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 789,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "274:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:9:8"
                  },
                  "scope": 800,
                  "src": "231:52:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "24a47aeb",
                  "id": 796,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "297:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 793,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "311:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 796,
                        "src": "303:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:16:8"
                  },
                  "returnParameters": {
                    "id": 795,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "327:0:8"
                  },
                  "scope": 800,
                  "src": "288:40:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ea9f2417",
                  "id": 799,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "342:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 797,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "350:2:8"
                  },
                  "returnParameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "361:0:8"
                  },
                  "scope": 800,
                  "src": "333:29:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 801,
              "src": "58:306:8",
              "usedErrors": []
            }
          ],
          "src": "32:333:8"
        },
        "id": 8
      },
      "contracts/core/merge/MergeFactory.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/MergeFactory.sol",
          "exportedSymbols": {
            "GenericMerge": [
              769
            ],
            "IERC20": [
              363
            ],
            "IMergeV2": [
              800
            ],
            "MergeFactory": [
              998
            ],
            "Ownable": [
              112
            ]
          },
          "id": 999,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 802,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:9"
            },
            {
              "absolutePath": "contracts/core/merge/IMergeV2.sol",
              "file": "./IMergeV2.sol",
              "id": 803,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 801,
              "src": "59:24:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/GenericMerge.sol",
              "file": "./GenericMerge.sol",
              "id": 805,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 770,
              "src": "84:48:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 804,
                    "name": "GenericMerge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 769,
                    "src": "92:12:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 807,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 364,
              "src": "133:70:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 806,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "141:6:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 809,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 113,
              "src": "204:67:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 808,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 112,
                    "src": "212:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 810,
                    "name": "Ownable",
                    "nameLocations": [
                      "298:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "298:7:9"
                  },
                  "id": 811,
                  "nodeType": "InheritanceSpecifier",
                  "src": "298:7:9"
                }
              ],
              "canonicalName": "MergeFactory",
              "contractDependencies": [
                769
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 998,
              "linearizedBaseContracts": [
                998,
                112,
                418
              ],
              "name": "MergeFactory",
              "nameLocation": "282:12:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e1f26f22",
                  "id": 814,
                  "mutability": "constant",
                  "name": "wewe",
                  "nameLocation": "336:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "312:73:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307836623962623336353139353338653043303733383934453936344539303137324531633042343146",
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "343:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x6b9bb36519538e0C073894E964E90172E1c0B41F"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4f64b2be",
                  "id": 817,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "408:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "391:23:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 815,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "391:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 816,
                    "nodeType": "ArrayTypeName",
                    "src": "391:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e441eebf",
                  "id": 821,
                  "mutability": "mutable",
                  "name": "merges",
                  "nameLocation": "477:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "442:41:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 820,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 818,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "450:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "442:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 819,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "461:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6d090218",
                  "id": 825,
                  "mutability": "mutable",
                  "name": "allowedDeployers",
                  "nameLocation": "521:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "489:48:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 824,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 822,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "497:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "489:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 823,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "508:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "558:52:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 828,
                              "name": "allowedDeployers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "568:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 831,
                            "indexExpression": {
                              "expression": {
                                "id": 829,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "585:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "589:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "585:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "568:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "599:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "568:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "568:35:9"
                      }
                    ]
                  },
                  "id": 836,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "555:2:9"
                  },
                  "returnParameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "558:0:9"
                  },
                  "scope": 998,
                  "src": "544:66:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 844,
                    "nodeType": "Block",
                    "src": "673:37:9",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 841,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 817,
                            "src": "690:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "697:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "690:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 840,
                        "id": 843,
                        "nodeType": "Return",
                        "src": "683:20:9"
                      }
                    ]
                  },
                  "functionSelector": "1d06f92b",
                  "id": 845,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMergeCount",
                  "nameLocation": "625:13:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "638:2:9"
                  },
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 845,
                        "src": "664:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:9:9"
                  },
                  "scope": 998,
                  "src": "616:94:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 894,
                    "nodeType": "Block",
                    "src": "806:249:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 857,
                                  "name": "merges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 821,
                                  "src": "824:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 859,
                                "indexExpression": {
                                  "id": 858,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "831:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "824:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "849:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 861,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "841:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 860,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "841:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "841:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "824:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204d6572676520616c726561647920657869737473",
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "853:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              },
                              "value": "MergeFactory: Merge already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              }
                            ],
                            "id": 856,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "816:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "816:74:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "816:74:9"
                      },
                      {
                        "assignments": [
                          869
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 869,
                            "mutability": "mutable",
                            "name": "merge",
                            "nameLocation": "908:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 894,
                            "src": "900:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 868,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "900:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 879,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 875,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "941:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 876,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 814,
                                  "src": "948:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "924:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_GenericMerge_$769_$",
                                  "typeString": "function (address,address) returns (contract GenericMerge)"
                                },
                                "typeName": {
                                  "id": 873,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 872,
                                    "name": "GenericMerge",
                                    "nameLocations": [
                                      "928:12:9"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 769,
                                    "src": "928:12:9"
                                  },
                                  "referencedDeclaration": 769,
                                  "src": "928:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GenericMerge_$769",
                                    "typeString": "contract GenericMerge"
                                  }
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "924:29:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GenericMerge_$769",
                                "typeString": "contract GenericMerge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GenericMerge_$769",
                                "typeString": "contract GenericMerge"
                              }
                            ],
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "916:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 870,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "916:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "916:38:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "900:54:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 884,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "988:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 881,
                                  "name": "merge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "973:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 880,
                                "name": "IMergeV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 800,
                                "src": "964:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMergeV2_$800_$",
                                  "typeString": "type(contract IMergeV2)"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "964:15:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMergeV2_$800",
                                "typeString": "contract IMergeV2"
                              }
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "980:7:9",
                            "memberName": "setRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 786,
                            "src": "964:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "964:29:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 886,
                        "nodeType": "ExpressionStatement",
                        "src": "964:29:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 888,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "1013:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 889,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "1020:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 887,
                            "name": "_setMerge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "1003:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1003:23:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 891,
                        "nodeType": "ExpressionStatement",
                        "src": "1003:23:9"
                      },
                      {
                        "expression": {
                          "id": 892,
                          "name": "merge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "1043:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 855,
                        "id": 893,
                        "nodeType": "Return",
                        "src": "1036:12:9"
                      }
                    ]
                  },
                  "functionSelector": "a469ee93",
                  "id": 895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 852,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 851,
                        "name": "onlyDeployer",
                        "nameLocations": [
                          "775:12:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 991,
                        "src": "775:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "775:12:9"
                    }
                  ],
                  "name": "createMerge",
                  "nameLocation": "725:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "745:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "737:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "760:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "752:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "752:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:29:9"
                  },
                  "returnParameters": {
                    "id": 855,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "797:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "797:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "796:9:9"
                  },
                  "scope": 998,
                  "src": "716:339:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "1113:161:9",
                    "statements": [
                      {
                        "assignments": [
                          903
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 903,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1131:5:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 925,
                            "src": "1123:13:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 902,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1123:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 909,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 905,
                                  "name": "merge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 897,
                                  "src": "1148:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 904,
                                "name": "IMergeV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 800,
                                "src": "1139:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMergeV2_$800_$",
                                  "typeString": "type(contract IMergeV2)"
                                }
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1139:15:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMergeV2_$800",
                                "typeString": "contract IMergeV2"
                              }
                            },
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1155:8:9",
                            "memberName": "getToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 791,
                            "src": "1139:24:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1139:26:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1123:42:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 911,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "1183:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 914,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1200:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1192:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 912,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1192:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1192:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1183:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a20496e76616c6964206d65726765",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1204:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_66a8cabbfccd2d5f9c2aeef2d96e96409914199cf70fa31030810204b7d46a99",
                                "typeString": "literal_string \"MergeFactory: Invalid merge\""
                              },
                              "value": "MergeFactory: Invalid merge"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_66a8cabbfccd2d5f9c2aeef2d96e96409914199cf70fa31030810204b7d46a99",
                                "typeString": "literal_string \"MergeFactory: Invalid merge\""
                              }
                            ],
                            "id": 910,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1175:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:59:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "1175:59:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 921,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "1254:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 922,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "1261:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 920,
                            "name": "_setMerge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 963,
                            "src": "1244:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1244:23:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 924,
                        "nodeType": "ExpressionStatement",
                        "src": "1244:23:9"
                      }
                    ]
                  },
                  "functionSelector": "b49757a6",
                  "id": 926,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 900,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 899,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1103:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1103:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1103:9:9"
                    }
                  ],
                  "name": "setMerge",
                  "nameLocation": "1070:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "1087:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "1079:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1079:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1078:15:9"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1113:0:9"
                  },
                  "scope": 998,
                  "src": "1061:213:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 962,
                    "nodeType": "Block",
                    "src": "1338:192:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 934,
                                  "name": "merges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 821,
                                  "src": "1356:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 936,
                                "indexExpression": {
                                  "id": 935,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 928,
                                  "src": "1363:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1356:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 939,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1381:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1373:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 937,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1373:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 940,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1373:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1356:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204d6572676520616c726561647920657869737473",
                              "id": 942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1385:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              },
                              "value": "MergeFactory: Merge already exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b60c3aa78f57e8f21313df5b1389baa1759d106abb3906f35e55930723ec5a3c",
                                "typeString": "literal_string \"MergeFactory: Merge already exists\""
                              }
                            ],
                            "id": 933,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1348:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1348:74:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 944,
                        "nodeType": "ExpressionStatement",
                        "src": "1348:74:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 948,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "1444:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 945,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "1432:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1439:4:9",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1432:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:18:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 950,
                        "nodeType": "ExpressionStatement",
                        "src": "1432:18:9"
                      },
                      {
                        "expression": {
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 951,
                              "name": "merges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "1460:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 953,
                            "indexExpression": {
                              "id": 952,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "1467:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1460:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 954,
                            "name": "merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1476:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1460:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 956,
                        "nodeType": "ExpressionStatement",
                        "src": "1460:21:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 958,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "1510:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 959,
                              "name": "merge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 930,
                              "src": "1517:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 957,
                            "name": "MergeCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "1497:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1497:26:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 961,
                        "nodeType": "EmitStatement",
                        "src": "1492:31:9"
                      }
                    ]
                  },
                  "id": 963,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setMerge",
                  "nameLocation": "1289:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1307:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1299:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1299:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "1322:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 963,
                        "src": "1314:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1314:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1298:30:9"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1338:0:9"
                  },
                  "scope": 998,
                  "src": "1280:250:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 978,
                    "nodeType": "Block",
                    "src": "1615:53:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 972,
                              "name": "allowedDeployers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 825,
                              "src": "1625:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 974,
                            "indexExpression": {
                              "id": 973,
                              "name": "deployer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 965,
                              "src": "1642:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1625:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 975,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "1654:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1625:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "1625:36:9"
                      }
                    ]
                  },
                  "functionSelector": "39db25f7",
                  "id": 979,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 970,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 969,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1605:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1605:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1605:9:9"
                    }
                  ],
                  "name": "setAllowedDeployer",
                  "nameLocation": "1545:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 965,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "1572:8:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "1564:16:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1564:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 967,
                        "mutability": "mutable",
                        "name": "allowed",
                        "nameLocation": "1587:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "1582:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1563:32:9"
                  },
                  "returnParameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1615:0:9"
                  },
                  "scope": 998,
                  "src": "1536:132:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 990,
                    "nodeType": "Block",
                    "src": "1698:104:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 982,
                                "name": "allowedDeployers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 825,
                                "src": "1716:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 985,
                              "indexExpression": {
                                "expression": {
                                  "id": 983,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1733:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1737:6:9",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1733:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1716:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765466163746f72793a204e6f7420616c6c6f77656420746f206465706c6f79",
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1746:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b32949fe1c9666291004439deddb960d4bbdf814ed1febed1a444d2e468379a6",
                                "typeString": "literal_string \"MergeFactory: Not allowed to deploy\""
                              },
                              "value": "MergeFactory: Not allowed to deploy"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b32949fe1c9666291004439deddb960d4bbdf814ed1febed1a444d2e468379a6",
                                "typeString": "literal_string \"MergeFactory: Not allowed to deploy\""
                              }
                            ],
                            "id": 981,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1708:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1708:76:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 988,
                        "nodeType": "ExpressionStatement",
                        "src": "1708:76:9"
                      },
                      {
                        "id": 989,
                        "nodeType": "PlaceholderStatement",
                        "src": "1794:1:9"
                      }
                    ]
                  },
                  "id": 991,
                  "name": "onlyDeployer",
                  "nameLocation": "1683:12:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 980,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1695:2:9"
                  },
                  "src": "1674:128:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e413d0f68462f6240160d618a454469f475317b43867a99c353c0acc7bf4ec1b",
                  "id": 997,
                  "name": "MergeCreated",
                  "nameLocation": "1814:12:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 993,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1843:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "1827:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1827:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 995,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "merge",
                        "nameLocation": "1866:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "1850:21:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1850:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1826:46:9"
                  },
                  "src": "1808:65:9"
                }
              ],
              "scope": 999,
              "src": "273:1602:9",
              "usedErrors": []
            }
          ],
          "src": "33:1843:9"
        },
        "id": 9
      },
      "contracts/interfaces/IApproveAndCall.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IApproveAndCall.sol",
          "exportedSymbols": {
            "IApproveAndCall": [
              1013
            ],
            "IERC20": [
              363
            ]
          },
          "id": 1014,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1000,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1001,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1014,
              "sourceUnit": 364,
              "src": "57:56:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IApproveAndCall",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1013,
              "linearizedBaseContracts": [
                1013
              ],
              "name": "IApproveAndCall",
              "nameLocation": "125:15:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "cae9ca51",
                  "id": 1012,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approveAndCall",
                  "nameLocation": "156:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1003,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "179:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "171:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1002,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "171:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1005,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "196:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "188:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "188:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "219:9:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "204:24:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "204:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "170:59:10"
                  },
                  "returnParameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "248:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "248:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "247:6:10"
                  },
                  "scope": 1013,
                  "src": "147:107:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1014,
              "src": "115:141:10",
              "usedErrors": []
            }
          ],
          "src": "32:225:10"
        },
        "id": 10
      },
      "contracts/interfaces/IERC20Errors.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IERC20Errors.sol",
          "exportedSymbols": {
            "IERC20Errors": [
              1055
            ]
          },
          "id": 1056,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1015,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1016,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:11",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 1055,
              "linearizedBaseContracts": [
                1055
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1017,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:11",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 1025,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "654:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1018,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "670:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "687:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:11"
                  },
                  "src": "623:80:11"
                },
                {
                  "documentation": {
                    "id": 1026,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:11",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 1030,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1030,
                        "src": "891:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:11"
                  },
                  "src": "866:41:11"
                },
                {
                  "documentation": {
                    "id": 1031,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:11",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 1035,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1035,
                        "src": "1104:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:11"
                  },
                  "src": "1077:45:11"
                },
                {
                  "documentation": {
                    "id": 1036,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:11",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 1044,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1038,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1511:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1040,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1528:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1547:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:11"
                  },
                  "src": "1478:85:11"
                },
                {
                  "documentation": {
                    "id": 1045,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:11",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 1049,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1048,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1049,
                        "src": "1775:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:11"
                  },
                  "src": "1748:45:11"
                },
                {
                  "documentation": {
                    "id": 1050,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:11",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 1054,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1054,
                        "src": "2025:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:11"
                  },
                  "src": "1999:43:11"
                }
              ],
              "scope": 1056,
              "src": "280:1764:11",
              "usedErrors": [
                1025,
                1030,
                1035,
                1044,
                1049,
                1054
              ]
            }
          ],
          "src": "112:1933:11"
        },
        "id": 11
      },
      "contracts/interfaces/IFarm.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IFarm.sol",
          "exportedSymbols": {
            "IFarm": [
              1183
            ]
          },
          "id": 1184,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1057,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IFarm",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1183,
              "linearizedBaseContracts": [
                1183
              ],
              "name": "IFarm",
              "nameLocation": "67:5:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IFarm.UserInfo",
                  "id": 1062,
                  "members": [
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "113:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1062,
                      "src": "105:14:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "105:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1061,
                      "mutability": "mutable",
                      "name": "rewardDebt",
                      "nameLocation": "181:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1062,
                      "src": "174:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1060,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "174:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserInfo",
                  "nameLocation": "86:8:12",
                  "nodeType": "StructDefinition",
                  "scope": 1183,
                  "src": "79:158:12",
                  "visibility": "public"
                },
                {
                  "canonicalName": "IFarm.PoolInfo",
                  "id": 1073,
                  "members": [
                    {
                      "constant": false,
                      "id": 1064,
                      "mutability": "mutable",
                      "name": "accChaosPerShare",
                      "nameLocation": "277:16:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "269:24:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1063,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "269:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1066,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nameLocation": "354:15:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "347:22:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1065,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "347:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1068,
                      "mutability": "mutable",
                      "name": "allocPoint",
                      "nameLocation": "439:10:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "432:17:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1067,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "432:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1070,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "551:11:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "543:19:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "weight",
                      "nameLocation": "609:6:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "603:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1071,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "603:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolInfo",
                  "nameLocation": "250:8:12",
                  "nodeType": "StructDefinition",
                  "scope": 1183,
                  "src": "243:412:12",
                  "visibility": "public"
                },
                {
                  "functionSelector": "2f380b35",
                  "id": 1081,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolInfo",
                  "nameLocation": "670:11:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "690:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "682:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "681:13:12"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1079,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "718:15:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1073_memory_ptr",
                          "typeString": "struct IFarm.PoolInfo"
                        },
                        "typeName": {
                          "id": 1078,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1077,
                            "name": "PoolInfo",
                            "nameLocations": [
                              "718:8:12"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1073,
                            "src": "718:8:12"
                          },
                          "referencedDeclaration": 1073,
                          "src": "718:8:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$1073_storage_ptr",
                            "typeString": "struct IFarm.PoolInfo"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "717:17:12"
                  },
                  "scope": 1183,
                  "src": "661:74:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "17caf6f1",
                  "id": 1086,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalAllocPoint",
                  "nameLocation": "749:15:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1082,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "764:2:12"
                  },
                  "returnParameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1086,
                        "src": "790:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:9:12"
                  },
                  "scope": 1183,
                  "src": "740:59:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8dbdbe6d",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "813:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "829:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "821:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "842:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "834:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "834:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "858:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "850:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:41:12"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "870:0:12"
                  },
                  "scope": 1183,
                  "src": "804:67:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0ad58d2f",
                  "id": 1104,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "885:8:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1097,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "902:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "894:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1096,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "894:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "915:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "907:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "931:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "923:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "923:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "893:41:12"
                  },
                  "returnParameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "943:0:12"
                  },
                  "scope": 1183,
                  "src": "876:68:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5312ea8e",
                  "id": 1109,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "emergencyWithdraw",
                  "nameLocation": "958:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "984:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1109,
                        "src": "976:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "975:13:12"
                  },
                  "returnParameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "997:0:12"
                  },
                  "scope": 1183,
                  "src": "949:49:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18fccc76",
                  "id": 1116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "harvest",
                  "nameLocation": "1013:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1029:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1116,
                        "src": "1021:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1042:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1116,
                        "src": "1034:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1034:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1020:25:12"
                  },
                  "returnParameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1054:0:12"
                  },
                  "scope": 1183,
                  "src": "1004:51:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d1abb907",
                  "id": 1125,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawAndHarvest",
                  "nameLocation": "1069:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1096:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "1088:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1088:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1109:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "1101:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1101:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1125:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "1117:10:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1117:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1087:41:12"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1137:0:12"
                  },
                  "scope": 1183,
                  "src": "1060:78:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8cebd2ba",
                  "id": 1132,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setVaultWeight",
                  "nameLocation": "1152:14:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1127,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1175:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "1167:11:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1167:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1129,
                        "mutability": "mutable",
                        "name": "weight",
                        "nameLocation": "1186:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "1180:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1128,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1180:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1166:27:12"
                  },
                  "returnParameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1202:0:12"
                  },
                  "scope": 1183,
                  "src": "1143:60:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "38e771ab",
                  "id": 1135,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refundAll",
                  "nameLocation": "1218:9:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:12"
                  },
                  "returnParameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1238:0:12"
                  },
                  "scope": 1183,
                  "src": "1209:30:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "278ecde1",
                  "id": 1140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "refund",
                  "nameLocation": "1253:6:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1268:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1140,
                        "src": "1260:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1259:16:12"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1284:0:12"
                  },
                  "scope": 1183,
                  "src": "1244:41:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b47",
                  "id": 1150,
                  "name": "Deposit",
                  "nameLocation": "1297:7:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1142,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1321:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1305:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1305:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1144,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1343:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1327:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1327:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1146,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1356:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1348:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1348:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1380:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1150,
                        "src": "1364:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1364:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1304:79:12"
                  },
                  "src": "1291:93:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec2132",
                  "id": 1160,
                  "name": "Withdraw",
                  "nameLocation": "1395:8:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1152,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1420:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1404:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1404:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1442:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1426:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1426:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1156,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1455:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1447:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1155,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1447:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1158,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1479:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1160,
                        "src": "1463:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1463:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1403:79:12"
                  },
                  "src": "1389:94:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae0660924954",
                  "id": 1168,
                  "name": "Harvest",
                  "nameLocation": "1494:7:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1518:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1168,
                        "src": "1502:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1502:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1540:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1168,
                        "src": "1524:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1524:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1166,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1553:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1168,
                        "src": "1545:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1501:59:12"
                  },
                  "src": "1488:73:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b",
                  "id": 1178,
                  "name": "EmergencyWithdraw",
                  "nameLocation": "1573:17:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1170,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1607:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1178,
                        "src": "1591:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1172,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "1629:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1178,
                        "src": "1613:19:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1613:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1174,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1642:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1178,
                        "src": "1634:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1176,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1666:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1178,
                        "src": "1650:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1650:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1590:79:12"
                  },
                  "src": "1567:103:12"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3d2a04f53164bedf9a8a46353305d6b2d2261410406df3b41f99ce6489dc003c",
                  "id": 1182,
                  "name": "Refunded",
                  "nameLocation": "1681:8:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1180,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1698:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1182,
                        "src": "1690:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1690:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1689:16:12"
                  },
                  "src": "1675:31:12"
                }
              ],
              "scope": 1184,
              "src": "57:1651:12",
              "usedErrors": []
            }
          ],
          "src": "32:1677:12"
        },
        "id": 12
      },
      "contracts/interfaces/IOwnable.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IOwnable.sol",
          "exportedSymbols": {
            "IOwnable": [
              1191
            ]
          },
          "id": 1192,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1185,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IOwnable",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1191,
              "linearizedBaseContracts": [
                1191
              ],
              "name": "IOwnable",
              "nameLocation": "67:8:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8da5cb5b",
                  "id": 1190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "91:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "96:2:13"
                  },
                  "returnParameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "117:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "117:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "116:9:13"
                  },
                  "scope": 1191,
                  "src": "82:44:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1192,
              "src": "57:71:13",
              "usedErrors": []
            }
          ],
          "src": "32:97:13"
        },
        "id": 13
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
          "exportedSymbols": {
            "IWeweReceiver": [
              1205
            ]
          },
          "id": 1206,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1193,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IWeweReceiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1205,
              "linearizedBaseContracts": [
                1205
              ],
              "name": "IWeweReceiver",
              "nameLocation": "68:13:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8f4ffcb1",
                  "id": 1204,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "receiveApproval",
                  "nameLocation": "97:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "121:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "113:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "113:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "135:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "127:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "127:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "151:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "143:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "143:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1201,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "173:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "158:24:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "158:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "112:71:14"
                  },
                  "returnParameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:0:14"
                  },
                  "scope": 1205,
                  "src": "88:105:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1206,
              "src": "58:137:14",
              "usedErrors": []
            }
          ],
          "src": "32:164:14"
        },
        "id": 14
      },
      "contracts/token/CHAOS.sol": {
        "ast": {
          "absolutePath": "contracts/token/CHAOS.sol",
          "exportedSymbols": {
            "CHAOS": [
              1356
            ],
            "Context": [
              418
            ],
            "ERC20": [
              1878
            ],
            "IApproveAndCall": [
              1013
            ],
            "IERC20": [
              363
            ],
            "IERC20Errors": [
              1055
            ],
            "IERC20Metadata": [
              388
            ],
            "IFarm": [
              1183
            ],
            "IOwnable": [
              1191
            ],
            "IWeweReceiver": [
              1205
            ],
            "Ownable": [
              112
            ],
            "ReentrancyGuard": [
              285
            ]
          },
          "id": 1357,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1207,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:15"
            },
            {
              "absolutePath": "contracts/token/ERC20.sol",
              "file": "./ERC20.sol",
              "id": 1208,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 1879,
              "src": "57:21:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1209,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 113,
              "src": "79:52:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 1210,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 286,
              "src": "132:62:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IOwnable.sol",
              "file": "../interfaces/IOwnable.sol",
              "id": 1211,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 1192,
              "src": "195:36:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IFarm.sol",
              "file": "../interfaces/IFarm.sol",
              "id": 1212,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 1184,
              "src": "232:33:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IApproveAndCall.sol",
              "file": "../interfaces/IApproveAndCall.sol",
              "id": 1213,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 1014,
              "src": "266:43:15",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
              "file": "../interfaces/IWeweReceiver.sol",
              "id": 1215,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1357,
              "sourceUnit": 1206,
              "src": "310:62:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1214,
                    "name": "IWeweReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1205,
                    "src": "318:13:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1216,
                    "name": "ERC20",
                    "nameLocations": [
                      "392:5:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1878,
                    "src": "392:5:15"
                  },
                  "id": 1217,
                  "nodeType": "InheritanceSpecifier",
                  "src": "392:5:15"
                },
                {
                  "baseName": {
                    "id": 1218,
                    "name": "IApproveAndCall",
                    "nameLocations": [
                      "399:15:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1013,
                    "src": "399:15:15"
                  },
                  "id": 1219,
                  "nodeType": "InheritanceSpecifier",
                  "src": "399:15:15"
                },
                {
                  "baseName": {
                    "id": 1220,
                    "name": "Ownable",
                    "nameLocations": [
                      "416:7:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "416:7:15"
                  },
                  "id": 1221,
                  "nodeType": "InheritanceSpecifier",
                  "src": "416:7:15"
                },
                {
                  "baseName": {
                    "id": 1222,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "425:15:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "425:15:15"
                  },
                  "id": 1223,
                  "nodeType": "InheritanceSpecifier",
                  "src": "425:15:15"
                }
              ],
              "canonicalName": "CHAOS",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1356,
              "linearizedBaseContracts": [
                1356,
                285,
                112,
                1013,
                1878,
                388,
                363,
                418
              ],
              "name": "CHAOS",
              "nameLocation": "383:5:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "_farm",
                  "nameLocation": "461:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1356,
                  "src": "447:19:15",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFarm_$1183",
                    "typeString": "contract IFarm"
                  },
                  "typeName": {
                    "id": 1225,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1224,
                      "name": "IFarm",
                      "nameLocations": [
                        "447:5:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1183,
                      "src": "447:5:15"
                    },
                    "referencedDeclaration": 1183,
                    "src": "447:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFarm_$1183",
                      "typeString": "contract IFarm"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1233,
                    "nodeType": "Block",
                    "src": "511:2:15",
                    "statements": []
                  },
                  "id": 1234,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4348414f53",
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "493:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ab327bb7834c37be10c8ae9703808b3086193521955a11b64cff2b4d77a0421",
                            "typeString": "literal_string \"CHAOS\""
                          },
                          "value": "CHAOS"
                        },
                        {
                          "hexValue": "4348414f53",
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "502:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ab327bb7834c37be10c8ae9703808b3086193521955a11b64cff2b4d77a0421",
                            "typeString": "literal_string \"CHAOS\""
                          },
                          "value": "CHAOS"
                        }
                      ],
                      "id": 1231,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1228,
                        "name": "ERC20",
                        "nameLocations": [
                          "487:5:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1878,
                        "src": "487:5:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "487:23:15"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "484:2:15"
                  },
                  "returnParameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "511:0:15"
                  },
                  "scope": 1356,
                  "src": "473:40:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1247,
                    "nodeType": "Block",
                    "src": "569:36:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1241,
                            "name": "_farm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "579:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFarm_$1183",
                              "typeString": "contract IFarm"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1243,
                                "name": "farm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1236,
                                "src": "593:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1242,
                              "name": "IFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "587:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IFarm_$1183_$",
                                "typeString": "type(contract IFarm)"
                              }
                            },
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "587:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFarm_$1183",
                              "typeString": "contract IFarm"
                            }
                          },
                          "src": "579:19:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFarm_$1183",
                            "typeString": "contract IFarm"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "579:19:15"
                      }
                    ]
                  },
                  "functionSelector": "d4f26c51",
                  "id": 1248,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1239,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1238,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "559:9:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "559:9:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "559:9:15"
                    }
                  ],
                  "name": "setFarm",
                  "nameLocation": "528:7:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1236,
                        "mutability": "mutable",
                        "name": "farm",
                        "nameLocation": "544:4:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1248,
                        "src": "536:12:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "536:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "535:14:15"
                  },
                  "returnParameters": {
                    "id": 1240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "569:0:15"
                  },
                  "scope": 1356,
                  "src": "519:86:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1261,
                    "nodeType": "Block",
                    "src": "660:42:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1256,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "676:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "680:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "676:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1258,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1250,
                              "src": "688:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1255,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1735,
                            "src": "670:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "670:25:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1260,
                        "nodeType": "ExpressionStatement",
                        "src": "670:25:15"
                      }
                    ]
                  },
                  "functionSelector": "a0712d68",
                  "id": 1262,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1253,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1252,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "650:9:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "650:9:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "650:9:15"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "620:4:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "633:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "625:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "625:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "624:16:15"
                  },
                  "returnParameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "660:0:15"
                  },
                  "scope": 1356,
                  "src": "611:91:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1290,
                    "nodeType": "Block",
                    "src": "763:116:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1272,
                                    "name": "_farm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1226,
                                    "src": "789:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFarm_$1183",
                                      "typeString": "contract IFarm"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IFarm_$1183",
                                      "typeString": "contract IFarm"
                                    }
                                  ],
                                  "id": 1271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "781:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1270,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "781:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "781:14:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1276,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "807:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "799:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1274,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "799:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "799:10:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "781:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4348414f533a204661726d206e6f7420736574",
                              "id": 1279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "811:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2207b8b2abd52010ad186ee8a1e31f6ea296d6723fd91c4bac10cb3ff9977fa8",
                                "typeString": "literal_string \"CHAOS: Farm not set\""
                              },
                              "value": "CHAOS: Farm not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2207b8b2abd52010ad186ee8a1e31f6ea296d6723fd91c4bac10cb3ff9977fa8",
                                "typeString": "literal_string \"CHAOS: Farm not set\""
                              }
                            ],
                            "id": 1269,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "773:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "773:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1281,
                        "nodeType": "ExpressionStatement",
                        "src": "773:60:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1285,
                                  "name": "_farm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1226,
                                  "src": "857:5:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFarm_$1183",
                                    "typeString": "contract IFarm"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IFarm_$1183",
                                    "typeString": "contract IFarm"
                                  }
                                ],
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "849:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1283,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "849:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "849:14:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1287,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "865:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1282,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1735,
                            "src": "843:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "843:29:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1289,
                        "nodeType": "ExpressionStatement",
                        "src": "843:29:15"
                      }
                    ]
                  },
                  "functionSelector": "5f316876",
                  "id": 1291,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1267,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1266,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "753:9:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "753:9:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "753:9:15"
                    }
                  ],
                  "name": "mintToFarm",
                  "nameLocation": "717:10:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1264,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "736:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1291,
                        "src": "728:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:16:15"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "763:0:15"
                  },
                  "scope": 1356,
                  "src": "708:171:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "933:117:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1299,
                                    "name": "_farm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1226,
                                    "src": "959:5:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IFarm_$1183",
                                      "typeString": "contract IFarm"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IFarm_$1183",
                                      "typeString": "contract IFarm"
                                    }
                                  ],
                                  "id": 1298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "951:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1297,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "951:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "951:14:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "977:1:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "969:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1301,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "969:7:15",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "969:10:15",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "951:28:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4348414f533a204661726d206e6f7420736574",
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "981:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2207b8b2abd52010ad186ee8a1e31f6ea296d6723fd91c4bac10cb3ff9977fa8",
                                "typeString": "literal_string \"CHAOS: Farm not set\""
                              },
                              "value": "CHAOS: Farm not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2207b8b2abd52010ad186ee8a1e31f6ea296d6723fd91c4bac10cb3ff9977fa8",
                                "typeString": "literal_string \"CHAOS: Farm not set\""
                              }
                            ],
                            "id": 1296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "943:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "943:60:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "943:60:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1312,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1293,
                              "src": "1027:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1313,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1032:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1036:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1032:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1309,
                              "name": "_farm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1226,
                              "src": "1013:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFarm_$1183",
                                "typeString": "contract IFarm"
                              }
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1019:7:15",
                            "memberName": "harvest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1116,
                            "src": "1013:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address) external"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1013:30:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "1013:30:15"
                      }
                    ]
                  },
                  "functionSelector": "662c4b3b",
                  "id": 1318,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "collectEmissions",
                  "nameLocation": "894:16:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "pid",
                        "nameLocation": "919:3:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1318,
                        "src": "911:11:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "911:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "910:13:15"
                  },
                  "returnParameters": {
                    "id": 1295,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "933:0:15"
                  },
                  "scope": 1356,
                  "src": "885:165:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1012
                  ],
                  "body": {
                    "id": 1354,
                    "nodeType": "Block",
                    "src": "1206:291:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1332,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1276:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1280:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1276:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1334,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1320,
                              "src": "1288:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1335,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1322,
                              "src": "1297:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1331,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1834,
                            "src": "1267:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1267:37:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1337,
                        "nodeType": "ExpressionStatement",
                        "src": "1267:37:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1342,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1423:3:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1427:6:15",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1423:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1344,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1322,
                              "src": "1435:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1347,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1451:4:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CHAOS_$1356",
                                    "typeString": "contract CHAOS"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CHAOS_$1356",
                                    "typeString": "contract CHAOS"
                                  }
                                ],
                                "id": 1346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1443:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1345,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1443:7:15",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1443:13:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1349,
                              "name": "extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "1458:9:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1339,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1320,
                                  "src": "1398:7:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1338,
                                "name": "IWeweReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1205,
                                "src": "1384:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IWeweReceiver_$1205_$",
                                  "typeString": "type(contract IWeweReceiver)"
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1384:22:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IWeweReceiver_$1205",
                                "typeString": "contract IWeweReceiver"
                              }
                            },
                            "id": 1341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1407:15:15",
                            "memberName": "receiveApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1204,
                            "src": "1384:38:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1384:84:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1351,
                        "nodeType": "ExpressionStatement",
                        "src": "1384:84:15"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1486:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1330,
                        "id": 1353,
                        "nodeType": "Return",
                        "src": "1479:11:15"
                      }
                    ]
                  },
                  "functionSelector": "cae9ca51",
                  "id": 1355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1327,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1326,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1178:12:15"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 250,
                        "src": "1178:12:15"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1178:12:15"
                    }
                  ],
                  "name": "approveAndCall",
                  "nameLocation": "1065:14:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1320,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1097:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "1089:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1322,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1122:6:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "1114:14:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1321,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1324,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "1153:9:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "1138:24:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1323,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1138:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1079:89:15"
                  },
                  "returnParameters": {
                    "id": 1330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1329,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "1200:4:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1328,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1200:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1199:6:15"
                  },
                  "scope": 1356,
                  "src": "1056:441:15",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1357,
              "src": "374:1125:15",
              "usedErrors": []
            }
          ],
          "src": "32:1468:15"
        },
        "id": 15
      },
      "contracts/token/ERC20.sol": {
        "ast": {
          "absolutePath": "contracts/token/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "ERC20": [
              1878
            ],
            "IERC20": [
              363
            ],
            "IERC20Errors": [
              1055
            ],
            "IERC20Metadata": [
              388
            ]
          },
          "id": 1879,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1358,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:16"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1360,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1879,
              "sourceUnit": 364,
              "src": "131:70:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1359,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "139:6:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 1362,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1879,
              "sourceUnit": 389,
              "src": "202:97:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1361,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 388,
                    "src": "210:14:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "@openzeppelin/contracts/utils/Context.sol",
              "id": 1364,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1879,
              "sourceUnit": 419,
              "src": "300:66:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1363,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 418,
                    "src": "308:7:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IERC20Errors.sol",
              "file": "../interfaces/IERC20Errors.sol",
              "id": 1366,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1879,
              "sourceUnit": 1056,
              "src": "367:60:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1365,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1055,
                    "src": "375:12:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1368,
                    "name": "Context",
                    "nameLocations": [
                      "1749:7:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "1749:7:16"
                  },
                  "id": 1369,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1749:7:16"
                },
                {
                  "baseName": {
                    "id": 1370,
                    "name": "IERC20",
                    "nameLocations": [
                      "1758:6:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "1758:6:16"
                  },
                  "id": 1371,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1758:6:16"
                },
                {
                  "baseName": {
                    "id": 1372,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1766:14:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 388,
                    "src": "1766:14:16"
                  },
                  "id": 1373,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1766:14:16"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1367,
                "nodeType": "StructuredDocumentation",
                "src": "429:1301:16",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
              },
              "fullyImplemented": true,
              "id": 1878,
              "linearizedBaseContracts": [
                1878,
                388,
                363,
                418
              ],
              "name": "ERC20",
              "nameLocation": "1740:5:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1823:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "1787:45:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1376,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1374,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1795:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1787:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1375,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1806:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1895:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "1839:67:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1382,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1378,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1847:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1839:47:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1381,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 1379,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1866:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1858:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1380,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1877:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1385,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1929:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "1913:28:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1387,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1963:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "1948:20:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1389,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1989:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "1974:22:16",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1405,
                    "nodeType": "Block",
                    "src": "2235:57:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1397,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1387,
                            "src": "2245:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1398,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1392,
                            "src": "2253:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2245:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1400,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:13:16"
                      },
                      {
                        "expression": {
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1401,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "2268:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1402,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1394,
                            "src": "2278:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2268:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1404,
                        "nodeType": "ExpressionStatement",
                        "src": "2268:17:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1390,
                    "nodeType": "StructuredDocumentation",
                    "src": "2003:171:16",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 1406,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1392,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2205:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "2191:19:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1391,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2191:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2226:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "2212:21:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2212:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2190:44:16"
                  },
                  "returnParameters": {
                    "id": 1396,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2235:0:16"
                  },
                  "scope": 1878,
                  "src": "2179:113:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    375
                  ],
                  "body": {
                    "id": 1415,
                    "nodeType": "Block",
                    "src": "2426:29:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 1413,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1387,
                          "src": "2443:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1412,
                        "id": 1414,
                        "nodeType": "Return",
                        "src": "2436:12:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1407,
                    "nodeType": "StructuredDocumentation",
                    "src": "2298:54:16",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "2366:4:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1409,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2393:8:16"
                  },
                  "parameters": {
                    "id": 1408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2370:2:16"
                  },
                  "returnParameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1416,
                        "src": "2411:13:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2411:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2410:15:16"
                  },
                  "scope": 1878,
                  "src": "2357:98:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    381
                  ],
                  "body": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "2639:31:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 1423,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "2656:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1422,
                        "id": 1424,
                        "nodeType": "Return",
                        "src": "2649:14:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1417,
                    "nodeType": "StructuredDocumentation",
                    "src": "2461:102:16",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "2577:6:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1419,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2606:8:16"
                  },
                  "parameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2583:2:16"
                  },
                  "returnParameters": {
                    "id": 1422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "2624:13:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2624:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2623:15:16"
                  },
                  "scope": 1878,
                  "src": "2568:102:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    387
                  ],
                  "body": {
                    "id": 1435,
                    "nodeType": "Block",
                    "src": "3368:26:16",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3385:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 1432,
                        "id": 1434,
                        "nodeType": "Return",
                        "src": "3378:9:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2676:622:16",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 1436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "3312:8:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1429,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3343:8:16"
                  },
                  "parameters": {
                    "id": 1428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3320:2:16"
                  },
                  "returnParameters": {
                    "id": 1432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1436,
                        "src": "3361:5:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3361:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3360:7:16"
                  },
                  "scope": 1878,
                  "src": "3303:91:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    312
                  ],
                  "body": {
                    "id": 1445,
                    "nodeType": "Block",
                    "src": "3524:36:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 1443,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "3541:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1442,
                        "id": 1444,
                        "nodeType": "Return",
                        "src": "3534:19:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1437,
                    "nodeType": "StructuredDocumentation",
                    "src": "3400:49:16",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "3463:11:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1439,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3497:8:16"
                  },
                  "parameters": {
                    "id": 1438,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3474:2:16"
                  },
                  "returnParameters": {
                    "id": 1442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1441,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1446,
                        "src": "3515:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1440,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3515:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3514:9:16"
                  },
                  "scope": 1878,
                  "src": "3454:106:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    320
                  ],
                  "body": {
                    "id": 1459,
                    "nodeType": "Block",
                    "src": "3701:42:16",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1455,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "3718:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1457,
                          "indexExpression": {
                            "id": 1456,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1449,
                            "src": "3728:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3718:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1454,
                        "id": 1458,
                        "nodeType": "Return",
                        "src": "3711:25:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1447,
                    "nodeType": "StructuredDocumentation",
                    "src": "3566:47:16",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 1460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3627:9:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1451,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3674:8:16"
                  },
                  "parameters": {
                    "id": 1450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1449,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3645:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1460,
                        "src": "3637:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1448,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3637:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3636:17:16"
                  },
                  "returnParameters": {
                    "id": 1454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1453,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1460,
                        "src": "3692:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1452,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3692:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3691:9:16"
                  },
                  "scope": 1878,
                  "src": "3618:125:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    330
                  ],
                  "body": {
                    "id": 1484,
                    "nodeType": "Block",
                    "src": "4024:104:16",
                    "statements": [
                      {
                        "assignments": [
                          1472
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1472,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4042:5:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1484,
                            "src": "4034:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1471,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4034:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1475,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1473,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "4050:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4050:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4034:28:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1477,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1472,
                              "src": "4082:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1478,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1463,
                              "src": "4089:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1479,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "4093:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1476,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1696,
                            "src": "4072:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4072:28:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1481,
                        "nodeType": "ExpressionStatement",
                        "src": "4072:28:16"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4117:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1470,
                        "id": 1483,
                        "nodeType": "Return",
                        "src": "4110:11:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1461,
                    "nodeType": "StructuredDocumentation",
                    "src": "3749:185:16",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1485,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3948:8:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1467,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4000:8:16"
                  },
                  "parameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3965:2:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "3957:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3957:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3977:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "3969:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3969:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3956:28:16"
                  },
                  "returnParameters": {
                    "id": 1470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1469,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1485,
                        "src": "4018:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1468,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4018:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4017:6:16"
                  },
                  "scope": 1878,
                  "src": "3939:189:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    340
                  ],
                  "body": {
                    "id": 1502,
                    "nodeType": "Block",
                    "src": "4284:51:16",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1496,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "4301:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1498,
                            "indexExpression": {
                              "id": 1497,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1488,
                              "src": "4313:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4301:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1500,
                          "indexExpression": {
                            "id": 1499,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1490,
                            "src": "4320:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4301:27:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1495,
                        "id": 1501,
                        "nodeType": "Return",
                        "src": "4294:34:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1486,
                    "nodeType": "StructuredDocumentation",
                    "src": "4134:47:16",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1503,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "4195:9:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1492,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4257:8:16"
                  },
                  "parameters": {
                    "id": 1491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1488,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4213:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1503,
                        "src": "4205:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4205:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4228:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1503,
                        "src": "4220:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4220:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4204:32:16"
                  },
                  "returnParameters": {
                    "id": 1495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1494,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1503,
                        "src": "4275:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4274:9:16"
                  },
                  "scope": 1878,
                  "src": "4186:149:16",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    350
                  ],
                  "body": {
                    "id": 1527,
                    "nodeType": "Block",
                    "src": "4732:108:16",
                    "statements": [
                      {
                        "assignments": [
                          1515
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1515,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4750:5:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1527,
                            "src": "4742:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1514,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4742:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1518,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1516,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "4758:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4758:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4742:28:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1520,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1515,
                              "src": "4789:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1521,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1506,
                              "src": "4796:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1522,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "4805:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1519,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1834,
                            "src": "4780:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4780:32:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1524,
                        "nodeType": "ExpressionStatement",
                        "src": "4780:32:16"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4829:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1513,
                        "id": 1526,
                        "nodeType": "Return",
                        "src": "4822:11:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1504,
                    "nodeType": "StructuredDocumentation",
                    "src": "4341:297:16",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4652:7:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1510,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4708:8:16"
                  },
                  "parameters": {
                    "id": 1509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1506,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4668:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1528,
                        "src": "4660:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4660:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1508,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4685:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1528,
                        "src": "4677:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4677:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4659:33:16"
                  },
                  "returnParameters": {
                    "id": 1513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1512,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1528,
                        "src": "4726:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4726:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4725:6:16"
                  },
                  "scope": 1878,
                  "src": "4643:197:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    362
                  ],
                  "body": {
                    "id": 1560,
                    "nodeType": "Block",
                    "src": "5505:153:16",
                    "statements": [
                      {
                        "assignments": [
                          1542
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1542,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "5523:7:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1560,
                            "src": "5515:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5515:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1545,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1543,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "5533:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5533:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5515:30:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1547,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "5571:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1548,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1542,
                              "src": "5577:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1549,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1535,
                              "src": "5586:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1546,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1877,
                            "src": "5555:15:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5555:38:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1551,
                        "nodeType": "ExpressionStatement",
                        "src": "5555:38:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1553,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "5613:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1554,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "5619:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1555,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1535,
                              "src": "5623:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1552,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1696,
                            "src": "5603:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5603:27:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1557,
                        "nodeType": "ExpressionStatement",
                        "src": "5603:27:16"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5647:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1540,
                        "id": 1559,
                        "nodeType": "Return",
                        "src": "5640:11:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1529,
                    "nodeType": "StructuredDocumentation",
                    "src": "4846:551:16",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1561,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "5411:12:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1537,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5481:8:16"
                  },
                  "parameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5432:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1561,
                        "src": "5424:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5424:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5446:2:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1561,
                        "src": "5438:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5438:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5458:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1561,
                        "src": "5450:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5450:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5423:42:16"
                  },
                  "returnParameters": {
                    "id": 1540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1539,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1561,
                        "src": "5499:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1538,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5499:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5498:6:16"
                  },
                  "scope": 1878,
                  "src": "5402:256:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1589,
                    "nodeType": "Block",
                    "src": "6147:140:16",
                    "statements": [
                      {
                        "assignments": [
                          1572
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1572,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6165:5:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1589,
                            "src": "6157:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1571,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6157:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1575,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1573,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "6173:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6173:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6157:28:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1577,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "6204:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1578,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1564,
                              "src": "6211:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1580,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1572,
                                    "src": "6230:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1581,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1564,
                                    "src": "6237:7:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1579,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1503,
                                  "src": "6220:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256)"
                                  }
                                },
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6220:25:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1583,
                                "name": "addedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1566,
                                "src": "6248:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6220:38:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1576,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1834,
                            "src": "6195:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:64:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1586,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:64:16"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6276:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1570,
                        "id": 1588,
                        "nodeType": "Return",
                        "src": "6269:11:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1562,
                    "nodeType": "StructuredDocumentation",
                    "src": "5664:384:16",
                    "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "39509351",
                  "id": 1590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseAllowance",
                  "nameLocation": "6062:17:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1564,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6088:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "6080:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1563,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6080:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1566,
                        "mutability": "mutable",
                        "name": "addedValue",
                        "nameLocation": "6105:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "6097:18:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1565,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6097:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6079:37:16"
                  },
                  "returnParameters": {
                    "id": 1570,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1569,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "6141:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1568,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6141:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6140:6:16"
                  },
                  "scope": 1878,
                  "src": "6053:234:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1630,
                    "nodeType": "Block",
                    "src": "6873:328:16",
                    "statements": [
                      {
                        "assignments": [
                          1601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1601,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6891:5:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1630,
                            "src": "6883:13:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6883:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1604,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1602,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "6899:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6899:12:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6883:28:16"
                      },
                      {
                        "assignments": [
                          1606
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1606,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "6929:16:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1630,
                            "src": "6921:24:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1605,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6921:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1611,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1608,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1601,
                              "src": "6958:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1609,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "6965:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1607,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "6948:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6948:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6921:52:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1613,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1606,
                                "src": "6991:16:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1614,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "7011:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6991:35:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                              "id": 1616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7028:39:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                                "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                              },
                              "value": "ERC20: decreased allowance below zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                                "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                              }
                            ],
                            "id": 1612,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6983:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6983:85:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1618,
                        "nodeType": "ExpressionStatement",
                        "src": "6983:85:16"
                      },
                      {
                        "id": 1627,
                        "nodeType": "UncheckedBlock",
                        "src": "7078:95:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1620,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1601,
                                  "src": "7111:5:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1621,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1593,
                                  "src": "7118:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1622,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1606,
                                    "src": "7127:16:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1623,
                                    "name": "subtractedValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1595,
                                    "src": "7146:15:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7127:34:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1619,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1834,
                                "src": "7102:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7102:60:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1626,
                            "nodeType": "ExpressionStatement",
                            "src": "7102:60:16"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7190:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1599,
                        "id": 1629,
                        "nodeType": "Return",
                        "src": "7183:11:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1591,
                    "nodeType": "StructuredDocumentation",
                    "src": "6293:476:16",
                    "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
                  },
                  "functionSelector": "a457c2d7",
                  "id": 1631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseAllowance",
                  "nameLocation": "6783:17:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1593,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6809:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6801:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6801:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1595,
                        "mutability": "mutable",
                        "name": "subtractedValue",
                        "nameLocation": "6826:15:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6818:23:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1594,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6818:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6800:42:16"
                  },
                  "returnParameters": {
                    "id": 1599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "6867:4:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1597,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6867:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6866:6:16"
                  },
                  "scope": 1878,
                  "src": "6774:427:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1695,
                    "nodeType": "Block",
                    "src": "7733:613:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1642,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1634,
                                "src": "7751:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7767:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7759:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1643,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7759:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7759:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7751:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7771:39:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                "typeString": "literal_string \"ERC20: transfer from the zero address\""
                              },
                              "value": "ERC20: transfer from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                "typeString": "literal_string \"ERC20: transfer from the zero address\""
                              }
                            ],
                            "id": 1641,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7743:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7743:68:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1650,
                        "nodeType": "ExpressionStatement",
                        "src": "7743:68:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1652,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1636,
                                "src": "7829:2:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7843:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7835:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1653,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7835:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7835:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7829:16:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7847:37:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                "typeString": "literal_string \"ERC20: transfer to the zero address\""
                              },
                              "value": "ERC20: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                "typeString": "literal_string \"ERC20: transfer to the zero address\""
                              }
                            ],
                            "id": 1651,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7821:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7821:64:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "7821:64:16"
                      },
                      {
                        "assignments": [
                          1662
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1662,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "7904:11:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1695,
                            "src": "7896:19:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1661,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7896:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1666,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1663,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "7918:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1665,
                          "indexExpression": {
                            "id": 1664,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1634,
                            "src": "7928:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7918:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7896:37:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1668,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1662,
                                "src": "7951:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1669,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1638,
                                "src": "7966:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7951:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                              "id": 1671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7974:40:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                              },
                              "value": "ERC20: transfer amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                              }
                            ],
                            "id": 1667,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7943:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7943:72:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1673,
                        "nodeType": "ExpressionStatement",
                        "src": "7943:72:16"
                      },
                      {
                        "id": 1688,
                        "nodeType": "UncheckedBlock",
                        "src": "8025:273:16",
                        "statements": [
                          {
                            "expression": {
                              "id": 1680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1674,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "8049:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1676,
                                "indexExpression": {
                                  "id": 1675,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1634,
                                  "src": "8059:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8049:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1677,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1662,
                                  "src": "8067:11:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1678,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1638,
                                  "src": "8081:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8067:20:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8049:38:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1681,
                            "nodeType": "ExpressionStatement",
                            "src": "8049:38:16"
                          },
                          {
                            "expression": {
                              "id": 1686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1682,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "8264:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1684,
                                "indexExpression": {
                                  "id": 1683,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1636,
                                  "src": "8274:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8264:13:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 1685,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1638,
                                "src": "8281:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8264:23:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1687,
                            "nodeType": "ExpressionStatement",
                            "src": "8264:23:16"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1690,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1634,
                              "src": "8322:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1691,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1636,
                              "src": "8328:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1692,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1638,
                              "src": "8332:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1689,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "8313:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8313:26:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1694,
                        "nodeType": "EmitStatement",
                        "src": "8308:31:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1632,
                    "nodeType": "StructuredDocumentation",
                    "src": "7207:443:16",
                    "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
                  },
                  "id": 1696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "7664:9:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1639,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1634,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7682:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "7674:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7674:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1636,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7696:2:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "7688:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7688:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1638,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7708:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "7700:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7700:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7673:42:16"
                  },
                  "returnParameters": {
                    "id": 1640,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7733:0:16"
                  },
                  "scope": 1878,
                  "src": "7655:691:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1734,
                    "nodeType": "Block",
                    "src": "8687:351:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1705,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1699,
                                "src": "8705:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1708,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8724:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1707,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8716:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1706,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8716:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8716:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8705:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                              "id": 1711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8728:33:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              },
                              "value": "ERC20: mint to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              }
                            ],
                            "id": 1704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8697:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8697:65:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1713,
                        "nodeType": "ExpressionStatement",
                        "src": "8697:65:16"
                      },
                      {
                        "expression": {
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1714,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "8773:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1715,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1701,
                            "src": "8789:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8773:22:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1717,
                        "nodeType": "ExpressionStatement",
                        "src": "8773:22:16"
                      },
                      {
                        "id": 1724,
                        "nodeType": "UncheckedBlock",
                        "src": "8805:175:16",
                        "statements": [
                          {
                            "expression": {
                              "id": 1722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1718,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "8941:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1720,
                                "indexExpression": {
                                  "id": 1719,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1699,
                                  "src": "8951:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8941:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "+=",
                              "rightHandSide": {
                                "id": 1721,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1701,
                                "src": "8963:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8941:28:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1723,
                            "nodeType": "ExpressionStatement",
                            "src": "8941:28:16"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9011:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9003:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1726,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9003:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9003:10:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1730,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1699,
                              "src": "9015:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1731,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1701,
                              "src": "9024:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1725,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "8994:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8994:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1733,
                        "nodeType": "EmitStatement",
                        "src": "8989:42:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1697,
                    "nodeType": "StructuredDocumentation",
                    "src": "8352:265:16",
                    "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
                  },
                  "id": 1735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "8631:5:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1699,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8645:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "8637:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8637:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "8662:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "8654:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8654:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8636:33:16"
                  },
                  "returnParameters": {
                    "id": 1703,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8687:0:16"
                  },
                  "scope": 1878,
                  "src": "8622:416:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1788,
                    "nodeType": "Block",
                    "src": "9423:475:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1744,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1738,
                                "src": "9441:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1747,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9460:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9452:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1745,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9452:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9452:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9441:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9464:35:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                "typeString": "literal_string \"ERC20: burn from the zero address\""
                              },
                              "value": "ERC20: burn from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                "typeString": "literal_string \"ERC20: burn from the zero address\""
                              }
                            ],
                            "id": 1743,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9433:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9433:67:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1752,
                        "nodeType": "ExpressionStatement",
                        "src": "9433:67:16"
                      },
                      {
                        "assignments": [
                          1754
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1754,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "9519:14:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1788,
                            "src": "9511:22:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1753,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9511:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1758,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1755,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "9536:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1757,
                          "indexExpression": {
                            "id": 1756,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "9546:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9536:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9511:43:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1760,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1754,
                                "src": "9572:14:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1761,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1740,
                                "src": "9590:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9572:24:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 1763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9598:36:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                                "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                              },
                              "value": "ERC20: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                                "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                              }
                            ],
                            "id": 1759,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9564:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9564:71:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1765,
                        "nodeType": "ExpressionStatement",
                        "src": "9564:71:16"
                      },
                      {
                        "id": 1778,
                        "nodeType": "UncheckedBlock",
                        "src": "9645:194:16",
                        "statements": [
                          {
                            "expression": {
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1766,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1377,
                                  "src": "9669:9:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1768,
                                "indexExpression": {
                                  "id": 1767,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1738,
                                  "src": "9679:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9669:18:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1769,
                                  "name": "accountBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1754,
                                  "src": "9690:14:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1770,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1740,
                                  "src": "9707:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9690:23:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9669:44:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1773,
                            "nodeType": "ExpressionStatement",
                            "src": "9669:44:16"
                          },
                          {
                            "expression": {
                              "id": 1776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1774,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1385,
                                "src": "9806:12:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "id": 1775,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1740,
                                "src": "9822:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9806:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1777,
                            "nodeType": "ExpressionStatement",
                            "src": "9806:22:16"
                          }
                        ]
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1780,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1738,
                              "src": "9863:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9880:1:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9872:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1781,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9872:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9872:10:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1785,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "9884:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1779,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "9854:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9854:37:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1787,
                        "nodeType": "EmitStatement",
                        "src": "9849:42:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1736,
                    "nodeType": "StructuredDocumentation",
                    "src": "9044:309:16",
                    "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
                  },
                  "id": 1789,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "9367:5:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1738,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9381:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1789,
                        "src": "9373:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1737,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9373:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1740,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9398:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1789,
                        "src": "9390:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1739,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9390:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9372:33:16"
                  },
                  "returnParameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9423:0:16"
                  },
                  "scope": 1878,
                  "src": "9358:540:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1833,
                    "nodeType": "Block",
                    "src": "10404:257:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1800,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "10422:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10439:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10431:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1801,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10431:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10431:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10422:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                              "id": 1806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10443:38:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                "typeString": "literal_string \"ERC20: approve from the zero address\""
                              },
                              "value": "ERC20: approve from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                "typeString": "literal_string \"ERC20: approve from the zero address\""
                              }
                            ],
                            "id": 1799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10414:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10414:68:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1808,
                        "nodeType": "ExpressionStatement",
                        "src": "10414:68:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1810,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1794,
                                "src": "10500:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10519:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10511:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1811,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10511:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10511:10:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10500:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                              "id": 1816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10523:36:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                "typeString": "literal_string \"ERC20: approve to the zero address\""
                              },
                              "value": "ERC20: approve to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                "typeString": "literal_string \"ERC20: approve to the zero address\""
                              }
                            ],
                            "id": 1809,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10492:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10492:68:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1818,
                        "nodeType": "ExpressionStatement",
                        "src": "10492:68:16"
                      },
                      {
                        "expression": {
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1819,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "10571:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1822,
                              "indexExpression": {
                                "id": 1820,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1792,
                                "src": "10583:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10571:18:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1823,
                            "indexExpression": {
                              "id": 1821,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1794,
                              "src": "10590:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10571:27:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1824,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1796,
                            "src": "10601:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10571:36:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1826,
                        "nodeType": "ExpressionStatement",
                        "src": "10571:36:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1828,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "10631:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1829,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1794,
                              "src": "10638:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1830,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1796,
                              "src": "10647:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1827,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 306,
                            "src": "10622:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10622:32:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1832,
                        "nodeType": "EmitStatement",
                        "src": "10617:37:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1790,
                    "nodeType": "StructuredDocumentation",
                    "src": "9904:412:16",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
                  },
                  "id": 1834,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "10330:8:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10347:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "10339:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10339:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1794,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10362:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "10354:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1793,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10354:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1796,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10379:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1834,
                        "src": "10371:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1795,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10371:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10338:48:16"
                  },
                  "returnParameters": {
                    "id": 1798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10404:0:16"
                  },
                  "scope": 1878,
                  "src": "10321:340:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1876,
                    "nodeType": "Block",
                    "src": "11032:321:16",
                    "statements": [
                      {
                        "assignments": [
                          1845
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1845,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "11050:16:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 1876,
                            "src": "11042:24:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1844,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11042:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1850,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1847,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "11079:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1848,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1839,
                              "src": "11086:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1846,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "11069:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11069:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11042:52:16"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1851,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1845,
                            "src": "11108:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11133:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1853,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11133:7:16",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1852,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "11128:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11128:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11142:3:16",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "11128:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11108:37:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1875,
                        "nodeType": "IfStatement",
                        "src": "11104:243:16",
                        "trueBody": {
                          "id": 1874,
                          "nodeType": "Block",
                          "src": "11147:200:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1861,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1859,
                                      "name": "currentAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1845,
                                      "src": "11169:16:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 1860,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1841,
                                      "src": "11189:6:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11169:26:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                                    "id": 1862,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11197:31:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                      "typeString": "literal_string \"ERC20: insufficient allowance\""
                                    },
                                    "value": "ERC20: insufficient allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                      "typeString": "literal_string \"ERC20: insufficient allowance\""
                                    }
                                  ],
                                  "id": 1858,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11161:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11161:68:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1864,
                              "nodeType": "ExpressionStatement",
                              "src": "11161:68:16"
                            },
                            {
                              "id": 1873,
                              "nodeType": "UncheckedBlock",
                              "src": "11243:94:16",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1866,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1837,
                                        "src": "11280:5:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1867,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1839,
                                        "src": "11287:7:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1870,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1868,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1845,
                                          "src": "11296:16:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1869,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1841,
                                          "src": "11315:6:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11296:25:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1865,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1834,
                                      "src": "11271:8:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256)"
                                      }
                                    },
                                    "id": 1871,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11271:51:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1872,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11271:51:16"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1835,
                    "nodeType": "StructuredDocumentation",
                    "src": "10667:270:16",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
                  },
                  "id": 1877,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10951:15:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1842,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1837,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10975:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1877,
                        "src": "10967:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10967:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1839,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10990:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1877,
                        "src": "10982:15:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1838,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10982:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1841,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "11007:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 1877,
                        "src": "10999:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1840,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10999:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10966:48:16"
                  },
                  "returnParameters": {
                    "id": 1843,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11032:0:16"
                  },
                  "scope": 1878,
                  "src": "10942:411:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1879,
              "src": "1731:9624:16",
              "usedErrors": []
            }
          ],
          "src": "105:11251:16"
        },
        "id": 16
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/Eater.sol": {
        "Eater": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/Eater.sol\":\"Eater\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x61dc76c5f99c11e66003c819e44a6632373c0b1a28439d7170a6a18ca2ec9745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dba78697427e16a13bfc5be2ea96ea317d26e7cb530a7727e50ff3539e618b6\",\"dweb:/ipfs/QmfVwv7cfqoCY3v67HtNf2wXzLF36wrVAb8pmCtYHBA9a7\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/GenericMerge.sol": {
        "GenericMerge": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_wewe",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 259,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080346100e857601f610f2938819003918201601f19168301916001600160401b038311848410176100ed5780849260409485528339810103126100e857610052602061004b83610103565b9201610103565b6001600081815581546001600160a81b0319811633600881811b610100600160a81b03169290921790945560405195946001600160a01b03949093909290911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360646002558160018060a01b0319931683600454161760045516906003541617600355610e1190816101188239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e85756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610c8a5750806324a47aeb14610ba057806334fcf43714610aed57806335faa416146109985780635c975abb14610974578063679aefce14610955578063715018a6146108f15780638da5cb5b146108c05780638f4ffcb1146105ae57838163b6b55f251461052157508063c4ae31681461043e578063e1f26f2214610417578063ea9f24171461019a5763f2fde38b146100bf57600080fd5b34610196576020366003190112610196576100d8610caf565b6100e0610cca565b6001600160a01b0381811693909290841561014457505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103335788966103e4575b506101ef610d75565b6002548087029087820414871517156103d157606490049385838554169160248a5180948193825230898301525afa9081156103c7578991610396575b50841161033d5784875180926323b872dd60e01b8252818b816102538c30338c8501610db9565b03925af1801561033357918593916102a1989593610316575b508154855163a9059cbb60e01b815233938101938452602084019490945292978893919091169183918a918391604090910190565b03925af193841561030c577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c893946102df575b50519283523392a280f35b6102fe90833d8511610305575b6102f68183610d25565b810190610d5d565b50386102d4565b503d6102ec565b81513d87823e3d90fd5b61032c90853d8711610305576102f68183610d25565b503861026c565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d83116103c0575b6103ad8183610d25565b810103126103bc57513861022c565b8880fd5b503d6103a3565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d8311610410575b6103fc8183610d25565b8101031261040c575194386101e6565b8780fd5b503d6103f2565b50346101965782600319360112610196575490516001600160a01b03909116815260209150f35b5034610196578260031936011261019657610457610cca565b60015460ff8116156104e057506001549060ff8216156104a6575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893610511610d75565b60ff19161760015551338152a180f35b808484346105aa5760203660031901126105aa57610572602091610543610cca565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501610db9565b03925af19081156105a15750610586575080f35b61059d9060203d8111610305576102f68183610d25565b5080f35b513d84823e3d90fd5b5050fd5b5034610196576080366003190112610196576105c8610caf565b602480359290916001600160a01b0391604435838116036108bc5760643567ffffffffffffffff8082116103bc57366023830112156103bc57818301359081116103bc573691018501116108bc57600287541461087a576002875561062b610d75565b826003541690811561082c5761063f610d75565b60025480870290878204148715171561081a5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610810578b916107df575b508411610788575085885180926323b872dd60e01b8252818c816106ae8d308c8b8501610db9565b03925af180156103c75791610702989391879361076b575b508054845163a9059cbb60e01b81526001600160a01b03871692810192835260208301939093529198899287169183918c918391604090910190565b03925af1958615610761577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c89596610744575b50519485521692a26001815580f35b61075a90853d8711610305576102f68183610d25565b5038610735565b81513d89823e3d90fd5b61078190843d8611610305576102f68183610d25565b50386106c6565b82602d608492898c519362461bcd60e51b85528401528201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d8311610809575b6107f68183610d25565b81010312610805575138610686565b8a80fd5b503d6107ec565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346108ed57816003193601126108ed57600154905160089190911c6001600160a01b03168152602090f35b5080fd5b833461095257806003193601126109525761090a610cca565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108ed57816003193601126108ed576020906002549051908152f35b5050346108ed57816003193601126108ed5760209060ff6001541690519015158152f35b509190346108ed57816003193601126108ed576109b3610cca565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610ae3578697610ab0575b508615610a6d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af1908115610a645750610a47578280f35b81610a5d92903d10610305576102f68183610d25565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610adc575b610ac88183610d25565b81010312610ad8575195386109ee565b8580fd5b503d610abe565b84513d88823e3d90fd5b50903461019657602036600319011261019657813591610b0b610cca565b8215610b5357508160025403610b1f578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b503461019657602080600319360112610c865760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa80156103c75787918a91610c55575b5010610c00576101ef610d75565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610c7f575b610c6e8183610d25565b810103126103bc5786905138610bf2565b503d610c64565b8380fd5b8490346108ed57816003193601126108ed576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610cc557565b600080fd5b60015460081c6001600160a01b03163303610ce157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610d4757604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610cc557518015158103610cc55790565b60ff60015416610d8157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea26469706673582212207d18175e560b9401f834c2543d952841d3640e6d6a5c91ca95e2b69374a4962064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x1F PUSH2 0xF29 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE8 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP3 ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH2 0xE11 SWAP1 DUP2 PUSH2 0x118 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE8 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xC8A JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xAED JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5AE JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x521 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x19A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0xD8 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x144 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x333 JUMPI DUP9 SWAP7 PUSH2 0x3E4 JUMPI JUMPDEST POP PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3C7 JUMPI DUP10 SWAP2 PUSH2 0x396 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x33D JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x253 DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x333 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x2A1 SWAP9 SWAP6 SWAP4 PUSH2 0x316 JUMPI JUMPDEST POP DUP2 SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP8 DUP9 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP11 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x30C JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP4 SWAP5 PUSH2 0x2DF JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2FE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x305 JUMPI JUMPDEST PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD5D JUMP JUMPDEST POP CODESIZE PUSH2 0x2D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EC JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x26C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3C0 JUMPI JUMPDEST PUSH2 0x3AD DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI MLOAD CODESIZE PUSH2 0x22C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3A3 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x410 JUMPI JUMPDEST PUSH2 0x3FC DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40C JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1E6 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x457 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4A6 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x511 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x572 PUSH1 0x20 SWAP2 PUSH2 0x543 PUSH2 0xCCA JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5A1 JUMPI POP PUSH2 0x586 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x59D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x5C8 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x8BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x3BC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3BC JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3BC JUMPI CALLDATASIZE SWAP2 ADD DUP6 ADD GT PUSH2 0x8BC JUMPI PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x87A JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x62B PUSH2 0xD75 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x82C JUMPI PUSH2 0x63F PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x810 JUMPI DUP12 SWAP2 PUSH2 0x7DF JUMPI JUMPDEST POP DUP5 GT PUSH2 0x788 JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x6AE DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3C7 JUMPI SWAP2 PUSH2 0x702 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x76B JUMPI JUMPDEST POP DUP1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP9 DUP10 SWAP3 DUP8 AND SWAP2 DUP4 SWAP2 DUP13 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x761 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 PUSH2 0x744 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x75A SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x735 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x781 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x6C6 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x809 JUMPI JUMPDEST PUSH2 0x7F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x805 JUMPI MLOAD CODESIZE PUSH2 0x686 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EC JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x952 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x952 JUMPI PUSH2 0x90A PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH2 0x9B3 PUSH2 0xCCA JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xAE3 JUMPI DUP7 SWAP8 PUSH2 0xAB0 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA64 JUMPI POP PUSH2 0xA47 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xA5D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xADC JUMPI JUMPDEST PUSH2 0xAC8 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD8 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x9EE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xABE JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB0B PUSH2 0xCCA JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xB1F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC86 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xC55 JUMPI JUMPDEST POP LT PUSH2 0xC00 JUMPI PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xC7F JUMPI JUMPDEST PUSH2 0xC6E DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xBF2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC64 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCC5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD47 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xCC5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xCC5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x18175E560B9401F834C2543D952841D3640E6D6A5C91CA95E2B69374A496 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "289:961:7:-:0;;;;;;;;;;;;;-1:-1:-1;;289:961:7;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;289:961:7;;;;;-1:-1:-1;;;;;;289:961:7;;734:10:5;289:961:7;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;;;-1:-1:-1;;;;;289:961:7;;;734:10:5;;289:961:7;;;;;;2566:40:0;;-1:-1:-1;2566:40:0;484:3:7;476:11;289:961;;;;;;;;;;;497:12;289:961;;;497:12;289:961;;;519:14;289:961;;;519:14;289:961;;;;;;;;;-1:-1:-1;289:961:7;;;;;;-1:-1:-1;289:961:7;;;;;-1:-1:-1;289:961:7;;;;-1:-1:-1;;;;;289:961:7;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3247,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3421,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 3513,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3365,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 3274,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 3445,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610c8a5750806324a47aeb14610ba057806334fcf43714610aed57806335faa416146109985780635c975abb14610974578063679aefce14610955578063715018a6146108f15780638da5cb5b146108c05780638f4ffcb1146105ae57838163b6b55f251461052157508063c4ae31681461043e578063e1f26f2214610417578063ea9f24171461019a5763f2fde38b146100bf57600080fd5b34610196576020366003190112610196576100d8610caf565b6100e0610cca565b6001600160a01b0381811693909290841561014457505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103335788966103e4575b506101ef610d75565b6002548087029087820414871517156103d157606490049385838554169160248a5180948193825230898301525afa9081156103c7578991610396575b50841161033d5784875180926323b872dd60e01b8252818b816102538c30338c8501610db9565b03925af1801561033357918593916102a1989593610316575b508154855163a9059cbb60e01b815233938101938452602084019490945292978893919091169183918a918391604090910190565b03925af193841561030c577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c893946102df575b50519283523392a280f35b6102fe90833d8511610305575b6102f68183610d25565b810190610d5d565b50386102d4565b503d6102ec565b81513d87823e3d90fd5b61032c90853d8711610305576102f68183610d25565b503861026c565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d83116103c0575b6103ad8183610d25565b810103126103bc57513861022c565b8880fd5b503d6103a3565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d8311610410575b6103fc8183610d25565b8101031261040c575194386101e6565b8780fd5b503d6103f2565b50346101965782600319360112610196575490516001600160a01b03909116815260209150f35b5034610196578260031936011261019657610457610cca565b60015460ff8116156104e057506001549060ff8216156104a6575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893610511610d75565b60ff19161760015551338152a180f35b808484346105aa5760203660031901126105aa57610572602091610543610cca565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501610db9565b03925af19081156105a15750610586575080f35b61059d9060203d8111610305576102f68183610d25565b5080f35b513d84823e3d90fd5b5050fd5b5034610196576080366003190112610196576105c8610caf565b602480359290916001600160a01b0391604435838116036108bc5760643567ffffffffffffffff8082116103bc57366023830112156103bc57818301359081116103bc573691018501116108bc57600287541461087a576002875561062b610d75565b826003541690811561082c5761063f610d75565b60025480870290878204148715171561081a5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610810578b916107df575b508411610788575085885180926323b872dd60e01b8252818c816106ae8d308c8b8501610db9565b03925af180156103c75791610702989391879361076b575b508054845163a9059cbb60e01b81526001600160a01b03871692810192835260208301939093529198899287169183918c918391604090910190565b03925af1958615610761577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c89596610744575b50519485521692a26001815580f35b61075a90853d8711610305576102f68183610d25565b5038610735565b81513d89823e3d90fd5b61078190843d8611610305576102f68183610d25565b50386106c6565b82602d608492898c519362461bcd60e51b85528401528201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d8311610809575b6107f68183610d25565b81010312610805575138610686565b8a80fd5b503d6107ec565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346108ed57816003193601126108ed57600154905160089190911c6001600160a01b03168152602090f35b5080fd5b833461095257806003193601126109525761090a610cca565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108ed57816003193601126108ed576020906002549051908152f35b5050346108ed57816003193601126108ed5760209060ff6001541690519015158152f35b509190346108ed57816003193601126108ed576109b3610cca565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610ae3578697610ab0575b508615610a6d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af1908115610a645750610a47578280f35b81610a5d92903d10610305576102f68183610d25565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610adc575b610ac88183610d25565b81010312610ad8575195386109ee565b8580fd5b503d610abe565b84513d88823e3d90fd5b50903461019657602036600319011261019657813591610b0b610cca565b8215610b5357508160025403610b1f578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b503461019657602080600319360112610c865760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa80156103c75787918a91610c55575b5010610c00576101ef610d75565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610c7f575b610c6e8183610d25565b810103126103bc5786905138610bf2565b503d610c64565b8380fd5b8490346108ed57816003193601126108ed576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610cc557565b600080fd5b60015460081c6001600160a01b03163303610ce157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610d4757604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610cc557518015158103610cc55790565b60ff60015416610d8157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea26469706673582212207d18175e560b9401f834c2543d952841d3640e6d6a5c91ca95e2b69374a4962064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xC8A JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xAED JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5AE JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x521 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x19A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0xD8 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x144 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x333 JUMPI DUP9 SWAP7 PUSH2 0x3E4 JUMPI JUMPDEST POP PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3C7 JUMPI DUP10 SWAP2 PUSH2 0x396 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x33D JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x253 DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x333 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x2A1 SWAP9 SWAP6 SWAP4 PUSH2 0x316 JUMPI JUMPDEST POP DUP2 SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP8 DUP9 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP11 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x30C JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP4 SWAP5 PUSH2 0x2DF JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2FE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x305 JUMPI JUMPDEST PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD5D JUMP JUMPDEST POP CODESIZE PUSH2 0x2D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EC JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x26C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3C0 JUMPI JUMPDEST PUSH2 0x3AD DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI MLOAD CODESIZE PUSH2 0x22C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3A3 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x410 JUMPI JUMPDEST PUSH2 0x3FC DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40C JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1E6 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x457 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4A6 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x511 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x572 PUSH1 0x20 SWAP2 PUSH2 0x543 PUSH2 0xCCA JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5A1 JUMPI POP PUSH2 0x586 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x59D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x5C8 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x8BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x3BC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3BC JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3BC JUMPI CALLDATASIZE SWAP2 ADD DUP6 ADD GT PUSH2 0x8BC JUMPI PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x87A JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x62B PUSH2 0xD75 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x82C JUMPI PUSH2 0x63F PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x810 JUMPI DUP12 SWAP2 PUSH2 0x7DF JUMPI JUMPDEST POP DUP5 GT PUSH2 0x788 JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x6AE DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3C7 JUMPI SWAP2 PUSH2 0x702 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x76B JUMPI JUMPDEST POP DUP1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP9 DUP10 SWAP3 DUP8 AND SWAP2 DUP4 SWAP2 DUP13 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x761 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 PUSH2 0x744 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x75A SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x735 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x781 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x6C6 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x809 JUMPI JUMPDEST PUSH2 0x7F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x805 JUMPI MLOAD CODESIZE PUSH2 0x686 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EC JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x952 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x952 JUMPI PUSH2 0x90A PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH2 0x9B3 PUSH2 0xCCA JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xAE3 JUMPI DUP7 SWAP8 PUSH2 0xAB0 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA64 JUMPI POP PUSH2 0xA47 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xA5D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xADC JUMPI JUMPDEST PUSH2 0xAC8 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD8 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x9EE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xABE JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB0B PUSH2 0xCCA JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xB1F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC86 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xC55 JUMPI JUMPDEST POP LT PUSH2 0xC00 JUMPI PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xC7F JUMPI JUMPDEST PUSH2 0xC6E DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xBF2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC64 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCC5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD47 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xCC5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xCC5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x18175E560B9401F834C2543D952841D3640E6D6A5C91CA95E2B69374A496 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "289:961:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;289:961:7;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;289:961:7;;;;;;;2162:22:0;;289:961:7;;-1:-1:-1;;289:961:7;;;-1:-1:-1;;;;;;289:961:7;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;2566:40:0;;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;776:36:7;;;801:10;776:36;;;289:961;;;776:36;;-1:-1:-1;;;;;289:961:7;;;776:36;289:961;;;;776:36;;;;;;;;;;;289:961;1204:72:1;;;:::i;:::-;918:5:6;289:961:7;;;;;;;;;;;;;;;927:3:6;289:961:7;;;;;;;;;;;;979:37:6;;;;;;1010:4;979:37;;;289:961:7;979:37:6;;;;;;;;;;;289:961:7;961:55:6;;;289:961:7;;;;;;;;;;1098:55:6;;1010:4;;;1098:55;1010:4;;801:10:7;1098:55:6;;;;:::i;:::-;;;;;;;;;;;;;1163:43;1098:55;;;;;289:961:7;-1:-1:-1;289:961:7;;;;-1:-1:-1;;;1163:43:6;;801:10:7;1163:43:6;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:43:6;;;;;;;;;;1222:20;1163:43;;;;289:961:7;;;;;;801:10;1222:20:6;;289:961:7;;1163:43:6;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;289:961:7;;;;;;;;;1098:55:6;;;;;;;;;;;;;:::i;:::-;;;;;;289:961:7;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;927:3:6;289:961:7;;;;;;979:37:6;;;;;;;;;;;;;;;;:::i;:::-;;;289:961:7;;;;;979:37:6;;;289:961:7;;;;979:37:6;;;;;;289:961:7;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;776:36;;;;;;;;;;;;;;;;;:::i;:::-;;;289:961;;;;;776:36;;;;289:961;;;;776:36;;;;;289:961;;;;;;;;;;;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;;-1:-1:-1;289:961:7;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;289:961:7;;;;;;;;1685:7:1;289:961:7;;;;;;;;-1:-1:-1;;;289:961:7;1685:7:1;289:961:7;;734:10:5;289:961:7;;2521:22:1;;289:961:7;;2521:22:1;289:961:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;2005:88:6;289:961:7;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;289:961:7;;1685:7:1;289:961:7;;734:10:5;289:961:7;;2274:20:1;289:961:7;;;;;;;;;;;-1:-1:-1;;289:961:7;;;;2158:60:6;289:961:7;1063:62:0;;;:::i;:::-;289:961:7;;;;-1:-1:-1;;;2158:60:6;;289:961:7;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;;2204:4:6;;2184:10;;2158:60;;;:::i;:::-;;;;;;;;;;;;;289:961:7;;;2158:60:6;;;289:961:7;2158:60:6;;;;;;;;;:::i;:::-;;289:961:7;;2158:60:6;289:961:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;289:961:7;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;289:961:7;;2468:19:2;1759:1;;;;;1204:72:1;;:::i;:::-;289:961:7;;;;1768:20:6;;;289:961:7;;1204:72:1;;:::i;:::-;1759:1:2;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:37:6;;1010:4;979:37;;;289:961:7;;;;979:37:6;;;;;;;;;;;;;;289:961:7;961:55:6;;;289:961:7;;;;;;;;;;;1098:55:6;;1010:4;;;1098:55;1010:4;;1098:55;;;;;:::i;:::-;;;;;;;;;;1163:43;1098:55;;;;;;;289:961:7;-1:-1:-1;289:961:7;;;;-1:-1:-1;;;1163:43:6;;-1:-1:-1;;;;;289:961:7;;1163:43:6;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:43:6;;;;;;;;;;1222:20;1163:43;;;;289:961:7;;;;;;;1222:20:6;;289:961:7;1759:1:2;;289:961:7;;1163:43:6;;;;;;;;;;;;;:::i;:::-;;;;;;289:961:7;;;;;;;;;1098:55:6;;;;;;;;;;;;;:::i;:::-;;;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;979:37:6;;;;;;;;;;;;;;;;:::i;:::-;;;289:961:7;;;;;979:37:6;;;289:961:7;;;;979:37:6;;;;;;289:961:7;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;1759:1:2;289:961:7;;;;;;;;;;;1759:1:2;;;;;;;289:961:7;1759:1:2;289:961:7;;;1759:1:2;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;289:961:7;;-1:-1:-1;;;;;;289:961:7;;;;;;;;;-1:-1:-1;;;;;289:961:7;2566:40:0;289:961:7;;2566:40:0;289:961:7;;;;;;;;;;;;;;;;;;;;;614:5;289:961;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;289:961:7;;;;-1:-1:-1;;;1319:37:6;;1350:4;1319:37;;;289:961:7;;1319:37:6;;289:961:7;-1:-1:-1;;;;;289:961:7;;;;;1319:37:6;289:961:7;;;;1319:37:6;;;;;;;;;;;289:961:7;1374:11:6;;;289:961:7;;;;;;-1:-1:-1;;;1426:39:6;;-1:-1:-1;;;;;289:961:7;;;;;;;;;1426:39:6;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;1426:39:6;;;;;;;;;;;;289:961:7;;;1426:39:6;;;;;;-1:-1:-1;1426:39:6;;;;;;:::i;:::-;;;;289:961:7;;;1426:39:6;289:961:7;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;;;;;;;;;;1319:37:6;;;;;;;;;;;;;;;;;:::i;:::-;;;289:961:7;;;;;1319:37:6;;;;289:961:7;;;;1319:37:6;;;;;;289:961:7;;;;;;;;;;;;;;;;;-1:-1:-1;;289:961:7;;;;;;1063:62:0;;;:::i;:::-;627:8:6;;289:961:7;;;;689:5:6;289:961:7;689:13:6;685:92;;289:961:7;;;685:92:6;1759:1:2;289:961:7;1759:1:2;749:17:6;1759:1:2;689:5:6;1759:1:2;289:961:7;;;;749:17:6;685:92;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;938:36:7;;;963:10;938:36;;;289:961;;;;;;;;-1:-1:-1;;;;;289:961:7;;;;938:36;289:961;;;;938:36;;;;;;;;;;;;289:961;992:17;;289:961;;1204:72:1;;:::i;289:961:7:-;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;938:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;289:961;;;;;;;938:36;;;;;;;;289:961;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;:::o;:::-;;;;1359:130:0;289:961:7;;;;-1:-1:-1;;;;;289:961:7;734:10:5;1422:23:0;289:961:7;;1359:130:0:o;289:961:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1767:106:1:-;289:961:7;1685:7:1;289:961:7;;;;1767:106:1:o;289:961:7:-;;;-1:-1:-1;;;289:961:7;;;;;;;;;;;;-1:-1:-1;;;289:961:7;;;;;;;;-1:-1:-1;;;;;289:961:7;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wewe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/GenericMerge.sol\":\"GenericMerge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x61dc76c5f99c11e66003c819e44a6632373c0b1a28439d7170a6a18ca2ec9745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dba78697427e16a13bfc5be2ea96ea317d26e7cb530a7727e50ff3539e618b6\",\"dweb:/ipfs/QmfVwv7cfqoCY3v67HtNf2wXzLF36wrVAb8pmCtYHBA9a7\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x8d04aa079a8a3f70149aa263a7d69ca3191ddeaa99eac152d34682e0b4856a8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0cb269c2d39cbbf31b34d71fe859be93bf048837d2b557f12ac277f65766a0c\",\"dweb:/ipfs/QmUUuiZAfFckdRqGJTjE8suZaia6YN4uehWBaiqkNUp1us\"]},\"contracts/core/merge/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/IMergeV2.sol": {
        "IMergeV2": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "setRate(uint256)": "34fcf437"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/IMergeV2.sol\":\"IMergeV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/merge/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/MergeFactory.sol": {
        "MergeFactory": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "merge",
                  "type": "address"
                }
              ],
              "name": "MergeCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowedDeployers",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "createMerge",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMergeCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "merges",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowed",
                  "type": "bool"
                }
              ],
              "name": "setAllowedDeployer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "merge",
                  "type": "address"
                }
              ],
              "name": "setMerge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "tokens",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523461006f5760008054336001600160a01b0319821681178355604092916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3338152600360205220805460ff191660011790556116f690816100758239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081631d06f92b146105cc5750806339db25f7146105765780634f64b2be146105365780636d090218146104f8578063715018a61461049e5780638da5cb5b14610476578063a469ee93146102e9578063b49757a6146101cf578063e1f26f22146101a0578063e441eebf146101615763f2fde38b1461009c57600080fd5b3461015d57602036600319011261015d576100b56105e8565b906100be610634565b6001600160a01b0391821692831561010b57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461019c57602036600319011261019c576020916001600160a01b039082908261018b6105e8565b168152600285522054169051908152f35b5080fd5b50503461019c578160031936011261019c5760209051736b9bb36519538e0c073894e964e90172e1c0b41f8152f35b5082903461019c5760208060031936011261015d576101ec6105e8565b916101f5610634565b84516321df0da760e01b8152916001600160a01b03818484818885165afa9384156102df578694610279575b50831615610237578461023485856106e3565b80f35b855162461bcd60e51b815291820152601b60248201527f4d65726765466163746f72793a20496e76616c6964206d657267650000000000604482015260649150fd5b909350813d83116102d8575b601f8101601f1916820167ffffffffffffffff8111838210176102c557839183918a52810103126102c1575183811681036102c1579287610221565b8580fd5b634e487b7160e01b885260418552602488fd5b503d610285565b87513d88823e3d90fd5b5091903461019c578060031936011261019c576103046105e8565b338352600360205260ff828420541615610427576001600160a01b0381811680855260026020528385205490919061033e9082161561068c565b8351610f29928382019067ffffffffffffffff948383108684111761041457918391889361079884398152736b9bb36519538e0c073894e964e90172e1c0b41f602082015203019086f0801561040a571693843b15610407578351916334fcf43760e01b8352602435878401528183602481838a5af180156103fd576103d3575b602086866103cd82886106e3565b51908152f35b82116103ea5750825260209350826103cd386103bf565b634e487b7160e01b815260418652602490fd5b85513d84823e3d90fd5b80fd5b84513d87823e3d90fd5b634e487b7160e01b895260418a52602489fd5b815162461bcd60e51b8152602081860152602360248201527f4d65726765466163746f72793a204e6f7420616c6c6f77656420746f206465706044820152626c6f7960e81b6064820152608490fd5b50503461019c578160031936011261019c57905490516001600160a01b039091168152602090f35b83346104075780600319360112610407576104b7610634565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461019c57602036600319011261019c5760209160ff9082906001600160a01b036105236105e8565b1681526003855220541690519015158152f35b503461015d57602036600319011261015d5735916001548310156104075750610560602092610603565b905491519160018060a01b039160031b1c168152f35b50503461019c578060031936011261019c576105906105e8565b90602435918215158093036105c8576105a7610634565b60018060a01b03168352600360205282209060ff8019835416911617905580f35b8380fd5b84903461019c578160031936011261019c576020906001548152f35b600435906001600160a01b03821682036105fe57565b600080fd5b60015481101561061e57600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b0316330361064857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561069357565b60405162461bcd60e51b815260206004820152602260248201527f4d65726765466163746f72793a204d6572676520616c72656164792065786973604482015261747360f01b6064820152608490fd5b6001600160a01b039081166000818152600260205260408120549192909161070d9082161561068c565b600154600160401b811015610783579061074f8260017fe413d0f68462f6240160d618a454469f475317b43867a99c353c0acc7bf4ec1b959401600155610603565b81549060031b908387831b921b19161790558382526002602052604082209416938460018060a01b031982541617905580a3565b634e487b7160e01b83526041600452602483fdfe6080346100e857601f610f2938819003918201601f19168301916001600160401b038311848410176100ed5780849260409485528339810103126100e857610052602061004b83610103565b9201610103565b6001600081815581546001600160a81b0319811633600881811b610100600160a81b03169290921790945560405195946001600160a01b03949093909290911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360646002558160018060a01b0319931683600454161760045516906003541617600355610e1190816101188239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e85756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610c8a5750806324a47aeb14610ba057806334fcf43714610aed57806335faa416146109985780635c975abb14610974578063679aefce14610955578063715018a6146108f15780638da5cb5b146108c05780638f4ffcb1146105ae57838163b6b55f251461052157508063c4ae31681461043e578063e1f26f2214610417578063ea9f24171461019a5763f2fde38b146100bf57600080fd5b34610196576020366003190112610196576100d8610caf565b6100e0610cca565b6001600160a01b0381811693909290841561014457505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103335788966103e4575b506101ef610d75565b6002548087029087820414871517156103d157606490049385838554169160248a5180948193825230898301525afa9081156103c7578991610396575b50841161033d5784875180926323b872dd60e01b8252818b816102538c30338c8501610db9565b03925af1801561033357918593916102a1989593610316575b508154855163a9059cbb60e01b815233938101938452602084019490945292978893919091169183918a918391604090910190565b03925af193841561030c577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c893946102df575b50519283523392a280f35b6102fe90833d8511610305575b6102f68183610d25565b810190610d5d565b50386102d4565b503d6102ec565b81513d87823e3d90fd5b61032c90853d8711610305576102f68183610d25565b503861026c565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d83116103c0575b6103ad8183610d25565b810103126103bc57513861022c565b8880fd5b503d6103a3565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d8311610410575b6103fc8183610d25565b8101031261040c575194386101e6565b8780fd5b503d6103f2565b50346101965782600319360112610196575490516001600160a01b03909116815260209150f35b5034610196578260031936011261019657610457610cca565b60015460ff8116156104e057506001549060ff8216156104a6575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893610511610d75565b60ff19161760015551338152a180f35b808484346105aa5760203660031901126105aa57610572602091610543610cca565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501610db9565b03925af19081156105a15750610586575080f35b61059d9060203d8111610305576102f68183610d25565b5080f35b513d84823e3d90fd5b5050fd5b5034610196576080366003190112610196576105c8610caf565b602480359290916001600160a01b0391604435838116036108bc5760643567ffffffffffffffff8082116103bc57366023830112156103bc57818301359081116103bc573691018501116108bc57600287541461087a576002875561062b610d75565b826003541690811561082c5761063f610d75565b60025480870290878204148715171561081a5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610810578b916107df575b508411610788575085885180926323b872dd60e01b8252818c816106ae8d308c8b8501610db9565b03925af180156103c75791610702989391879361076b575b508054845163a9059cbb60e01b81526001600160a01b03871692810192835260208301939093529198899287169183918c918391604090910190565b03925af1958615610761577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c89596610744575b50519485521692a26001815580f35b61075a90853d8711610305576102f68183610d25565b5038610735565b81513d89823e3d90fd5b61078190843d8611610305576102f68183610d25565b50386106c6565b82602d608492898c519362461bcd60e51b85528401528201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d8311610809575b6107f68183610d25565b81010312610805575138610686565b8a80fd5b503d6107ec565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346108ed57816003193601126108ed57600154905160089190911c6001600160a01b03168152602090f35b5080fd5b833461095257806003193601126109525761090a610cca565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108ed57816003193601126108ed576020906002549051908152f35b5050346108ed57816003193601126108ed5760209060ff6001541690519015158152f35b509190346108ed57816003193601126108ed576109b3610cca565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610ae3578697610ab0575b508615610a6d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af1908115610a645750610a47578280f35b81610a5d92903d10610305576102f68183610d25565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610adc575b610ac88183610d25565b81010312610ad8575195386109ee565b8580fd5b503d610abe565b84513d88823e3d90fd5b50903461019657602036600319011261019657813591610b0b610cca565b8215610b5357508160025403610b1f578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b503461019657602080600319360112610c865760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa80156103c75787918a91610c55575b5010610c00576101ef610d75565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610c7f575b610c6e8183610d25565b810103126103bc5786905138610bf2565b503d610c64565b8380fd5b8490346108ed57816003193601126108ed576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610cc557565b600080fd5b60015460081c6001600160a01b03163303610ce157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610d4757604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610cc557518015158103610cc55790565b60ff60015416610d8157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea26469706673582212207d18175e560b9401f834c2543d952841d3640e6d6a5c91ca95e2b69374a4962064736f6c63430008130033a26469706673582212206fac6ef65967fabdf229a49807b50b531d51a1089bb17f99a789c2507022f88964736f6c63430008130033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 CALLER DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x16F6 SWAP1 DUP2 PUSH2 0x75 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D06F92B EQ PUSH2 0x5CC JUMPI POP DUP1 PUSH4 0x39DB25F7 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x6D090218 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xA469EE93 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xB49757A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xE441EEBF EQ PUSH2 0x161 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0xB5 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 PUSH2 0xBE PUSH2 0x634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x10B JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x18B PUSH2 0x5E8 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x19C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x1EC PUSH2 0x5E8 JUMP JUMPDEST SWAP2 PUSH2 0x1F5 PUSH2 0x634 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x21DF0DA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP5 DUP5 DUP2 DUP9 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2DF JUMPI DUP7 SWAP5 PUSH2 0x279 JUMPI JUMPDEST POP DUP4 AND ISZERO PUSH2 0x237 JUMPI DUP5 PUSH2 0x234 DUP6 DUP6 PUSH2 0x6E3 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A20496E76616C6964206D657267650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2D8 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2C5 JUMPI DUP4 SWAP2 DUP4 SWAP2 DUP11 MSTORE DUP2 ADD SUB SLT PUSH2 0x2C1 JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x2C1 JUMPI SWAP3 DUP8 PUSH2 0x221 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x285 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x19C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH2 0x304 PUSH2 0x5E8 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP4 DUP6 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x33E SWAP1 DUP3 AND ISZERO PUSH2 0x68C JUMP JUMPDEST DUP4 MLOAD PUSH2 0xF29 SWAP3 DUP4 DUP3 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP4 DUP4 LT DUP7 DUP5 GT OR PUSH2 0x414 JUMPI SWAP2 DUP4 SWAP2 DUP9 SWAP4 PUSH2 0x798 DUP5 CODECOPY DUP2 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP7 CREATE DUP1 ISZERO PUSH2 0x40A JUMPI AND SWAP4 DUP5 EXTCODESIZE ISZERO PUSH2 0x407 JUMPI DUP4 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 CALLDATALOAD DUP8 DUP5 ADD MSTORE DUP2 DUP4 PUSH1 0x24 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3D3 JUMPI JUMPDEST PUSH1 0x20 DUP7 DUP7 PUSH2 0x3CD DUP3 DUP9 PUSH2 0x6E3 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 GT PUSH2 0x3EA JUMPI POP DUP3 MSTORE PUSH1 0x20 SWAP4 POP DUP3 PUSH2 0x3CD CODESIZE PUSH2 0x3BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204E6F7420616C6C6F77656420746F20646570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6C6F79 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x407 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x407 JUMPI PUSH2 0x4B7 PUSH2 0x634 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x523 PUSH2 0x5E8 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x407 JUMPI POP PUSH2 0x560 PUSH1 0x20 SWAP3 PUSH2 0x603 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH2 0x590 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x5C8 JUMPI PUSH2 0x5A7 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x19C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5FE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x61E JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x648 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x693 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204D6572676520616C72656164792065786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x70D SWAP1 DUP3 AND ISZERO PUSH2 0x68C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x783 JUMPI SWAP1 PUSH2 0x74F DUP3 PUSH1 0x1 PUSH32 0xE413D0F68462F6240160D618A454469F475317B43867A99C353C0ACC7BF4EC1B SWAP6 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0x603 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP8 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP4 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP5 AND SWAP4 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT INVALID PUSH1 0x80 CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x1F PUSH2 0xF29 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE8 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP3 ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH2 0xE11 SWAP1 DUP2 PUSH2 0x118 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE8 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xC8A JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xAED JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5AE JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x521 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x19A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0xD8 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x144 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x333 JUMPI DUP9 SWAP7 PUSH2 0x3E4 JUMPI JUMPDEST POP PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3C7 JUMPI DUP10 SWAP2 PUSH2 0x396 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x33D JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x253 DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x333 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x2A1 SWAP9 SWAP6 SWAP4 PUSH2 0x316 JUMPI JUMPDEST POP DUP2 SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP8 DUP9 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP11 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x30C JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP4 SWAP5 PUSH2 0x2DF JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2FE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x305 JUMPI JUMPDEST PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD5D JUMP JUMPDEST POP CODESIZE PUSH2 0x2D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EC JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x26C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3C0 JUMPI JUMPDEST PUSH2 0x3AD DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI MLOAD CODESIZE PUSH2 0x22C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3A3 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x410 JUMPI JUMPDEST PUSH2 0x3FC DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40C JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1E6 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x457 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4A6 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x511 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x572 PUSH1 0x20 SWAP2 PUSH2 0x543 PUSH2 0xCCA JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5A1 JUMPI POP PUSH2 0x586 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x59D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x5C8 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x8BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x3BC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3BC JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3BC JUMPI CALLDATASIZE SWAP2 ADD DUP6 ADD GT PUSH2 0x8BC JUMPI PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x87A JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x62B PUSH2 0xD75 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x82C JUMPI PUSH2 0x63F PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x810 JUMPI DUP12 SWAP2 PUSH2 0x7DF JUMPI JUMPDEST POP DUP5 GT PUSH2 0x788 JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x6AE DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3C7 JUMPI SWAP2 PUSH2 0x702 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x76B JUMPI JUMPDEST POP DUP1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP9 DUP10 SWAP3 DUP8 AND SWAP2 DUP4 SWAP2 DUP13 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x761 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 PUSH2 0x744 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x75A SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x735 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x781 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x6C6 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x809 JUMPI JUMPDEST PUSH2 0x7F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x805 JUMPI MLOAD CODESIZE PUSH2 0x686 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EC JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x952 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x952 JUMPI PUSH2 0x90A PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH2 0x9B3 PUSH2 0xCCA JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xAE3 JUMPI DUP7 SWAP8 PUSH2 0xAB0 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA64 JUMPI POP PUSH2 0xA47 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xA5D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xADC JUMPI JUMPDEST PUSH2 0xAC8 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD8 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x9EE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xABE JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB0B PUSH2 0xCCA JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xB1F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC86 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xC55 JUMPI JUMPDEST POP LT PUSH2 0xC00 JUMPI PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xC7F JUMPI JUMPDEST PUSH2 0xC6E DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xBF2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC64 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCC5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD47 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xCC5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xCC5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x18175E560B9401F834C2543D952841D3640E6D6A5C91CA95E2B69374A496 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xAC6EF65967FABDF229A49807B50B531D MLOAD LOG1 ADDMOD SWAP12 0xB1 PUSH32 0x99A789C2507022F88964736F6C63430008130033000000000000000000000000 ",
              "sourceMap": "273:1602:9:-:0;;;;;;;2518:6:0;273:1602:9;;734:10:5;-1:-1:-1;;;;;;273:1602:9;;;;;;;;2518:6:0;-1:-1:-1;;;;;273:1602:9;2566:40:0;2518:6;;2566:40;734:10:5;273:1602:9;;568:16;273:1602;;;;;-1:-1:-1;;273:1602:9;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1512,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 1588,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_setMerge": {
                  "entryPoint": 1763,
                  "id": 963,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_b60c": {
                  "entryPoint": 1676,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 1539,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c9081631d06f92b146105cc5750806339db25f7146105765780634f64b2be146105365780636d090218146104f8578063715018a61461049e5780638da5cb5b14610476578063a469ee93146102e9578063b49757a6146101cf578063e1f26f22146101a0578063e441eebf146101615763f2fde38b1461009c57600080fd5b3461015d57602036600319011261015d576100b56105e8565b906100be610634565b6001600160a01b0391821692831561010b57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461019c57602036600319011261019c576020916001600160a01b039082908261018b6105e8565b168152600285522054169051908152f35b5080fd5b50503461019c578160031936011261019c5760209051736b9bb36519538e0c073894e964e90172e1c0b41f8152f35b5082903461019c5760208060031936011261015d576101ec6105e8565b916101f5610634565b84516321df0da760e01b8152916001600160a01b03818484818885165afa9384156102df578694610279575b50831615610237578461023485856106e3565b80f35b855162461bcd60e51b815291820152601b60248201527f4d65726765466163746f72793a20496e76616c6964206d657267650000000000604482015260649150fd5b909350813d83116102d8575b601f8101601f1916820167ffffffffffffffff8111838210176102c557839183918a52810103126102c1575183811681036102c1579287610221565b8580fd5b634e487b7160e01b885260418552602488fd5b503d610285565b87513d88823e3d90fd5b5091903461019c578060031936011261019c576103046105e8565b338352600360205260ff828420541615610427576001600160a01b0381811680855260026020528385205490919061033e9082161561068c565b8351610f29928382019067ffffffffffffffff948383108684111761041457918391889361079884398152736b9bb36519538e0c073894e964e90172e1c0b41f602082015203019086f0801561040a571693843b15610407578351916334fcf43760e01b8352602435878401528183602481838a5af180156103fd576103d3575b602086866103cd82886106e3565b51908152f35b82116103ea5750825260209350826103cd386103bf565b634e487b7160e01b815260418652602490fd5b85513d84823e3d90fd5b80fd5b84513d87823e3d90fd5b634e487b7160e01b895260418a52602489fd5b815162461bcd60e51b8152602081860152602360248201527f4d65726765466163746f72793a204e6f7420616c6c6f77656420746f206465706044820152626c6f7960e81b6064820152608490fd5b50503461019c578160031936011261019c57905490516001600160a01b039091168152602090f35b83346104075780600319360112610407576104b7610634565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461019c57602036600319011261019c5760209160ff9082906001600160a01b036105236105e8565b1681526003855220541690519015158152f35b503461015d57602036600319011261015d5735916001548310156104075750610560602092610603565b905491519160018060a01b039160031b1c168152f35b50503461019c578060031936011261019c576105906105e8565b90602435918215158093036105c8576105a7610634565b60018060a01b03168352600360205282209060ff8019835416911617905580f35b8380fd5b84903461019c578160031936011261019c576020906001548152f35b600435906001600160a01b03821682036105fe57565b600080fd5b60015481101561061e57600160005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b0316330361064857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b1561069357565b60405162461bcd60e51b815260206004820152602260248201527f4d65726765466163746f72793a204d6572676520616c72656164792065786973604482015261747360f01b6064820152608490fd5b6001600160a01b039081166000818152600260205260408120549192909161070d9082161561068c565b600154600160401b811015610783579061074f8260017fe413d0f68462f6240160d618a454469f475317b43867a99c353c0acc7bf4ec1b959401600155610603565b81549060031b908387831b921b19161790558382526002602052604082209416938460018060a01b031982541617905580a3565b634e487b7160e01b83526041600452602483fdfe6080346100e857601f610f2938819003918201601f19168301916001600160401b038311848410176100ed5780849260409485528339810103126100e857610052602061004b83610103565b9201610103565b6001600081815581546001600160a81b0319811633600881811b610100600160a81b03169290921790945560405195946001600160a01b03949093909290911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360646002558160018060a01b0319931683600454161760045516906003541617600355610e1190816101188239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e85756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610c8a5750806324a47aeb14610ba057806334fcf43714610aed57806335faa416146109985780635c975abb14610974578063679aefce14610955578063715018a6146108f15780638da5cb5b146108c05780638f4ffcb1146105ae57838163b6b55f251461052157508063c4ae31681461043e578063e1f26f2214610417578063ea9f24171461019a5763f2fde38b146100bf57600080fd5b34610196576020366003190112610196576100d8610caf565b6100e0610cca565b6001600160a01b0381811693909290841561014457505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103335788966103e4575b506101ef610d75565b6002548087029087820414871517156103d157606490049385838554169160248a5180948193825230898301525afa9081156103c7578991610396575b50841161033d5784875180926323b872dd60e01b8252818b816102538c30338c8501610db9565b03925af1801561033357918593916102a1989593610316575b508154855163a9059cbb60e01b815233938101938452602084019490945292978893919091169183918a918391604090910190565b03925af193841561030c577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c893946102df575b50519283523392a280f35b6102fe90833d8511610305575b6102f68183610d25565b810190610d5d565b50386102d4565b503d6102ec565b81513d87823e3d90fd5b61032c90853d8711610305576102f68183610d25565b503861026c565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d83116103c0575b6103ad8183610d25565b810103126103bc57513861022c565b8880fd5b503d6103a3565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d8311610410575b6103fc8183610d25565b8101031261040c575194386101e6565b8780fd5b503d6103f2565b50346101965782600319360112610196575490516001600160a01b03909116815260209150f35b5034610196578260031936011261019657610457610cca565b60015460ff8116156104e057506001549060ff8216156104a6575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893610511610d75565b60ff19161760015551338152a180f35b808484346105aa5760203660031901126105aa57610572602091610543610cca565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501610db9565b03925af19081156105a15750610586575080f35b61059d9060203d8111610305576102f68183610d25565b5080f35b513d84823e3d90fd5b5050fd5b5034610196576080366003190112610196576105c8610caf565b602480359290916001600160a01b0391604435838116036108bc5760643567ffffffffffffffff8082116103bc57366023830112156103bc57818301359081116103bc573691018501116108bc57600287541461087a576002875561062b610d75565b826003541690811561082c5761063f610d75565b60025480870290878204148715171561081a5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610810578b916107df575b508411610788575085885180926323b872dd60e01b8252818c816106ae8d308c8b8501610db9565b03925af180156103c75791610702989391879361076b575b508054845163a9059cbb60e01b81526001600160a01b03871692810192835260208301939093529198899287169183918c918391604090910190565b03925af1958615610761577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c89596610744575b50519485521692a26001815580f35b61075a90853d8711610305576102f68183610d25565b5038610735565b81513d89823e3d90fd5b61078190843d8611610305576102f68183610d25565b50386106c6565b82602d608492898c519362461bcd60e51b85528401528201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d8311610809575b6107f68183610d25565b81010312610805575138610686565b8a80fd5b503d6107ec565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346108ed57816003193601126108ed57600154905160089190911c6001600160a01b03168152602090f35b5080fd5b833461095257806003193601126109525761090a610cca565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108ed57816003193601126108ed576020906002549051908152f35b5050346108ed57816003193601126108ed5760209060ff6001541690519015158152f35b509190346108ed57816003193601126108ed576109b3610cca565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610ae3578697610ab0575b508615610a6d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af1908115610a645750610a47578280f35b81610a5d92903d10610305576102f68183610d25565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610adc575b610ac88183610d25565b81010312610ad8575195386109ee565b8580fd5b503d610abe565b84513d88823e3d90fd5b50903461019657602036600319011261019657813591610b0b610cca565b8215610b5357508160025403610b1f578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b503461019657602080600319360112610c865760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa80156103c75787918a91610c55575b5010610c00576101ef610d75565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610c7f575b610c6e8183610d25565b810103126103bc5786905138610bf2565b503d610c64565b8380fd5b8490346108ed57816003193601126108ed576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610cc557565b600080fd5b60015460081c6001600160a01b03163303610ce157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610d4757604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610cc557518015158103610cc55790565b60ff60015416610d8157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea26469706673582212207d18175e560b9401f834c2543d952841d3640e6d6a5c91ca95e2b69374a4962064736f6c63430008130033a26469706673582212206fac6ef65967fabdf229a49807b50b531d51a1089bb17f99a789c2507022f88964736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D06F92B EQ PUSH2 0x5CC JUMPI POP DUP1 PUSH4 0x39DB25F7 EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x6D090218 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xA469EE93 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xB49757A6 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xE441EEBF EQ PUSH2 0x161 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI PUSH2 0xB5 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 PUSH2 0xBE PUSH2 0x634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x10B JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x18B PUSH2 0x5E8 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x19C JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15D JUMPI PUSH2 0x1EC PUSH2 0x5E8 JUMP JUMPDEST SWAP2 PUSH2 0x1F5 PUSH2 0x634 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x21DF0DA7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP5 DUP5 DUP2 DUP9 DUP6 AND GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2DF JUMPI DUP7 SWAP5 PUSH2 0x279 JUMPI JUMPDEST POP DUP4 AND ISZERO PUSH2 0x237 JUMPI DUP5 PUSH2 0x234 DUP6 DUP6 PUSH2 0x6E3 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A20496E76616C6964206D657267650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2D8 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2C5 JUMPI DUP4 SWAP2 DUP4 SWAP2 DUP11 MSTORE DUP2 ADD SUB SLT PUSH2 0x2C1 JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x2C1 JUMPI SWAP3 DUP8 PUSH2 0x221 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x285 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x19C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH2 0x304 PUSH2 0x5E8 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF DUP3 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP4 DUP6 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x33E SWAP1 DUP3 AND ISZERO PUSH2 0x68C JUMP JUMPDEST DUP4 MLOAD PUSH2 0xF29 SWAP3 DUP4 DUP3 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP5 DUP4 DUP4 LT DUP7 DUP5 GT OR PUSH2 0x414 JUMPI SWAP2 DUP4 SWAP2 DUP9 SWAP4 PUSH2 0x798 DUP5 CODECOPY DUP2 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 DUP7 CREATE DUP1 ISZERO PUSH2 0x40A JUMPI AND SWAP4 DUP5 EXTCODESIZE ISZERO PUSH2 0x407 JUMPI DUP4 MLOAD SWAP2 PUSH4 0x34FCF437 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 CALLDATALOAD DUP8 DUP5 ADD MSTORE DUP2 DUP4 PUSH1 0x24 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3D3 JUMPI JUMPDEST PUSH1 0x20 DUP7 DUP7 PUSH2 0x3CD DUP3 DUP9 PUSH2 0x6E3 JUMP JUMPDEST MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 GT PUSH2 0x3EA JUMPI POP DUP3 MSTORE PUSH1 0x20 SWAP4 POP DUP3 PUSH2 0x3CD CODESIZE PUSH2 0x3BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204E6F7420616C6C6F77656420746F20646570 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6C6F79 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x407 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x407 JUMPI PUSH2 0x4B7 PUSH2 0x634 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x523 PUSH2 0x5E8 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x15D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15D JUMPI CALLDATALOAD SWAP2 PUSH1 0x1 SLOAD DUP4 LT ISZERO PUSH2 0x407 JUMPI POP PUSH2 0x560 PUSH1 0x20 SWAP3 PUSH2 0x603 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x19C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH2 0x590 PUSH2 0x5E8 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x5C8 JUMPI PUSH2 0x5A7 PUSH2 0x634 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x19C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x19C JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5FE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x61E JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x648 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x693 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726765466163746F72793A204D6572676520616C72656164792065786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x70D SWAP1 DUP3 AND ISZERO PUSH2 0x68C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x783 JUMPI SWAP1 PUSH2 0x74F DUP3 PUSH1 0x1 PUSH32 0xE413D0F68462F6240160D618A454469F475317B43867A99C353C0ACC7BF4EC1B SWAP6 SWAP5 ADD PUSH1 0x1 SSTORE PUSH2 0x603 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP4 DUP8 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP4 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP5 AND SWAP4 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT INVALID PUSH1 0x80 CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x1F PUSH2 0xF29 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE8 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP3 ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH2 0xE11 SWAP1 DUP2 PUSH2 0x118 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE8 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xC8A JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xAED JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5AE JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x521 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x19A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0xD8 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x144 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x333 JUMPI DUP9 SWAP7 PUSH2 0x3E4 JUMPI JUMPDEST POP PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3C7 JUMPI DUP10 SWAP2 PUSH2 0x396 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x33D JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x253 DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x333 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x2A1 SWAP9 SWAP6 SWAP4 PUSH2 0x316 JUMPI JUMPDEST POP DUP2 SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP8 DUP9 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP11 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x30C JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP4 SWAP5 PUSH2 0x2DF JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2FE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x305 JUMPI JUMPDEST PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD5D JUMP JUMPDEST POP CODESIZE PUSH2 0x2D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EC JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x26C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3C0 JUMPI JUMPDEST PUSH2 0x3AD DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI MLOAD CODESIZE PUSH2 0x22C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3A3 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x410 JUMPI JUMPDEST PUSH2 0x3FC DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40C JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1E6 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x457 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4A6 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x511 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x572 PUSH1 0x20 SWAP2 PUSH2 0x543 PUSH2 0xCCA JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5A1 JUMPI POP PUSH2 0x586 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x59D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x5C8 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x8BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x3BC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3BC JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3BC JUMPI CALLDATASIZE SWAP2 ADD DUP6 ADD GT PUSH2 0x8BC JUMPI PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x87A JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x62B PUSH2 0xD75 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x82C JUMPI PUSH2 0x63F PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x810 JUMPI DUP12 SWAP2 PUSH2 0x7DF JUMPI JUMPDEST POP DUP5 GT PUSH2 0x788 JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x6AE DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3C7 JUMPI SWAP2 PUSH2 0x702 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x76B JUMPI JUMPDEST POP DUP1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP9 DUP10 SWAP3 DUP8 AND SWAP2 DUP4 SWAP2 DUP13 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x761 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 PUSH2 0x744 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x75A SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x735 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x781 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x6C6 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x809 JUMPI JUMPDEST PUSH2 0x7F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x805 JUMPI MLOAD CODESIZE PUSH2 0x686 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EC JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x952 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x952 JUMPI PUSH2 0x90A PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH2 0x9B3 PUSH2 0xCCA JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xAE3 JUMPI DUP7 SWAP8 PUSH2 0xAB0 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA64 JUMPI POP PUSH2 0xA47 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xA5D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xADC JUMPI JUMPDEST PUSH2 0xAC8 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD8 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x9EE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xABE JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB0B PUSH2 0xCCA JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xB1F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC86 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xC55 JUMPI JUMPDEST POP LT PUSH2 0xC00 JUMPI PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xC7F JUMPI JUMPDEST PUSH2 0xC6E DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xBF2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC64 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCC5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD47 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xCC5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xCC5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x18175E560B9401F834C2543D952841D3640E6D6A5C91CA95E2B69374A496 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xAC6EF65967FABDF229A49807B50B531D MLOAD LOG1 ADDMOD SWAP12 0xB1 PUSH32 0x99A789C2507022F88964736F6C63430008130033000000000000000000000000 ",
              "sourceMap": "273:1602:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;273:1602:9;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;-1:-1:-1;;;;;273:1602:9;;;;2162:22:0;;273:1602:9;;-1:-1:-1;;273:1602:9;;-1:-1:-1;;;;;;273:1602:9;;;;;;;2566:40:0;273:1602:9;;2566:40:0;273:1602:9;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;273:1602:9;;;;;;;;;;;;;;;;;-1:-1:-1;;273:1602:9;;;;;;-1:-1:-1;;;;;273:1602:9;;;;;;:::i;:::-;;;;442:41;273:1602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;343:42;273:1602;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;273:1602:9;;-1:-1:-1;;;1139:26:9;;273:1602;-1:-1:-1;;;;;273:1602:9;;;;;;;1139:26;;;;;;;;;;;273:1602;;;;1183:19;273:1602;;1261:5;;;;;:::i;:::-;273:1602;;;;;-1:-1:-1;;;273:1602:9;;;;;;;;;;;;;;;;;;-1:-1:-1;273:1602:9;1139:26;;;;;;;;;;;273:1602;;;-1:-1:-1;;273:1602:9;;;;;;;;;;;;;;;;;;1139:26;;273:1602;;;;;;;;;;;;1139:26;;;;273:1602;;;;;-1:-1:-1;;;273:1602:9;;;;;;;;1139:26;;;;;;273:1602;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1733:10;273:1602;;;;;;;;;;;;;;-1:-1:-1;;;;;273:1602:9;;;;;;824:6;273:1602;;;;;;;;;816:74;;273:1602;;824:27;816:74;:::i;:::-;273:1602;;924:29;;;;;;;;;;;;;;;;;;;;;;;;;273:1602;;343:42;273:1602;;;;924:29;;;;;;;;;273:1602;964:29;;;;;;273:1602;;;;;;964:29;;273:1602;;964:29;;;273:1602;964:29;;273:1602;964:29;;;;;;;;;;;273:1602;;1020:5;;;;;;:::i;:::-;273:1602;;;;;964:29;273:1602;;;;-1:-1:-1;273:1602:9;;;;-1:-1:-1;273:1602:9;1020:5;964:29;;;273:1602;-1:-1:-1;;;273:1602:9;;;;;;;;964:29;273:1602;;;;;;;;;964:29;273:1602;;924:29;273:1602;;;;;;;;;924:29;-1:-1:-1;;;273:1602:9;;;;;;;;;;;-1:-1:-1;;;273:1602:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;273:1602:9;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;273:1602:9;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;273:1602:9;;-1:-1:-1;;;;;;273:1602:9;;;;;;-1:-1:-1;;;;;273:1602:9;2566:40:0;273:1602:9;;2566:40:0;273:1602:9;;;;;;;;;;-1:-1:-1;;273:1602:9;;;;;;;;;;-1:-1:-1;;;;;273:1602:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;273:1602:9;;;;;;;;391:23;;;;;;;273:1602;391:23;;:::i;:::-;273:1602;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1063:62:0;;:::i;:::-;273:1602:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:6;273:1602;;;;;;;;-1:-1:-1;;;;;273:1602:9;;;;;;:::o;:::-;;;;;391:23;273:1602;;;;;;391:23;-1:-1:-1;273:1602:9;;-1:-1:-1;273:1602:9;;;-1:-1:-1;273:1602:9;:::o;:::-;;;;;;;;;;;;1359:130:0;1273:6;273:1602:9;-1:-1:-1;;;;;273:1602:9;734:10:5;1422:23:0;273:1602:9;;1359:130:0:o;273:1602:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;273:1602:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;273:1602:9;;;;;;;1280:250;-1:-1:-1;;;;;273:1602:9;;;-1:-1:-1;273:1602:9;;;1356:6;273:1602;;;;;;;;-1:-1:-1;;1348:74:9;;273:1602;;1356:27;1348:74;:::i;:::-;273:1602;;-1:-1:-1;;;273:1602:9;;;;;;;;;1497:26;273:1602;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1356:6;273:1602;;;;;;;;;;;;;;;;;;;;;1497:26;;1280:250::o;273:1602::-;-1:-1:-1;;;273:1602:9;;;;;;;"
            },
            "methodIdentifiers": {
              "allowedDeployers(address)": "6d090218",
              "createMerge(address,uint256)": "a469ee93",
              "getMergeCount()": "1d06f92b",
              "merges(address)": "e441eebf",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setAllowedDeployer(address,bool)": "39db25f7",
              "setMerge(address)": "b49757a6",
              "tokens(uint256)": "4f64b2be",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merge\",\"type\":\"address\"}],\"name\":\"MergeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedDeployers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"createMerge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMergeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"merges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"merge\",\"type\":\"address\"}],\"name\":\"setMerge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/MergeFactory.sol\":\"MergeFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x61dc76c5f99c11e66003c819e44a6632373c0b1a28439d7170a6a18ca2ec9745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dba78697427e16a13bfc5be2ea96ea317d26e7cb530a7727e50ff3539e618b6\",\"dweb:/ipfs/QmfVwv7cfqoCY3v67HtNf2wXzLF36wrVAb8pmCtYHBA9a7\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x8d04aa079a8a3f70149aa263a7d69ca3191ddeaa99eac152d34682e0b4856a8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0cb269c2d39cbbf31b34d71fe859be93bf048837d2b557f12ac277f65766a0c\",\"dweb:/ipfs/QmUUuiZAfFckdRqGJTjE8suZaia6YN4uehWBaiqkNUp1us\"]},\"contracts/core/merge/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/core/merge/MergeFactory.sol\":{\"keccak256\":\"0xe3183509a7ed3752bbb567b98195f17bcca48791bad436618cb6bb8d16018c6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9505f001e88285e598786709cd65d2086ff294da8be915b1ebd0fc5d4387977\",\"dweb:/ipfs/QmQv79qJBPNURBdKaYVLHwNkj7HkccVJdL4hk7y9XFTAGu\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IApproveAndCall.sol": {
        "IApproveAndCall": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approveAndCall(address,uint256,bytes)": "cae9ca51"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IApproveAndCall.sol\":\"IApproveAndCall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/interfaces/IApproveAndCall.sol\":{\"keccak256\":\"0x7b1b563cd698601946fba28d4d03db0b1cd50b275a9b022e83ec654ebcbca573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://482ad82ef3de4bd0fd26d22a8942c7a4765a0dd3c265c4a7c857e0cb32832639\",\"dweb:/ipfs/QmQRHZx6LkytBJQLB2wujQCEbxBrZQNwgszRxppCTn3iWE\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IERC20Errors.sol": {
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20Errors.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IERC20Errors.sol\":{\"keccak256\":\"0x2b4c07b7d7ac6499263762b54a64c57634fa972fb43e771d7b860fe3e7f48d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bb45a5046643999bef18be5534322275ccee437fc40fa649a01f3f18069f18\",\"dweb:/ipfs/QmdxDsVBgyXqForKMta55VDuH4qs6FgwTFVEfWfB1n3qrt\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IFarm.sol": {
        "IFarm": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "EmergencyWithdraw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Harvest",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Refunded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                }
              ],
              "name": "emergencyWithdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                }
              ],
              "name": "getPoolInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint128",
                      "name": "accChaosPerShare",
                      "type": "uint128"
                    },
                    {
                      "internalType": "uint64",
                      "name": "lastRewardBlock",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "allocPoint",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "weight",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct IFarm.PoolInfo",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "harvest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "refund",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "refundAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "weight",
                  "type": "uint8"
                }
              ],
              "name": "setVaultWeight",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalAllocPoint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "withdrawAndHarvest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit(uint256,uint256,address)": "8dbdbe6d",
              "emergencyWithdraw(uint256)": "5312ea8e",
              "getPoolInfo(uint256)": "2f380b35",
              "harvest(uint256,address)": "18fccc76",
              "refund(uint256)": "278ecde1",
              "refundAll()": "38e771ab",
              "setVaultWeight(uint256,uint8)": "8cebd2ba",
              "totalAllocPoint()": "17caf6f1",
              "withdraw(uint256,uint256,address)": "0ad58d2f",
              "withdrawAndHarvest(uint256,uint256,address)": "d1abb907"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"accChaosPerShare\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"lastRewardBlock\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"allocPoint\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"weight\",\"type\":\"uint8\"}],\"internalType\":\"struct IFarm.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"weight\",\"type\":\"uint8\"}],\"name\":\"setVaultWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawAndHarvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IFarm.sol\":\"IFarm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFarm.sol\":{\"keccak256\":\"0x6209569048cb3e3eab83614a0edb5a91e607326130f197c26eee098f6fb47d03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc305f6dfa8698427d8931918466cf55df30e3c9c6618281d4278b142d50647a\",\"dweb:/ipfs/QmNv5nBiANSD3uxUjjQD3TX2rR9VFWQBHPiGJWbCSR97SK\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IOwnable.sol": {
        "IOwnable": {
          "abi": [
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0x00e090a88037728dcdb4eb2536fafb5889fe49bb5434fbc60f33bdca3eb845cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e82f084652c5468c89123bc3f88e49c11d315bb36ff58c76fb7744ff0d3cc63\",\"dweb:/ipfs/QmddHoagbDm5s9DWz5JpAbbT8Z9DPjCERiPpMrjj3xq8xs\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "IWeweReceiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWeweReceiver.sol\":\"IWeweReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/token/CHAOS.sol": {
        "CHAOS": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "approveAndCall",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                }
              ],
              "name": "collectEmissions",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mintToFarm",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "farm",
                  "type": "address"
                }
              ],
              "name": "setFarm",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "copy_literal_to_memory_1ab327bb7834c37be10c8ae9703808b3086193521955a11b64cff2b4d77a0421": {
                  "entryPoint": 810,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346200032557620000146200032a565b6200001e6200032a565b815190916001600160401b038083116200022557600380546001948582811c92169485156200031a575b6020958684101462000304578190601f93848111620002ae575b50869084831160011462000247576000926200023b575b505060001982851b1c191690861b1782555b8551928311620002255760049384548681811c911680156200021a575b828210146200020557828111620001ba575b50809184116001146200014c57508293949560009362000140575b505082851b92600019911b1c19161790555b60058054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600655610e3b90816200035d8239f35b015191503880620000d5565b9190601f198416968560005283600020936000905b898210620001a25750508487989796971062000187575b50505050811b019055620000e7565b01519060f884600019921b161c191690553880808062000178565b80898597829496860151815501960193019062000161565b85600052816000208380870160051c820192848810620001fb575b0160051c019087905b828110620001ee575050620000ba565b60008155018790620001de565b92508192620001d5565b602286634e487b7160e01b6000525260246000fd5b90607f1690620000a8565b634e487b7160e01b600052604160045260246000fd5b01519050388062000079565b90889350601f1983169186600052886000209260005b8a8282106200029757505084116200027e575b505050811b0182556200008b565b015160001983871b60f8161c1916905538808062000270565b8385015186558c979095019493840193016200025d565b90915084600052866000208480850160051c820192898610620002fa575b918a91869594930160051c01915b828110620002ea57505062000062565b600081558594508a9101620002da565b92508192620002cc565b634e487b7160e01b600052602260045260246000fd5b91607f169162000048565b600080fd5b60408051919082016001600160401b03811183821017620002255760405260058252644348414f5360d81b602083015256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461089757508063095ea7b31461086d57806318160ddd1461084e57806323b872dd14610784578063313ce5671461076857806339509351146107185780635f316876146106da57838163662c4b3b1461065a5750806370a0823114610623578063715018a6146105c55780638da5cb5b1461059c57806395d89b41146104b5578063a0712d681461048c578063a457c2d7146103e6578063a9059cbb146103b5578063cae9ca5114610259578063d4f26c5114610211578063dd62ed3e146101bf5763f2fde38b146100f657600080fd5b346101bb5760203660031901126101bb5761010f6109b8565b906101186109e9565b6001600160a01b03918216928315610169575050600580546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461020d578060031936011261020d576020916101dc6109b8565b826101e56109d3565b6001600160a01b03928316845260018652922091166000908152908352819020549051908152f35b5080fd5b83346102565760203660031901126102565761022b6109b8565b6102336109e9565b600780546001600160a01b0319166001600160a01b039290921691909117905580f35b80fd5b50346101bb5760603660031901126101bb576102736109b8565b67ffffffffffffffff9160443591602435908484116103b157366023850112156103b157838301359485116103b15736602486860101116103b15760026006541461036e57908693929160026006556102cd828233610d03565b6001600160a01b031691823b1561036a5760a48591876024988a51998a9889978895638f4ffcb160e01b87523390870152828601523060448601526080606486015282608486015201848401378181018301849052601f01601f191681010301925af1801561035e5761034a575b60208260016006555160018152f35b6103548391610a83565b61020d578161033b565b505051903d90823e3d90fd5b8480fd5b855162461bcd60e51b8152602081850152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8680fd5b50503461020d578060031936011261020d576020906103df6103d56109b8565b6024359033610af2565b5160018152f35b5082346102565782600319360112610256576104006109b8565b91836024359233815260016020522060018060a01b03841660005260205283600020549082821061043b576020856103df8585038733610d03565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b83823461020d57602036600319011261020d576104b2906104ab6109e9565b3533610c60565b80f35b5091903461020d578160031936011261020d57805191809380549160019083821c92828516948515610592575b602095868610811461057f5785895290811561055b5750600114610520575b61051c8787610512828c0383610aad565b519182918261096f565b0390f35b9080949750528583205b828410610548575050508261051c9461051292820101943880610501565b805486850188015292860192810161052a565b60ff19168887015250505050151560051b83010192506105128261051c3880610501565b634e487b7160e01b845260228352602484fd5b93607f16936104e2565b50503461020d578160031936011261020d5760055490516001600160a01b039091168152602090f35b83346102565780600319360112610256576105de6109e9565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020d57602036600319011261020d5760209181906001600160a01b0361064b6109b8565b16815280845220549051908152f35b808484346106d65760203660031901126106d6576007546001600160a01b0316610685811515610a41565b803b156106d1576044849284519586938492630c7e663b60e11b84528035908401523360248401525af19081156106c857506106bf575080f35b6104b290610a83565b513d84823e3d90fd5b505050fd5b5050fd5b83823461020d57602036600319011261020d576104b2906106f96109e9565b6007546001600160a01b031690610711821515610a41565b3590610c60565b50503461020d578060031936011261020d576103df60209261076161073b6109b8565b338352600186528483206001600160a01b03821684528652918490205460243590610acf565b9033610d03565b50503461020d578160031936011261020d576020905160128152f35b5082903461020d57606036600319011261020d576107a06109b8565b6107a86109d3565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036107e2575b6020866103df878787610af2565b84821061080b5750918391610800602096956103df95033383610d03565b9193948193506107d4565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461020d578160031936011261020d576020906002549051908152f35b50503461020d578060031936011261020d576020906103df61088d6109b8565b6024359033610d03565b929190503461096b578360031936011261096b57600354600181811c9186908281168015610961575b602095868610821461094e575084885290811561092c57506001146108f1575b61051c8686610512828b0383610aad565b929550600383528583205b828410610919575050508261051c946105129282010194386108e0565b80548685018801529286019281016108fc565b60ff191687860152505050151560051b83010192506105128261051c386108e0565b634e487b7160e01b845260229052602483fd5b93607f16936108c0565b8380fd5b6020808252825181830181905290939260005b8281106109a457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610982565b600435906001600160a01b03821682036109ce57565b600080fd5b602435906001600160a01b03821682036109ce57565b6005546001600160a01b031633036109fd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610a4857565b60405162461bcd60e51b815260206004820152601360248201527210d21053d4ce8811985c9b481b9bdd081cd95d606a1b6044820152606490fd5b67ffffffffffffffff8111610a9757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a9757604052565b91908201809211610adc57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610c0d5716918215610bbc57600082815280602052604081205491808310610b6857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0316908115610cbe577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610ca2600094600254610acf565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b03908116918215610db45716918215610d645760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212207b323411595a79c29d87aef3c7b244d83781c6ba084b77549e59b6ff69839d6064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x325 JUMPI PUSH3 0x14 PUSH3 0x32A JUMP JUMPDEST PUSH3 0x1E PUSH3 0x32A JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 GT PUSH3 0x225 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 SWAP5 DUP6 DUP3 DUP2 SHR SWAP3 AND SWAP5 DUP6 ISZERO PUSH3 0x31A JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP5 LT EQ PUSH3 0x304 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP4 DUP5 DUP2 GT PUSH3 0x2AE JUMPI JUMPDEST POP DUP7 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x247 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x23B JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP6 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP3 SSTORE JUMPDEST DUP6 MLOAD SWAP3 DUP4 GT PUSH3 0x225 JUMPI PUSH1 0x4 SWAP4 DUP5 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x21A JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x205 JUMPI DUP3 DUP2 GT PUSH3 0x1BA JUMPI JUMPDEST POP DUP1 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH3 0x14C JUMPI POP DUP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP4 PUSH3 0x140 JUMPI JUMPDEST POP POP DUP3 DUP6 SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x5 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x6 SSTORE PUSH2 0xE3B SWAP1 DUP2 PUSH3 0x35D DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP2 POP CODESIZE DUP1 PUSH3 0xD5 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP7 DUP6 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH3 0x1A2 JUMPI POP POP DUP5 DUP8 SWAP9 SWAP8 SWAP7 SWAP8 LT PUSH3 0x187 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0xE7 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x178 JUMP JUMPDEST DUP1 DUP10 DUP6 SWAP8 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP4 ADD SWAP1 PUSH3 0x161 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP9 LT PUSH3 0x1FB JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1EE JUMPI POP POP PUSH3 0xBA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1DE JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1D5 JUMP JUMPDEST PUSH1 0x22 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xA8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x79 JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP7 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP11 DUP3 DUP3 LT PUSH3 0x297 JUMPI POP POP DUP5 GT PUSH3 0x27E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0x8B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP8 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x270 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x25D JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP7 LT PUSH3 0x2FA JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2EA JUMPI POP POP PUSH3 0x62 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2DA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2CC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x48 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x225 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH5 0x4348414F53 PUSH1 0xD8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x897 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x718 JUMPI DUP1 PUSH4 0x5F316876 EQ PUSH2 0x6DA JUMPI DUP4 DUP2 PUSH4 0x662C4B3B EQ PUSH2 0x65A JUMPI POP DUP1 PUSH4 0x70A08231 EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BB JUMPI PUSH2 0x10F PUSH2 0x9B8 JUMP JUMPDEST SWAP1 PUSH2 0x118 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x169 JUMPI POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1DC PUSH2 0x9B8 JUMP JUMPDEST DUP3 PUSH2 0x1E5 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x1 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x256 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x256 JUMPI PUSH2 0x22B PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BB JUMPI PUSH2 0x273 PUSH2 0x9B8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP5 DUP5 GT PUSH2 0x3B1 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x3B1 JUMPI DUP4 DUP4 ADD CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3B1 JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP7 ADD ADD GT PUSH2 0x3B1 JUMPI PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x36E JUMPI SWAP1 DUP7 SWAP4 SWAP3 SWAP2 PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x2CD DUP3 DUP3 CALLER PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x36A JUMPI PUSH1 0xA4 DUP6 SWAP2 DUP8 PUSH1 0x24 SWAP9 DUP11 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP6 PUSH4 0x8F4FFCB1 PUSH1 0xE0 SHL DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE DUP3 DUP7 ADD MSTORE ADDRESS PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP7 ADD MSTORE DUP3 PUSH1 0x84 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x35E JUMPI PUSH2 0x34A JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x1 PUSH1 0x6 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x354 DUP4 SWAP2 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x20D JUMPI DUP2 PUSH2 0x33B JUMP JUMPDEST POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3DF PUSH2 0x3D5 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xAF2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x256 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x256 JUMPI PUSH2 0x400 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x43B JUMPI PUSH1 0x20 DUP6 PUSH2 0x3DF DUP6 DUP6 SUB DUP8 CALLER PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x4B2 SWAP1 PUSH2 0x4AB PUSH2 0x9E9 JUMP JUMPDEST CALLDATALOAD CALLER PUSH2 0xC60 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x592 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x57F JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x55B JUMPI POP PUSH1 0x1 EQ PUSH2 0x520 JUMPI JUMPDEST PUSH2 0x51C DUP8 DUP8 PUSH2 0x512 DUP3 DUP13 SUB DUP4 PUSH2 0xAAD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x96F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 DUP1 SWAP5 SWAP8 POP MSTORE DUP6 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x548 JUMPI POP POP POP DUP3 PUSH2 0x51C SWAP5 PUSH2 0x512 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x501 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x512 DUP3 PUSH2 0x51C CODESIZE DUP1 PUSH2 0x501 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x4E2 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x256 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x256 JUMPI PUSH2 0x5DE PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x64B PUSH2 0x9B8 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x6D6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6D6 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x685 DUP2 ISZERO ISZERO PUSH2 0xA41 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x44 DUP5 SWAP3 DUP5 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0xC7E663B PUSH1 0xE1 SHL DUP5 MSTORE DUP1 CALLDATALOAD SWAP1 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x6C8 JUMPI POP PUSH2 0x6BF JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x4B2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x4B2 SWAP1 PUSH2 0x6F9 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x711 DUP3 ISZERO ISZERO PUSH2 0xA41 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xC60 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH2 0x3DF PUSH1 0x20 SWAP3 PUSH2 0x761 PUSH2 0x73B PUSH2 0x9B8 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE DUP7 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xACF JUMP JUMPDEST SWAP1 CALLER PUSH2 0xD03 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x7A0 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x7A8 PUSH2 0x9D3 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x7E2 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x3DF DUP8 DUP8 DUP8 PUSH2 0xAF2 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x80B JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x800 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x3DF SWAP6 SUB CALLER DUP4 PUSH2 0xD03 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3DF PUSH2 0x88D PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xD03 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0x96B JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x96B JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x961 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x94E JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x92C JUMPI POP PUSH1 0x1 EQ PUSH2 0x8F1 JUMPI JUMPDEST PUSH2 0x51C DUP7 DUP7 PUSH2 0x512 DUP3 DUP12 SUB DUP4 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE DUP6 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x919 JUMPI POP POP POP DUP3 PUSH2 0x51C SWAP5 PUSH2 0x512 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x8E0 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x8FC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x512 DUP3 PUSH2 0x51C CODESIZE PUSH2 0x8E0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x8C0 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9A4 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x9CE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x9CE JUMPI JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xA48 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10D21053D4CE8811985C9B481B9BDD081CD95D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA97 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA97 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xADC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xC0D JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0xB68 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xCBE JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0xCA2 PUSH1 0x0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0xACF JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xDB4 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xD64 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x323411595A79C29D87AEF3C7B244D83781C6BA084B77549E59B6FF69 DUP4 SWAP14 PUSH1 0x64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
              "sourceMap": "374:1125:15:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;374:1125:15;;;;;2245:13:16;374:1125:15;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;-1:-1:-1;374:1125:15;;;;-1:-1:-1;;;;374:1125:15;;;;;;;;;;;;;;;;;;;;2268:17:16;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;;2518:6:0;374:1125:15;;734:10:5;-1:-1:-1;;;;;;374:1125:15;;;;;;;;;;;734:10:5;-1:-1:-1;;;;;374:1125:15;2566:40:0;-1:-1:-1;;2566:40:0;1821:22:2;1716:1;374:1125:15;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;-1:-1:-1;374:1125:15;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;-1:-1:-1;374:1125:15;;2268:17:16;374:1125:15;;-1:-1:-1;374:1125:15;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;-1:-1:-1;374:1125:15;;-1:-1:-1;374:1125:15;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:1125:15;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 2488,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_8254": {
                  "entryPoint": 2515,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 2415,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 2767,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2733,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_8256": {
                  "entryPoint": 2691,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_approve": {
                  "entryPoint": 3331,
                  "id": 1834,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 2537,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_mint": {
                  "entryPoint": 3168,
                  "id": 1735,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 2802,
                  "id": 1696,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "require_helper_stringliteral": {
                  "entryPoint": 2625,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461089757508063095ea7b31461086d57806318160ddd1461084e57806323b872dd14610784578063313ce5671461076857806339509351146107185780635f316876146106da57838163662c4b3b1461065a5750806370a0823114610623578063715018a6146105c55780638da5cb5b1461059c57806395d89b41146104b5578063a0712d681461048c578063a457c2d7146103e6578063a9059cbb146103b5578063cae9ca5114610259578063d4f26c5114610211578063dd62ed3e146101bf5763f2fde38b146100f657600080fd5b346101bb5760203660031901126101bb5761010f6109b8565b906101186109e9565b6001600160a01b03918216928315610169575050600580546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461020d578060031936011261020d576020916101dc6109b8565b826101e56109d3565b6001600160a01b03928316845260018652922091166000908152908352819020549051908152f35b5080fd5b83346102565760203660031901126102565761022b6109b8565b6102336109e9565b600780546001600160a01b0319166001600160a01b039290921691909117905580f35b80fd5b50346101bb5760603660031901126101bb576102736109b8565b67ffffffffffffffff9160443591602435908484116103b157366023850112156103b157838301359485116103b15736602486860101116103b15760026006541461036e57908693929160026006556102cd828233610d03565b6001600160a01b031691823b1561036a5760a48591876024988a51998a9889978895638f4ffcb160e01b87523390870152828601523060448601526080606486015282608486015201848401378181018301849052601f01601f191681010301925af1801561035e5761034a575b60208260016006555160018152f35b6103548391610a83565b61020d578161033b565b505051903d90823e3d90fd5b8480fd5b855162461bcd60e51b8152602081850152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8680fd5b50503461020d578060031936011261020d576020906103df6103d56109b8565b6024359033610af2565b5160018152f35b5082346102565782600319360112610256576104006109b8565b91836024359233815260016020522060018060a01b03841660005260205283600020549082821061043b576020856103df8585038733610d03565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b83823461020d57602036600319011261020d576104b2906104ab6109e9565b3533610c60565b80f35b5091903461020d578160031936011261020d57805191809380549160019083821c92828516948515610592575b602095868610811461057f5785895290811561055b5750600114610520575b61051c8787610512828c0383610aad565b519182918261096f565b0390f35b9080949750528583205b828410610548575050508261051c9461051292820101943880610501565b805486850188015292860192810161052a565b60ff19168887015250505050151560051b83010192506105128261051c3880610501565b634e487b7160e01b845260228352602484fd5b93607f16936104e2565b50503461020d578160031936011261020d5760055490516001600160a01b039091168152602090f35b83346102565780600319360112610256576105de6109e9565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461020d57602036600319011261020d5760209181906001600160a01b0361064b6109b8565b16815280845220549051908152f35b808484346106d65760203660031901126106d6576007546001600160a01b0316610685811515610a41565b803b156106d1576044849284519586938492630c7e663b60e11b84528035908401523360248401525af19081156106c857506106bf575080f35b6104b290610a83565b513d84823e3d90fd5b505050fd5b5050fd5b83823461020d57602036600319011261020d576104b2906106f96109e9565b6007546001600160a01b031690610711821515610a41565b3590610c60565b50503461020d578060031936011261020d576103df60209261076161073b6109b8565b338352600186528483206001600160a01b03821684528652918490205460243590610acf565b9033610d03565b50503461020d578160031936011261020d576020905160128152f35b5082903461020d57606036600319011261020d576107a06109b8565b6107a86109d3565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036107e2575b6020866103df878787610af2565b84821061080b5750918391610800602096956103df95033383610d03565b9193948193506107d4565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461020d578160031936011261020d576020906002549051908152f35b50503461020d578060031936011261020d576020906103df61088d6109b8565b6024359033610d03565b929190503461096b578360031936011261096b57600354600181811c9186908281168015610961575b602095868610821461094e575084885290811561092c57506001146108f1575b61051c8686610512828b0383610aad565b929550600383528583205b828410610919575050508261051c946105129282010194386108e0565b80548685018801529286019281016108fc565b60ff191687860152505050151560051b83010192506105128261051c386108e0565b634e487b7160e01b845260229052602483fd5b93607f16936108c0565b8380fd5b6020808252825181830181905290939260005b8281106109a457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610982565b600435906001600160a01b03821682036109ce57565b600080fd5b602435906001600160a01b03821682036109ce57565b6005546001600160a01b031633036109fd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610a4857565b60405162461bcd60e51b815260206004820152601360248201527210d21053d4ce8811985c9b481b9bdd081cd95d606a1b6044820152606490fd5b67ffffffffffffffff8111610a9757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a9757604052565b91908201809211610adc57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03908116918215610c0d5716918215610bbc57600082815280602052604081205491808310610b6857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0316908115610cbe577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082610ca2600094600254610acf565b60025584845283825260408420818154019055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6001600160a01b03908116918215610db45716918215610d645760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea26469706673582212207b323411595a79c29d87aef3c7b244d83781c6ba084b77549e59b6ff69839d6064736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x897 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x718 JUMPI DUP1 PUSH4 0x5F316876 EQ PUSH2 0x6DA JUMPI DUP4 DUP2 PUSH4 0x662C4B3B EQ PUSH2 0x65A JUMPI POP DUP1 PUSH4 0x70A08231 EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BF JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1BB JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BB JUMPI PUSH2 0x10F PUSH2 0x9B8 JUMP JUMPDEST SWAP1 PUSH2 0x118 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x169 JUMPI POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1DC PUSH2 0x9B8 JUMP JUMPDEST DUP3 PUSH2 0x1E5 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP5 MSTORE PUSH1 0x1 DUP7 MSTORE SWAP3 KECCAK256 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x256 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x256 JUMPI PUSH2 0x22B PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1BB JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1BB JUMPI PUSH2 0x273 PUSH2 0x9B8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP5 DUP5 GT PUSH2 0x3B1 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x3B1 JUMPI DUP4 DUP4 ADD CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x3B1 JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP7 ADD ADD GT PUSH2 0x3B1 JUMPI PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x36E JUMPI SWAP1 DUP7 SWAP4 SWAP3 SWAP2 PUSH1 0x2 PUSH1 0x6 SSTORE PUSH2 0x2CD DUP3 DUP3 CALLER PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x36A JUMPI PUSH1 0xA4 DUP6 SWAP2 DUP8 PUSH1 0x24 SWAP9 DUP11 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 DUP9 SWAP6 PUSH4 0x8F4FFCB1 PUSH1 0xE0 SHL DUP8 MSTORE CALLER SWAP1 DUP8 ADD MSTORE DUP3 DUP7 ADD MSTORE ADDRESS PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP7 ADD MSTORE DUP3 PUSH1 0x84 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x35E JUMPI PUSH2 0x34A JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH1 0x1 PUSH1 0x6 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x354 DUP4 SWAP2 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0x20D JUMPI DUP2 PUSH2 0x33B JUMP JUMPDEST POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3DF PUSH2 0x3D5 PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xAF2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x256 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x256 JUMPI PUSH2 0x400 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x43B JUMPI PUSH1 0x20 DUP6 PUSH2 0x3DF DUP6 DUP6 SUB DUP8 CALLER PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x4B2 SWAP1 PUSH2 0x4AB PUSH2 0x9E9 JUMP JUMPDEST CALLDATALOAD CALLER PUSH2 0xC60 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 DUP3 SHR SWAP3 DUP3 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x592 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x57F JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x55B JUMPI POP PUSH1 0x1 EQ PUSH2 0x520 JUMPI JUMPDEST PUSH2 0x51C DUP8 DUP8 PUSH2 0x512 DUP3 DUP13 SUB DUP4 PUSH2 0xAAD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x96F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 DUP1 SWAP5 SWAP8 POP MSTORE DUP6 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x548 JUMPI POP POP POP DUP3 PUSH2 0x51C SWAP5 PUSH2 0x512 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE DUP1 PUSH2 0x501 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x52A JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x512 DUP3 PUSH2 0x51C CODESIZE DUP1 PUSH2 0x501 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 DUP4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x4E2 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x256 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x256 JUMPI PUSH2 0x5DE PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x64B PUSH2 0x9B8 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x6D6 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6D6 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x685 DUP2 ISZERO ISZERO PUSH2 0xA41 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x44 DUP5 SWAP3 DUP5 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0xC7E663B PUSH1 0xE1 SHL DUP5 MSTORE DUP1 CALLDATALOAD SWAP1 DUP5 ADD MSTORE CALLER PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x6C8 JUMPI POP PUSH2 0x6BF JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x4B2 SWAP1 PUSH2 0xA83 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP POP REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x4B2 SWAP1 PUSH2 0x6F9 PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x711 DUP3 ISZERO ISZERO PUSH2 0xA41 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xC60 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH2 0x3DF PUSH1 0x20 SWAP3 PUSH2 0x761 PUSH2 0x73B PUSH2 0x9B8 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP5 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 MSTORE DUP7 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xACF JUMP JUMPDEST SWAP1 CALLER PUSH2 0xD03 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x7A0 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x7A8 PUSH2 0x9D3 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x7E2 JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x3DF DUP8 DUP8 DUP8 PUSH2 0xAF2 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x80B JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x800 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x3DF SWAP6 SUB CALLER DUP4 PUSH2 0xD03 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3DF PUSH2 0x88D PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xD03 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 POP CALLVALUE PUSH2 0x96B JUMPI DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x96B JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 DUP7 SWAP1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x961 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0x94E JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x92C JUMPI POP PUSH1 0x1 EQ PUSH2 0x8F1 JUMPI JUMPDEST PUSH2 0x51C DUP7 DUP7 PUSH2 0x512 DUP3 DUP12 SUB DUP4 PUSH2 0xAAD JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE DUP6 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x919 JUMPI POP POP POP DUP3 PUSH2 0x51C SWAP5 PUSH2 0x512 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x8E0 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x8FC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x512 DUP3 PUSH2 0x51C CODESIZE PUSH2 0x8E0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x8C0 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x9A4 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x9CE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x9CE JUMPI JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9FD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0xA48 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x10D21053D4CE8811985C9B481B9BDD081CD95D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA97 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA97 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xADC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xC0D JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0xB68 JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xCBE JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0xCA2 PUSH1 0x0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0xACF JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0xDB4 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0xD64 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x323411595A79C29D87AEF3C7B244D83781C6BA084B77549E59B6FF69 DUP4 SWAP14 PUSH1 0x64 PUSH20 0x6F6C634300081300330000000000000000000000 ",
              "sourceMap": "374:1125:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;-1:-1:-1;;;;;374:1125:15;;;;2162:22:0;;374:1125:15;;-1:-1:-1;;2518:6:0;374:1125:15;;-1:-1:-1;;;;;;374:1125:15;;;;;;;;2566:40:0;-1:-1:-1;;2566:40:0;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;579:19:15;374:1125;;-1:-1:-1;;;;;;374:1125:15;-1:-1:-1;;;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;2468:7;374:1125:15;2468:19:2;1759:1;;;;;;;;2468:7;1759:1;1297:6:15;1276:10;;;1297:6;:::i;:::-;-1:-1:-1;;;;;374:1125:15;;1384:84;;;;;374:1125;;;;;;;;;;;;;;;;;;1384:84;;1276:10;1384:84;;;374:1125;;;;;1451:4;374:1125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;1384:84;;;;;;;;;;;374:1125;;1759:1:2;374:1125:15;2468:7:2;1759:1;374:1125:15;;;;;1384:84;;;;;:::i;:::-;374:1125;;1384:84;;;;374:1125;;;;;;;;;;;1384:84;374:1125;;;1759:1:2;374:1125:15;;-1:-1:-1;;;1759:1:2;;374:1125:15;1759:1:2;;;;374:1125:15;;1759:1:2;;374:1125:15;1759:1:2;374:1125:15;;;1759:1:2;;;;374:1125:15;;;;;;;;;;;;;;;;;;;;4093:6:16;374:1125:15;;:::i;:::-;;;734:10:5;;4093:6:16;:::i;:::-;374:1125:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;734:10:5;;374:1125:15;;;;;;;;;;;;;;;;;;;;;6991:35:16;;;;374:1125:15;;;;7127:34:16;374:1125:15;;;;734:10:5;7127:34:16;:::i;374:1125:15:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;688:6;1063:62:0;;;:::i;:::-;374:1125:15;676:10;688:6;:::i;:::-;374:1125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;-1:-1:-1;;;;374:1125:15;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:6:0;374:1125:15;;;-1:-1:-1;;;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;374:1125:15;;-1:-1:-1;;;;;;374:1125:15;;;;;;;-1:-1:-1;;;;;374:1125:15;2566:40:0;374:1125:15;;2566:40:0;374:1125:15;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;;;;-1:-1:-1;;;;;374:1125:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;959:5;374:1125;-1:-1:-1;;;;;374:1125:15;943:60;951:28;;;943:60;:::i;:::-;1013:30;;;;;374:1125;;;;;;;;;;;;;1013:30;;374:1125;;1013:30;;;374:1125;1032:10;374:1125;;;;1013:30;;;;;;;;;;374:1125;;;1013:30;;;;:::i;:::-;374:1125;;;;;;;;1013:30;374:1125;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;865:6;1063:62:0;;;:::i;:::-;789:5:15;374:1125;-1:-1:-1;;;;;374:1125:15;;773:60;781:28;;;773:60;:::i;:::-;374:1125;865:6;;:::i;374:1125::-;;;;;;;;;;;;;;6220:38:16;374:1125:15;;6220:38:16;374:1125:15;;:::i;:::-;734:10:5;374:1125:15;;;;;;;;-1:-1:-1;;;;;374:1125:15;;;;;;;;;;;;;;6220:38:16;:::i;:::-;734:10:5;;6220:38:16;:::i;374:1125:15:-;;;;;;;;;;;;;;;;;3385:2:16;374:1125:15;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;734:10:5;374:1125:15;;;;;;11128:17:16;;;11108:37;;11104:243;;374:1125:15;;5623:6:16;;;;;;:::i;11104:243::-;11169:26;;;374:1125:15;;;;;;11296:25:16;374:1125:15;;;5623:6:16;374:1125:15;;734:10:5;11296:25:16;;:::i;:::-;11104:243;;;;;;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3541:12:16;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;4805:6:16;374:1125:15;;:::i;:::-;;;734:10:5;;4805:6:16;:::i;374:1125:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;374:1125:15;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:1125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;374:1125:15;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;374:1125:15;;;;;;:::o;1359:130:0:-;1273:6;374:1125:15;-1:-1:-1;;;;;374:1125:15;734:10:5;1422:23:0;374:1125:15;;1359:130:0:o;374:1125:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7655:691:16;-1:-1:-1;;;;;374:1125:15;;;;7751:18:16;;374:1125:15;;;7829:16:16;;;374:1125:15;;7767:1:16;374:1125:15;;;;;;;;;;7951:21:16;;;;374:1125:15;;;;;8313:26:16;374:1125:15;;;;;;;;;;;;1759:1:2;374:1125:15;;;;;;;;1759:1:2;;374:1125:15;;;;;8313:26:16;7655:691::o;374:1125:15:-;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;8622:416:16;-1:-1:-1;;;;;374:1125:15;;8705:21:16;;374:1125:15;;8994:37:16;374:1125:15;;8773:22:16;8724:1;374:1125:15;8773:22:16;374:1125:15;8773:22:16;:::i;:::-;;1759:1:2;374:1125:15;;;;;;;;;;;;;1759:1:2;;374:1125:15;;;;;8994:37:16;8622:416::o;374:1125:15:-;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;;;;10321:340:16;-1:-1:-1;;;;;374:1125:15;;;;10422:19:16;;374:1125:15;;;10500:21:16;;;374:1125:15;;;10622:32:16;374:1125:15;;10439:1:16;374:1125:15;;;;;10439:1:16;374:1125:15;;10439:1:16;374:1125:15;;;;;10439:1:16;374:1125:15;1759:1:2;374:1125:15;;;;;10622:32:16;10321:340::o;374:1125:15:-;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;374:1125:15;;;;;;"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "approveAndCall(address,uint256,bytes)": "cae9ca51",
              "balanceOf(address)": "70a08231",
              "collectEmissions(uint256)": "662c4b3b",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "increaseAllowance(address,uint256)": "39509351",
              "mint(uint256)": "a0712d68",
              "mintToFarm(uint256)": "5f316876",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setFarm(address)": "d4f26c51",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"collectEmissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"farm\",\"type\":\"address\"}],\"name\":\"setFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/CHAOS.sol\":\"CHAOS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/interfaces/IApproveAndCall.sol\":{\"keccak256\":\"0x7b1b563cd698601946fba28d4d03db0b1cd50b275a9b022e83ec654ebcbca573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://482ad82ef3de4bd0fd26d22a8942c7a4765a0dd3c265c4a7c857e0cb32832639\",\"dweb:/ipfs/QmQRHZx6LkytBJQLB2wujQCEbxBrZQNwgszRxppCTn3iWE\"]},\"contracts/interfaces/IERC20Errors.sol\":{\"keccak256\":\"0x2b4c07b7d7ac6499263762b54a64c57634fa972fb43e771d7b860fe3e7f48d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bb45a5046643999bef18be5534322275ccee437fc40fa649a01f3f18069f18\",\"dweb:/ipfs/QmdxDsVBgyXqForKMta55VDuH4qs6FgwTFVEfWfB1n3qrt\"]},\"contracts/interfaces/IFarm.sol\":{\"keccak256\":\"0x6209569048cb3e3eab83614a0edb5a91e607326130f197c26eee098f6fb47d03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc305f6dfa8698427d8931918466cf55df30e3c9c6618281d4278b142d50647a\",\"dweb:/ipfs/QmNv5nBiANSD3uxUjjQD3TX2rR9VFWQBHPiGJWbCSR97SK\"]},\"contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0x00e090a88037728dcdb4eb2536fafb5889fe49bb5434fbc60f33bdca3eb845cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e82f084652c5468c89123bc3f88e49c11d315bb36ff58c76fb7744ff0d3cc63\",\"dweb:/ipfs/QmddHoagbDm5s9DWz5JpAbbT8Z9DPjCERiPpMrjj3xq8xs\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]},\"contracts/token/CHAOS.sol\":{\"keccak256\":\"0x545b5060684d00036222fde60a46cd58af335eab0f5ce55f5c06c796ee711a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edcb6eacd16b231667320f7d88c68cfe1401cbd97a949eaacaaca5797d5fa409\",\"dweb:/ipfs/Qmdx1KHFYdPCcgCmzb4RncE8jXYDLAYMBxReZKJ97KcPRK\"]},\"contracts/token/ERC20.sol\":{\"keccak256\":\"0xf63e6c0e44751c84a553016638a5ba487cd5368c6cb14bf8f8b1ff6dc70f2d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d787f3d3e9d82a974f1529df0f283362c8489982ea63372c9d4710e91f182b27\",\"dweb:/ipfs/QmUJMND9kb1fbn8mQdhzswKL76HYS5EM4uifKAbZEMS1o4\"]}},\"version\":1}"
        }
      },
      "contracts/token/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name_",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol_",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_string_fromMemory": {
                  "entryPoint": 840,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 802,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346200031d5762000c2a803803806200001d8162000322565b9283398101906040818303126200031d5780516001600160401b03908181116200031d57836200004f91840162000348565b91602093848201518381116200031d576200006b920162000348565b82518281116200021d576003918254916001958684811c9416801562000312575b88851014620002fc578190601f94858111620002a6575b5088908583116001146200023f5760009262000233575b505060001982861b1c191690861b1783555b80519384116200021d5760049586548681811c9116801562000212575b82821014620001fd57838111620001b2575b508092851160011462000144575093839491849260009562000138575b50501b92600019911b1c19161790555b60405161086f9081620003bb8239f35b01519350388062000118565b92919084601f1981168860005285600020956000905b898383106200019757505050106200017c575b50505050811b01905562000128565b01519060f884600019921b161c19169055388080806200016d565b8587015189559097019694850194889350908101906200015a565b87600052816000208480880160051c820192848910620001f3575b0160051c019087905b828110620001e6575050620000fb565b60008155018790620001d6565b92508192620001cd565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e9565b634e487b7160e01b600052604160045260246000fd5b015190503880620000ba565b90889350601f19831691876000528a6000209260005b8c8282106200028f575050841162000276575b505050811b018355620000cc565b015160001983881b60f8161c1916905538808062000268565b8385015186558c9790950194938401930162000255565b90915085600052886000208580850160051c8201928b8610620002f2575b918a91869594930160051c01915b828110620002e2575050620000a3565b600081558594508a9101620002d2565b92508192620002c4565b634e487b7160e01b600052602260045260246000fd5b93607f16936200008c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200021d57604052565b919080601f840112156200031d5782516001600160401b0381116200021d576020906200037e601f8201601f1916830162000322565b928184528282870101116200031d5760005b818110620003a657508260009394955001015290565b85810183015184820184015282016200039056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461049057508163095ea7b31461046657816318160ddd1461044757816323b872dd1461037d578163313ce5671461036157816339509351146102fa57816370a08231146102c357816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba610598565b6100c26105b3565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e557602090610112610108610598565b60243590336105c9565b5160018152f35b905082346101be57826003193601126101be57610134610598565b918360243592338152600160205281812060018060a01b038616825260205220549082821061016d576020856101128585038733610737565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102b9575b60209384841081146102a65783885290811561028a5750600114610252575b505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b92528261054f565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b8385106102765750505050830101858080610209565b805488860183015293019284908201610260565b60ff1916878501525050151560051b8401019050858080610209565b634e487b7160e01b895260228a52602489fd5b91607f16916101ea565b5050346100e55760203660031901126100e55760209181906001600160a01b036102eb610598565b16815280845220549051908152f35b8284346101be57816003193601126101be57610314610598565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061034e57602084610112858533610737565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e557610399610598565b6103a16105b3565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036103db575b6020866101128787876105c9565b84821061040457509183916103f96020969561011295033383610737565b9193948193506103cd565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e557602090610112610486610598565b6024359033610737565b8490843461054b578260031936011261054b5782600354600181811c90808316928315610541575b60209384841081146102a65783885290811561028a575060011461050857505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b92528261054f565b91925060038652828620918387935b83851061052d5750505050830101858080610209565b805488860183015293019284908201610517565b91607f16916104b8565b8280fd5b6020808252825181830181905290939260005b82811061058457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610562565b600435906001600160a01b03821682036105ae57565b600080fd5b602435906001600160a01b03821682036105ae57565b6001600160a01b039081169182156106e457169182156106935760008281528060205260408120549180831061063f57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156107e857169182156107985760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220f4124d86dcb3abdca1c4d8ea6bd53ecf64823ff90c1e1606c9651672d03ce12264736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x31D JUMPI PUSH3 0xC2A DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x31D JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x31D JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x348 JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x31D JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x348 JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x3 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x312 JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x2FC JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2A6 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x23F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x233 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x21D JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x212 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1FD JUMPI DUP4 DUP2 GT PUSH3 0x1B2 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x144 JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x138 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86F SWAP1 DUP2 PUSH3 0x3BB DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x118 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x197 JUMPI POP POP POP LT PUSH3 0x17C JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x128 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x16D JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x15A JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x1F3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1E6 JUMPI POP POP PUSH3 0xFB JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1D6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xBA JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x28F JUMPI POP POP DUP5 GT PUSH3 0x276 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x268 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x255 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x2F2 JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2E2 JUMPI POP POP PUSH3 0xA3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2D2 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2C4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x8C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x21D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x31D JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x21D JUMPI PUSH1 0x20 SWAP1 PUSH3 0x37E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x322 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x31D JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x3A6 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x390 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x490 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x466 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x447 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x37D JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x361 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x2FA JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2C3 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x598 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x5C9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x598 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x737 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2A6 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x28A JUMPI POP PUSH1 0x1 EQ PUSH2 0x252 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x54F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 POP DUP7 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x276 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x260 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EA JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2EB PUSH2 0x598 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x314 PUSH2 0x598 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x34E JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x737 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x399 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x3DB JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x5C9 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x404 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x3F9 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x737 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x486 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x737 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x54B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x54B JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x541 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2A6 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x28A JUMPI POP PUSH1 0x1 EQ PUSH2 0x508 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x54F JUMP JUMPDEST SWAP2 SWAP3 POP PUSH1 0x3 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x52D JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x517 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4B8 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x584 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x562 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5AE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5AE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x6E4 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x63F JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x7E8 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x798 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SLT 0x4D DUP7 0xDC 0xB3 0xAB 0xDC LOG1 0xC4 0xD8 0xEA PUSH12 0xD53ECF64823FF90C1E1606C9 PUSH6 0x1672D03CE122 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "1731:9624:16:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:9624:16;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2245:13;1731:9624;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;-1:-1:-1;;;;1731:9624:16;;;;;;;;;;;;;;;;;;;;2268:17;1731:9624;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;-1:-1:-1;1731:9624:16;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;-1:-1:-1;1731:9624:16;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;2268:17;1731:9624;;-1:-1:-1;1731:9624:16;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;-1:-1:-1;1731:9624:16;;-1:-1:-1;1731:9624:16;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;-1:-1:-1;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;-1:-1:-1;;1731:9624:16;;;-1:-1:-1;;;;;1731:9624:16;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1731:9624:16;;;;;;;;;;-1:-1:-1;;1731:9624:16;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1432,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_4776": {
                  "entryPoint": 1459,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1359,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_approve": {
                  "entryPoint": 1847,
                  "id": 1834,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 1481,
                  "id": 1696,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461049057508163095ea7b31461046657816318160ddd1461044757816323b872dd1461037d578163313ce5671461036157816339509351146102fa57816370a08231146102c357816395d89b41146101c1578163a457c2d71461011957508063a9059cbb146100e95763dd62ed3e1461009e57600080fd5b346100e557806003193601126100e557806020926100ba610598565b6100c26105b3565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100e557806003193601126100e557602090610112610108610598565b60243590336105c9565b5160018152f35b905082346101be57826003193601126101be57610134610598565b918360243592338152600160205281812060018060a01b038616825260205220549082821061016d576020856101128585038733610737565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b8383346100e557816003193601126100e557805190828454600181811c908083169283156102b9575b60209384841081146102a65783885290811561028a5750600114610252575b505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b92528261054f565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b8385106102765750505050830101858080610209565b805488860183015293019284908201610260565b60ff1916878501525050151560051b8401019050858080610209565b634e487b7160e01b895260228a52602489fd5b91607f16916101ea565b5050346100e55760203660031901126100e55760209181906001600160a01b036102eb610598565b16815280845220549051908152f35b8284346101be57816003193601126101be57610314610598565b338252600160209081528383206001600160a01b038316845290528282205460243581019290831061034e57602084610112858533610737565b634e487b7160e01b815260118552602490fd5b5050346100e557816003193601126100e5576020905160128152f35b839150346100e55760603660031901126100e557610399610598565b6103a16105b3565b91846044359460018060a01b0384168152600160205281812033825260205220549060001982036103db575b6020866101128787876105c9565b84821061040457509183916103f96020969561011295033383610737565b9193948193506103cd565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5050346100e557816003193601126100e5576020906002549051908152f35b5050346100e557806003193601126100e557602090610112610486610598565b6024359033610737565b8490843461054b578260031936011261054b5782600354600181811c90808316928315610541575b60209384841081146102a65783885290811561028a575060011461050857505050829003601f01601f191682019267ffffffffffffffff84118385101761023f575082918261023b92528261054f565b91925060038652828620918387935b83851061052d5750505050830101858080610209565b805488860183015293019284908201610517565b91607f16916104b8565b8280fd5b6020808252825181830181905290939260005b82811061058457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610562565b600435906001600160a01b03821682036105ae57565b600080fd5b602435906001600160a01b03821682036105ae57565b6001600160a01b039081169182156106e457169182156106935760008281528060205260408120549180831061063f57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b039081169182156107e857169182156107985760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fdfea2646970667358221220f4124d86dcb3abdca1c4d8ea6bd53ecf64823ff90c1e1606c9651672d03ce12264736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x490 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x466 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x447 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x37D JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x361 JUMPI DUP2 PUSH4 0x39509351 EQ PUSH2 0x2FA JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x2C3 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x1C1 JUMPI DUP2 PUSH4 0xA457C2D7 EQ PUSH2 0x119 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE9 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xBA PUSH2 0x598 JUMP JUMPDEST PUSH2 0xC2 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x108 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x5C9 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x1BE JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x134 PUSH2 0x598 JUMP JUMPDEST SWAP2 DUP4 PUSH1 0x24 CALLDATALOAD SWAP3 CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x16D JUMPI PUSH1 0x20 DUP6 PUSH2 0x112 DUP6 DUP6 SUB DUP8 CALLER PUSH2 0x737 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2A6 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x28A JUMPI POP PUSH1 0x1 EQ PUSH2 0x252 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x54F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 POP DUP7 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x276 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x260 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EA JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2EB PUSH2 0x598 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x1BE JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1BE JUMPI PUSH2 0x314 PUSH2 0x598 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP5 MSTORE SWAP1 MSTORE DUP3 DUP3 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 ADD SWAP3 SWAP1 DUP4 LT PUSH2 0x34E JUMPI PUSH1 0x20 DUP5 PUSH2 0x112 DUP6 DUP6 CALLER PUSH2 0x737 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0xE5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE5 JUMPI PUSH2 0x399 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x5B3 JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 SUB PUSH2 0x3DB JUMPI JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x112 DUP8 DUP8 DUP8 PUSH2 0x5C9 JUMP JUMPDEST DUP5 DUP3 LT PUSH2 0x404 JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x3F9 PUSH1 0x20 SWAP7 SWAP6 PUSH2 0x112 SWAP6 SUB CALLER DUP4 PUSH2 0x737 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 DUP2 SWAP4 POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xE5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xE5 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x112 PUSH2 0x486 PUSH2 0x598 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x737 JUMP JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x54B JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x54B JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x541 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x2A6 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x28A JUMPI POP PUSH1 0x1 EQ PUSH2 0x508 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x23F JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x23B SWAP3 MSTORE DUP3 PUSH2 0x54F JUMP JUMPDEST SWAP2 SWAP3 POP PUSH1 0x3 DUP7 MSTORE DUP3 DUP7 KECCAK256 SWAP2 DUP4 DUP8 SWAP4 JUMPDEST DUP4 DUP6 LT PUSH2 0x52D JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x209 JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x517 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4B8 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x584 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x562 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5AE JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x5AE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x6E4 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x63F JUMPI PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x7E8 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x798 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SLT 0x4D DUP7 0xDC 0xB3 0xAB 0xDC LOG1 0xC4 0xD8 0xEA PUSH12 0xD53ECF64823FF90C1E1606C9 PUSH6 0x1672D03CE122 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "1731:9624:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4093:6;1731:9624;;:::i;:::-;;;734:10:5;;4093:6:16;:::i;:::-;1731:9624;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;734:10:5;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;6991:35;;;;1731:9624;;;;7127:34;1731:9624;;;;734:10:5;7127:34:16;:::i;1731:9624::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;-1:-1:-1;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:9624:16;;;;;-1:-1:-1;;1731:9624:16;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:9624:16;;;;;;;;-1:-1:-1;;;;;1731:9624:16;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;734:10:5;1731:9624:16;;;;;;;;;;-1:-1:-1;;;;;1731:9624:16;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;734:10:5;6220:38:16;734:10:5;;;6220:38:16;:::i;1731:9624::-;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;3385:2;1731:9624;;;;;;;;;;;;-1:-1:-1;;1731:9624:16;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;734:10:5;1731:9624:16;;;;;;11128:17;;;11108:37;;11104:243;;1731:9624;;5623:6;;;;;;:::i;11104:243::-;11169:26;;;1731:9624;;;;;;11296:25;1731:9624;;;5623:6;1731:9624;;734:10:5;11296:25:16;;:::i;:::-;11104:243;;;;;;;;1731:9624;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3541:12;1731:9624;;;;;;;;;;;;;;;;;;;;;;;4805:6;1731:9624;;:::i;:::-;;;734:10:5;;4805:6:16;:::i;1731:9624::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;-1:-1:-1;;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:9624:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:9624:16;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;1731:9624:16;;;;;;:::o;7655:691::-;-1:-1:-1;;;;;1731:9624:16;;;;7751:18;;1731:9624;;;7829:16;;;1731:9624;;7767:1;1731:9624;;;;;;;;;;7951:21;;;;1731:9624;;;;;8313:26;1731:9624;;;;;;;;;;;;;;;;;;;;;;;;;;;;8313:26;7655:691::o;1731:9624::-;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;10321:340;-1:-1:-1;;;;;1731:9624:16;;;;10422:19;;1731:9624;;;10500:21;;;1731:9624;;;10622:32;1731:9624;;10439:1;1731:9624;;;;;10439:1;1731:9624;;10439:1;1731:9624;;;;;10439:1;1731:9624;;;;;;;10622:32;10321:340::o;1731:9624::-;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:9624:16;;;;;;"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "increaseAllowance(address,uint256)": "39509351",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/interfaces/IERC20Errors.sol\":{\"keccak256\":\"0x2b4c07b7d7ac6499263762b54a64c57634fa972fb43e771d7b860fe3e7f48d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bb45a5046643999bef18be5534322275ccee437fc40fa649a01f3f18069f18\",\"dweb:/ipfs/QmdxDsVBgyXqForKMta55VDuH4qs6FgwTFVEfWfB1n3qrt\"]},\"contracts/token/ERC20.sol\":{\"keccak256\":\"0xf63e6c0e44751c84a553016638a5ba487cd5368c6cb14bf8f8b1ff6dc70f2d76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d787f3d3e9d82a974f1529df0f283362c8489982ea63372c9d4710e91f182b27\",\"dweb:/ipfs/QmUJMND9kb1fbn8mQdhzswKL76HYS5EM4uifKAbZEMS1o4\"]}},\"version\":1}"
        }
      }
    }
  }
}