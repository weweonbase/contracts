{
  "id": "138c4578958e7c48d97f5af4006276db",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.19",
  "solcLongVersion": "0.8.19+commit.7dd6d404",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
      },
      "contracts/core/adaptors/IUniswapV3.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface IUniswapV3 {\n    function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address pool);\n}\n\ninterface ISwapRouter {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    function exactInputSingle(ExactInputSingleParams calldata params) external returns (uint256 amountOut);\n}\n"
      },
      "contracts/core/adaptors/UniswapV3ViaRouter.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\nimport {IAMM} from \"../../interfaces/IAMM.sol\";\nimport {IUniswapV3} from \"../../core/adaptors/IUniswapV3.sol\";\nimport {ISwapRouter} from \"../../core/adaptors/IUniswapV3.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract UniswapV3ViaRouter is IAMM, Ownable {\n    // Router https://docs.uniswap.org/contracts/v3/reference/deployments/base-deployments\n    address private constant router = 0x2626664c2603336E57B271c5C0b26F421741e481;\n    address private constant wewe = 0x6b9bb36519538e0C073894E964E90172E1c0B41F;\n\n    uint24 public fee;\n\n    constructor() Ownable() {\n        fee = 10000;\n    }\n\n    function setFee(uint24 _fee) external onlyOwner {\n        // Only allow these https://docs.uniswap.org/sdk/v3/reference/enums/FeeAmount\n        if (_fee != 100 && _fee != 500 && _fee != 3000 && _fee != 10000) {\n            revert(\"Uniswapv3: Invalid fee\");\n        }\n\n        fee = _fee;\n    }\n\n    function swap(\n        uint256 amount,\n        address token,\n        address recipient,\n        bytes calldata extraData\n    ) external returns (uint256) {\n        uint256 amountOut = _swap(token, recipient, msg.sender, amount, 0);\n\n        emit Swapped(amount, amountOut, token, recipient);\n        return amountOut;\n    }\n\n    function _swap(\n        address tokenIn,\n        address from,\n        address recipient,\n        uint256 amountIn,\n        uint256 amountOutMinimum\n    ) private returns (uint256 amountOut) {\n        ISwapRouter swapRouter = ISwapRouter(0x2626664c2603336E57B271c5C0b26F421741e481);\n\n        // Transfer the specified amount of TOKEN to this contract.\n        TransferHelper.safeTransferFrom(tokenIn, from, address(this), amountIn);\n\n        // Approve the router to spend TOKEN.\n        TransferHelper.safeApprove(tokenIn, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n            tokenIn: tokenIn,\n            tokenOut: wewe,\n            fee: fee,\n            recipient: recipient, // send back to the caller, this could be the merge contract\n            amountIn: amountIn,\n            amountOutMinimum: amountOutMinimum,\n            sqrtPriceLimitX96: 0\n        });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n}\n"
      },
      "contracts/core/merge/Eater.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.19;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../../interfaces/IWeweReceiver.sol\";\n\nabstract contract Eater is IWeweReceiver, ReentrancyGuard, Pausable, Ownable {\n    uint256 internal _rate;\n    address internal _token;\n    address public wewe;\n\n    function _setRate(uint256 rate) internal {\n        require(rate > 0, \"Eater: Rate must be greater than 0\");\n\n        if (_rate != rate) {\n            _rate = rate;\n            emit RateChanged(rate);\n        }\n    }\n\n    function _merge(uint256 amount, address token, address from) internal whenNotPaused {\n        uint256 weweToTransfer = (amount * _rate) / 100;\n        require(\n            weweToTransfer <= IERC20(wewe).balanceOf(address(this)),\n            \"Eater: Insufficient token balance to transfer\"\n        );\n\n        IERC20(token).transferFrom(from, address(this), amount);\n        IERC20(wewe).transfer(from, weweToTransfer);\n\n        emit Merged(amount, from);\n    }\n\n    function sweep() external onlyOwner {\n        uint256 balance = IERC20(wewe).balanceOf(address(this));\n        require(balance > 0, \"Eater: No balance to sweep\");\n        IERC20(wewe).transfer(owner(), balance);\n    }\n\n    /// @notice Wewe token approveAndCall function\n    function receiveApproval(\n        address from,\n        uint256 amount,\n        address,\n        bytes calldata\n    ) external nonReentrant whenNotPaused {\n        // After wewe approve and call, it will call this function\n        require(_token != address(0), \"GenericEater: Token address not set\");\n\n        // Eat the underlying token \"_token\" with the amount of \"amount\"\n        _merge(amount, _token, from);\n    }\n\n    function togglePause() external onlyOwner {\n        if (paused()) {\n            _unpause();\n        } else {\n            _pause();\n        }\n    }\n\n    function _deposit(uint256 amount) internal {\n        IERC20(wewe).transferFrom(msg.sender, address(this), amount);\n    }\n\n    event Merged(uint256 amount, address indexed account);\n    event RateChanged(uint256 newRate);\n}\n"
      },
      "contracts/core/merge/GenericMerge.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IMergeV2.sol\";\nimport {Eater} from \"./Eater.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract GenericMerge is Eater, IMergeV2 {\n    function getToken() external view returns (address) {\n        return _token;\n    }\n\n    constructor(address _wewe, address token) {\n        _rate = 100;\n        wewe = _wewe;\n        _token = token;\n    }\n\n    function getRate() external view returns (uint256) {\n        return _rate;\n    }\n\n    function setRate(uint256 rate) external onlyOwner {\n        _setRate(rate);\n    }\n\n    function mergeAll() external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        _merge(balance, _token, msg.sender);\n    }\n\n    function merge(uint256 amount) external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"GenericMerge: Insufficient balance to eat\");\n\n        _merge(amount, _token, msg.sender);\n    }\n\n    // @notice Fund this contract with wewe token\n    function deposit(uint256 amount) external onlyOwner {\n        _deposit(amount);\n    }\n}\n"
      },
      "contracts/core/merge/MergeWithMarket.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"../../interfaces/IAMM.sol\";\nimport {GenericMerge} from \"./GenericMerge.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract MergeWithMarket is GenericMerge {\n    constructor(address _wewe, address token) GenericMerge(_wewe, token) {}\n\n    function mergeAndSell(uint256 amount, IAMM amm, bytes calldata extraData) external {\n        uint256 balance = IERC20(_token).balanceOf(msg.sender);\n        require(balance >= amount, \"MergeWithMarket: Insufficient balance to eat\");\n\n        // Send the token to this contract to merge\n        _merge(amount, _token, msg.sender);\n\n        // Transfer from this contract to the AMM\n        // IERC20(_token).transfer(address(amm), amount);\n        IERC20(_token).approve(address(amm), amount);\n\n        // Sell the tokens, can fund the contract with the token\n        amm.swap(amount, _token, address(this), extraData);\n    }\n}\n"
      },
      "contracts/interfaces/IAMM.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.19;\n\ninterface IAMM {\n    function swap(\n        uint256 amount,\n        address token,\n        address recipient,\n        bytes calldata extraData\n    ) external returns (uint256);\n\n    event Swapped(uint256 amount, uint256 amountOut, address token, address indexed recipient);\n}\n"
      },
      "contracts/interfaces/IMergeV2.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IMergeV2 {\n    function deposit(uint256 amount) external;\n    function getRate() external view returns (uint256);\n    function setRate(uint256 rate) external;\n    function getToken() external view returns (address);\n    function merge(uint256 amount) external;\n    function mergeAll() external;\n}\n"
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ninterface IWeweReceiver {\n    function receiveApproval(address from, uint256 amount, address token, bytes calldata extraData) external;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "viaIR": true,
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/core/adaptors/UniswapV3ViaRouter.sol:35:9:\n   |\n35 |         bytes calldata extraData\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 1250,
          "file": "contracts/core/adaptors/UniswapV3ViaRouter.sol",
          "start": 1226
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "Ownable": [
              112
            ]
          },
          "id": 113,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 113,
              "sourceUnit": 419,
              "src": "127:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nameLocations": [
                      "683:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "683:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "683:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "159:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 112,
              "linearizedBaseContracts": [
                112,
                418
              ],
              "name": "Ownable",
              "nameLocation": "672:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "713:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "697:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "732:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "769:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "753:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "800:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "784:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "752:57:0"
                  },
                  "src": "726:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "926:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "955:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "955:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "936:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "936:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "816:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "926:0:0"
                  },
                  "scope": 112,
                  "src": "912:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 30,
                    "nodeType": "Block",
                    "src": "1084:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1094:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1094:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:13:0"
                      },
                      {
                        "id": 29,
                        "nodeType": "PlaceholderStatement",
                        "src": "1117:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "981:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 31,
                  "name": "onlyOwner",
                  "nameLocation": "1072:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1081:2:0"
                  },
                  "src": "1063:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "1256:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 37,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1273:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 36,
                        "id": 38,
                        "nodeType": "Return",
                        "src": "1266:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 40,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1210:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1215:2:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "1247:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1246:9:0"
                  },
                  "scope": 112,
                  "src": "1201:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1404:85:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 45,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "1422:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1422:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 47,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "1433:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1433:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1422:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1447:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 44,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1414:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1414:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:68:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "1292:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1368:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1379:2:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1404:0:0"
                  },
                  "scope": 112,
                  "src": "1359:130:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "1878:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 63,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1915:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 62,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1907:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 61,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1907:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1907:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 60,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "1888:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1888:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66,
                        "nodeType": "ExpressionStatement",
                        "src": "1888:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1495:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 68,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 58,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 57,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1868:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1868:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1868:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1833:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1850:2:0"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1878:0:0"
                  },
                  "scope": 112,
                  "src": "1824:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 90,
                    "nodeType": "Block",
                    "src": "2144:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "2162:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 80,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2182:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2174:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 78,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2174:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2174:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2162:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2186:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 76,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2154:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "2154:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2256:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2237:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2237:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89,
                        "nodeType": "ExpressionStatement",
                        "src": "2237:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 69,
                    "nodeType": "StructuredDocumentation",
                    "src": "1931:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 91,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 74,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 73,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2134:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "2134:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2134:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2083:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2109:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 91,
                        "src": "2101:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2101:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2100:18:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2144:0:0"
                  },
                  "scope": 112,
                  "src": "2074:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 110,
                    "nodeType": "Block",
                    "src": "2489:124:0",
                    "statements": [
                      {
                        "assignments": [
                          98
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 98,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2507:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 110,
                            "src": "2499:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 97,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2499:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "id": 99,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2518:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2499:25:0"
                      },
                      {
                        "expression": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 101,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2534:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 102,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2543:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2534:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 104,
                        "nodeType": "ExpressionStatement",
                        "src": "2534:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 106,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "2587:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 107,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2597:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 105,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2566:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2566:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 109,
                        "nodeType": "EmitStatement",
                        "src": "2561:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 92,
                    "nodeType": "StructuredDocumentation",
                    "src": "2278:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 111,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2435:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2462:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "2454:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2454:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2453:18:0"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:0:0"
                  },
                  "scope": 112,
                  "src": "2426:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 113,
              "src": "654:1961:0",
              "usedErrors": []
            }
          ],
          "src": "102:2514:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              418
            ],
            "Pausable": [
              220
            ]
          },
          "id": 221,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 114,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 115,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 221,
              "sourceUnit": 419,
              "src": "130:30:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 117,
                    "name": "Context",
                    "nameLocations": [
                      "632:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 418,
                    "src": "632:7:1"
                  },
                  "id": 118,
                  "nodeType": "InheritanceSpecifier",
                  "src": "632:7:1"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 116,
                "nodeType": "StructuredDocumentation",
                "src": "162:439:1",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 220,
              "linearizedBaseContracts": [
                220,
                418
              ],
              "name": "Pausable",
              "nameLocation": "620:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "646:73:1",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 123,
                  "name": "Paused",
                  "nameLocation": "730:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "745:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "737:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "737:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "736:17:1"
                  },
                  "src": "724:30:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "760:70:1",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 128,
                  "name": "Unpaused",
                  "nameLocation": "841:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "858:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "850:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "850:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:17:1"
                  },
                  "src": "835:32:1"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "886:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "873:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 138,
                    "nodeType": "Block",
                    "src": "986:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 134,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "996:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1006:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "996:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 137,
                        "nodeType": "ExpressionStatement",
                        "src": "996:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 131,
                    "nodeType": "StructuredDocumentation",
                    "src": "900:67:1",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 139,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "983:2:1"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:0:1"
                  },
                  "scope": 220,
                  "src": "972:46:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1229:47:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 142,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1239:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:19:1"
                      },
                      {
                        "id": 145,
                        "nodeType": "PlaceholderStatement",
                        "src": "1268:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 140,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:175:1",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 147,
                  "name": "whenNotPaused",
                  "nameLocation": "1213:13:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1226:2:1"
                  },
                  "src": "1204:72:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 154,
                    "nodeType": "Block",
                    "src": "1476:44:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 150,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "1486:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1486:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "1486:16:1"
                      },
                      {
                        "id": 153,
                        "nodeType": "PlaceholderStatement",
                        "src": "1512:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "1282:167:1",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 155,
                  "name": "whenPaused",
                  "nameLocation": "1463:10:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1473:2:1"
                  },
                  "src": "1454:66:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "1668:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 161,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130,
                          "src": "1685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 160,
                        "id": 162,
                        "nodeType": "Return",
                        "src": "1678:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 156,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:84:1",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1624:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1630:2:1"
                  },
                  "returnParameters": {
                    "id": 160,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "1662:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1662:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1661:6:1"
                  },
                  "scope": 220,
                  "src": "1615:84:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "1818:55:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1836:9:1",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 169,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "1837:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1837:8:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a20706175736564",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1847:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              },
                              "value": "Pausable: paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                                "typeString": "literal_string \"Pausable: paused\""
                              }
                            ],
                            "id": 168,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1828:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "1828:38:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "1705:57:1",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1776:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1818:0:1"
                  },
                  "scope": 220,
                  "src": "1767:106:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "1993:58:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 181,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 164,
                                "src": "2011:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2011:8:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5061757361626c653a206e6f7420706175736564",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2021:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              },
                              "value": "Pausable: not paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                                "typeString": "literal_string \"Pausable: not paused\""
                              }
                            ],
                            "id": 180,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2003:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2003:41:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "2003:41:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 177,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:61:1",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 187,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "1954:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1968:2:1"
                  },
                  "returnParameters": {
                    "id": 179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1993:0:1"
                  },
                  "scope": 220,
                  "src": "1945:106:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "2235:66:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 193,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2245:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2255:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2245:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 196,
                        "nodeType": "ExpressionStatement",
                        "src": "2245:14:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 198,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2281:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2281:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 197,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "EmitStatement",
                        "src": "2269:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 188,
                    "nodeType": "StructuredDocumentation",
                    "src": "2057:124:1",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 191,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 190,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2221:13:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "2221:13:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2221:13:1"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2195:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2201:2:1"
                  },
                  "returnParameters": {
                    "id": 192,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2235:0:1"
                  },
                  "scope": 220,
                  "src": "2186:115:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "2481:69:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 209,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2491:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2501:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2491:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 212,
                        "nodeType": "ExpressionStatement",
                        "src": "2491:15:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 214,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2530:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2530:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 213,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "2521:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2521:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 217,
                        "nodeType": "EmitStatement",
                        "src": "2516:27:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "2307:121:1",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 207,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 206,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2470:10:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 155,
                        "src": "2470:10:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2470:10:1"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2442:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2450:2:1"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:0:1"
                  },
                  "scope": 220,
                  "src": "2433:117:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 221,
              "src": "602:1950:1",
              "usedErrors": []
            }
          ],
          "src": "105:2448:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              285
            ]
          },
          "id": 286,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 222,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 223,
                "nodeType": "StructuredDocumentation",
                "src": "137:750:2",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 285,
              "linearizedBaseContracts": [
                285
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "906:15:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 226,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1701:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1676:41:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 229,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1748:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1723:37:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1783:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "1767:23:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 238,
                    "nodeType": "Block",
                    "src": "1811:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 234,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "1821:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 235,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "1831:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1821:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 237,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:22:2"
                      }
                    ]
                  },
                  "id": 239,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1808:2:2"
                  },
                  "returnParameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1811:0:2"
                  },
                  "scope": 285,
                  "src": "1797:53:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 249,
                    "nodeType": "Block",
                    "src": "2251:79:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 242,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "2261:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:21:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:21:2"
                      },
                      {
                        "id": 245,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:2"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 246,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "2303:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2303:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 248,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:20:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 240,
                    "nodeType": "StructuredDocumentation",
                    "src": "1856:366:2",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 250,
                  "name": "nonReentrant",
                  "nameLocation": "2236:12:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2248:2:2"
                  },
                  "src": "2227:103:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 264,
                    "nodeType": "Block",
                    "src": "2375:248:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 254,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 231,
                                "src": "2468:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 255,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "2479:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2468:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2489:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 253,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2460:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:63:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:63:2"
                      },
                      {
                        "expression": {
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 260,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2598:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 261,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2608:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2598:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 263,
                        "nodeType": "ExpressionStatement",
                        "src": "2598:18:2"
                      }
                    ]
                  },
                  "id": 265,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2345:19:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2364:2:2"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:2"
                  },
                  "scope": 285,
                  "src": "2336:287:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "2667:171:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 268,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2809:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 269,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "2819:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2809:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "2809:22:2"
                      }
                    ]
                  },
                  "id": 273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2638:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2656:2:2"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2667:0:2"
                  },
                  "scope": 285,
                  "src": "2629:209:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3081:43:2",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 279,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "3098:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 280,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3109:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3098:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 278,
                        "id": 282,
                        "nodeType": "Return",
                        "src": "3091:26:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "2844:168:2",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 284,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3026:23:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3049:2:2"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "3075:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 276,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3075:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3074:6:2"
                  },
                  "scope": 285,
                  "src": "3017:107:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 286,
              "src": "888:2238:2",
              "usedErrors": []
            }
          ],
          "src": "112:3015:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ]
          },
          "id": 364,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 287,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 288,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:3",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 363,
              "linearizedBaseContracts": [
                363
              ],
              "name": "IERC20",
              "nameLocation": "212:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 289,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 297,
                  "name": "Transfer",
                  "nameLocation": "394:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "403:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 293,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "425:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "445:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:3"
                  },
                  "src": "388:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 298,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 306,
                  "name": "Approval",
                  "nameLocation": "625:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 300,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "634:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 299,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 302,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "657:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 304,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 306,
                        "src": "682:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:3"
                  },
                  "src": "619:78:3"
                },
                {
                  "documentation": {
                    "id": 307,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:3",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 312,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:3"
                  },
                  "returnParameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 312,
                        "src": "820:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:3"
                  },
                  "scope": 363,
                  "src": "774:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:3",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 320,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 315,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "931:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:3"
                  },
                  "returnParameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "971:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:3"
                  },
                  "scope": 363,
                  "src": "912:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 321,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:3",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 330,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1211:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1223:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:3"
                  },
                  "returnParameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 330,
                        "src": "1257:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:3"
                  },
                  "scope": 363,
                  "src": "1193:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 331,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 340,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 333,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1557:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1572:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:3"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:3"
                  },
                  "scope": 363,
                  "src": "1538:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:3",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2291:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2308:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:3"
                  },
                  "returnParameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 350,
                        "src": "2342:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:3"
                  },
                  "scope": 363,
                  "src": "2274:74:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 351,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:3",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 362,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2676:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2668:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2668:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 355,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2690:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2682:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2702:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2694:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2694:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:42:3"
                  },
                  "returnParameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 362,
                        "src": "2728:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2727:6:3"
                  },
                  "scope": 363,
                  "src": "2646:88:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 364,
              "src": "202:2534:3",
              "usedErrors": []
            }
          ],
          "src": "106:2631:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ]
          },
          "id": 389,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 366,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 389,
              "sourceUnit": 364,
              "src": "135:23:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 368,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "305:6:4"
                  },
                  "id": 369,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 367,
                "nodeType": "StructuredDocumentation",
                "src": "160:116:4",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
              },
              "fullyImplemented": false,
              "id": 388,
              "linearizedBaseContracts": [
                388,
                363
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:4"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 375,
                        "src": "416:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:4"
                  },
                  "scope": 388,
                  "src": "377:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 376,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 381,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:4"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "539:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:4"
                  },
                  "scope": 388,
                  "src": "498:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 387,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:4"
                  },
                  "returnParameters": {
                    "id": 386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "673:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:4"
                  },
                  "scope": 388,
                  "src": "630:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 389,
              "src": "277:405:4",
              "usedErrors": []
            }
          ],
          "src": "110:573:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              418
            ]
          },
          "id": 419,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 390,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:23:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 391,
                "nodeType": "StructuredDocumentation",
                "src": "126:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 418,
              "linearizedBaseContracts": [
                418
              ],
              "name": "Context",
              "nameLocation": "641:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 399,
                    "nodeType": "Block",
                    "src": "717:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "734:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "738:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "734:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 395,
                        "id": 398,
                        "nodeType": "Return",
                        "src": "727:17:5"
                      }
                    ]
                  },
                  "id": 400,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "664:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "674:2:5"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "708:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "707:9:5"
                  },
                  "scope": 418,
                  "src": "655:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "824:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 405,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "841:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "845:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "841:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 404,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "834:15:5"
                      }
                    ]
                  },
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "766:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "774:2:5"
                  },
                  "returnParameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "808:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:16:5"
                  },
                  "scope": 418,
                  "src": "757:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "934:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "951:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 413,
                        "id": 415,
                        "nodeType": "Return",
                        "src": "944:8:5"
                      }
                    ]
                  },
                  "id": 417,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "871:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "891:2:5"
                  },
                  "returnParameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 417,
                        "src": "925:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "924:9:5"
                  },
                  "scope": 418,
                  "src": "862:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 419,
              "src": "623:338:5",
              "usedErrors": []
            }
          ],
          "src": "101:861:5"
        },
        "id": 5
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "ast": {
          "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "exportedSymbols": {
            "IERC20": [
              363
            ],
            "TransferHelper": [
              589
            ]
          },
          "id": 590,
          "license": "GPL-2.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 420,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 421,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 590,
              "sourceUnit": 364,
              "src": "71:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TransferHelper",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 589,
              "linearizedBaseContracts": [
                589
              ],
              "name": "TransferHelper",
              "nameLocation": "137:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 469,
                    "nodeType": "Block",
                    "src": "690:229:6",
                    "statements": [
                      {
                        "assignments": [
                          434,
                          436
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 434,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "706:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 469,
                            "src": "701:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 433,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "701:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 436,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "728:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 469,
                            "src": "715:17:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 435,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "715:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 449,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 441,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "782:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "789:12:6",
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 362,
                                    "src": "782:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "802:8:6",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "782:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 444,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "812:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 445,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 428,
                                  "src": "818:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 446,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 430,
                                  "src": "822:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 439,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "759:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "763:18:6",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "759:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "759:69:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 437,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 424,
                              "src": "748:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "754:4:6",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "748:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "748:81:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "700:129:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 451,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 434,
                                "src": "847:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 452,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 436,
                                          "src": "859:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 453,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "864:6:6",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "859:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 454,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "874:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "859:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 458,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 436,
                                          "src": "890:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 460,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "897:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 459,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "897:4:6",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 461,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "896:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 456,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "879:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 457,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "883:6:6",
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "879:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 462,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "879:24:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "859:44:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 464,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "858:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "847:57:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "535446",
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "906:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
                                "typeString": "literal_string \"STF\""
                              },
                              "value": "STF"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
                                "typeString": "literal_string \"STF\""
                              }
                            ],
                            "id": 450,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "839:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "839:73:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 468,
                        "nodeType": "ExpressionStatement",
                        "src": "839:73:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "158:398:6",
                    "text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
                  },
                  "id": 470,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "570:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "604:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "596:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 426,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "627:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "619:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 425,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 428,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "649:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "641:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "669:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 470,
                        "src": "661:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "586:94:6"
                  },
                  "returnParameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "690:0:6"
                  },
                  "scope": 589,
                  "src": "561:358:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "1314:206:6",
                    "statements": [
                      {
                        "assignments": [
                          481,
                          483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 481,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1330:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 515,
                            "src": "1325:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 480,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1325:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 483,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "1352:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 515,
                            "src": "1339:17:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1339:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 495,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 488,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "1394:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1401:8:6",
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 330,
                                    "src": "1394:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.transfer(address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "1410:8:6",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "1394:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 491,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 475,
                                  "src": "1420:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 492,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "1424:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 486,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1371:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1375:18:6",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "1371:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1371:59:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 484,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "1360:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1366:4:6",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "1360:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1360:71:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1324:107:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 497,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 481,
                                "src": "1449:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 501,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 498,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 483,
                                          "src": "1461:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 499,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1466:6:6",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "1461:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 500,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1476:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "1461:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 504,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 483,
                                          "src": "1492:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 506,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1499:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 505,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1499:4:6",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 507,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "1498:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 502,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1481:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 503,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "1485:6:6",
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "1481:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 508,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1481:24:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "1461:44:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 510,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1460:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1449:57:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5354",
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1508:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
                                "typeString": "literal_string \"ST\""
                              },
                              "value": "ST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
                                "typeString": "literal_string \"ST\""
                              }
                            ],
                            "id": 496,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1441:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1441:72:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "1441:72:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 471,
                    "nodeType": "StructuredDocumentation",
                    "src": "925:281:6",
                    "text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
                  },
                  "id": 516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1220:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1250:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "1242:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1242:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 475,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1273:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "1265:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1265:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1293:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 516,
                        "src": "1285:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1285:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1232:72:6"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1314:0:6"
                  },
                  "scope": 589,
                  "src": "1211:309:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "1975:205:6",
                    "statements": [
                      {
                        "assignments": [
                          527,
                          529
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 527,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1991:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 561,
                            "src": "1986:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 526,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1986:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 529,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "2013:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 561,
                            "src": "2000:17:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 528,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2000:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 541,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 534,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "2055:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2062:7:6",
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 350,
                                    "src": "2055:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function IERC20.approve(address,uint256) returns (bool)"
                                    }
                                  },
                                  "id": 536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2070:8:6",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "2055:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 537,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 521,
                                  "src": "2080:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 538,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 523,
                                  "src": "2084:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 532,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2032:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2036:18:6",
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "2032:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2032:58:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 530,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 519,
                              "src": "2021:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2027:4:6",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2021:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2021:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1985:106:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 543,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 527,
                                "src": "2109:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 555,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 544,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 529,
                                          "src": "2121:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 545,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2126:6:6",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "2121:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 546,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2136:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "2121:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 550,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 529,
                                          "src": "2152:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 552,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2159:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 551,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2159:4:6",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 553,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "2158:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 548,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2141:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 549,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2145:6:6",
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "2141:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2141:24:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2121:44:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 556,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2120:46:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2109:57:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5341",
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2168:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
                                "typeString": "literal_string \"SA\""
                              },
                              "value": "SA"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
                                "typeString": "literal_string \"SA\""
                              }
                            ],
                            "id": 542,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2101:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2101:72:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 560,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:72:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 517,
                    "nodeType": "StructuredDocumentation",
                    "src": "1526:342:6",
                    "text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
                  },
                  "id": 562,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nameLocation": "1882:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 519,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1911:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "1903:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 521,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1934:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "1926:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 520,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1926:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1954:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "1946:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1893:72:6"
                  },
                  "returnParameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1975:0:6"
                  },
                  "scope": 589,
                  "src": "1873:307:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 587,
                    "nodeType": "Block",
                    "src": "2431:104:6",
                    "statements": [
                      {
                        "assignments": [
                          571,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 571,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2447:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 587,
                            "src": "2442:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 570,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2442:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 581,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2492:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "2482:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (bytes memory)"
                                },
                                "typeName": {
                                  "id": 576,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2486:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                }
                              },
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2482:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 572,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 565,
                                "src": "2460:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2463:4:6",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2460:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 574,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 567,
                                "src": "2475:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2460:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2441:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 583,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 571,
                              "src": "2513:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "535445",
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2522:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
                                "typeString": "literal_string \"STE\""
                              },
                              "value": "STE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
                                "typeString": "literal_string \"STE\""
                              }
                            ],
                            "id": 582,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2505:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2505:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 586,
                        "nodeType": "ExpressionStatement",
                        "src": "2505:23:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "2186:179:6",
                    "text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
                  },
                  "id": 588,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferETH",
                  "nameLocation": "2379:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2403:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "2395:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2395:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2415:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "2407:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2394:27:6"
                  },
                  "returnParameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2431:0:6"
                  },
                  "scope": 589,
                  "src": "2370:165:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 590,
              "src": "129:2408:6",
              "usedErrors": []
            }
          ],
          "src": "45:2493:6"
        },
        "id": 6
      },
      "contracts/core/adaptors/IUniswapV3.sol": {
        "ast": {
          "absolutePath": "contracts/core/adaptors/IUniswapV3.sol",
          "exportedSymbols": {
            "ISwapRouter": [
              627
            ],
            "IUniswapV3": [
              603
            ]
          },
          "id": 628,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 591,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IUniswapV3",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 603,
              "linearizedBaseContracts": [
                603
              ],
              "name": "IUniswapV3",
              "nameLocation": "67:10:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "1698ee82",
                  "id": 602,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nameLocation": "93:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "109:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "101:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "101:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "125:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "117:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "117:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "140:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "133:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "133:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "100:44:7"
                  },
                  "returnParameters": {
                    "id": 601,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "pool",
                        "nameLocation": "176:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "168:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "168:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "167:14:7"
                  },
                  "scope": 603,
                  "src": "84:98:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 628,
              "src": "57:127:7",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISwapRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 627,
              "linearizedBaseContracts": [
                627
              ],
              "name": "ISwapRouter",
              "nameLocation": "196:11:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ISwapRouter.ExactInputSingleParams",
                  "id": 618,
                  "members": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "262:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "254:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "287:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "279:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "279:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "312:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "305:10:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "305:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 611,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "333:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "325:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 610,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "325:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "360:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "352:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "352:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "amountOutMinimum",
                      "nameLocation": "386:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "378:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "sqrtPriceLimitX96",
                      "nameLocation": "420:17:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 618,
                      "src": "412:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "412:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExactInputSingleParams",
                  "nameLocation": "221:22:7",
                  "nodeType": "StructDefinition",
                  "scope": 627,
                  "src": "214:230:7",
                  "visibility": "public"
                },
                {
                  "functionSelector": "04e45aaf",
                  "id": 626,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exactInputSingle",
                  "nameLocation": "459:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "508:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "476:38:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_calldata_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        },
                        "typeName": {
                          "id": 620,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 619,
                            "name": "ExactInputSingleParams",
                            "nameLocations": [
                              "476:22:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 618,
                            "src": "476:22:7"
                          },
                          "referencedDeclaration": 618,
                          "src": "476:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_storage_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "475:40:7"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "542:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 626,
                        "src": "534:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "534:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "533:19:7"
                  },
                  "scope": 627,
                  "src": "450:103:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 628,
              "src": "186:369:7",
              "usedErrors": []
            }
          ],
          "src": "32:524:7"
        },
        "id": 7
      },
      "contracts/core/adaptors/UniswapV3ViaRouter.sol": {
        "ast": {
          "absolutePath": "contracts/core/adaptors/UniswapV3ViaRouter.sol",
          "exportedSymbols": {
            "IAMM": [
              1256
            ],
            "IERC20": [
              363
            ],
            "ISwapRouter": [
              627
            ],
            "IUniswapV3": [
              603
            ],
            "Ownable": [
              112
            ],
            "TransferHelper": [
              589
            ],
            "UniswapV3ViaRouter": [
              799
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 629,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:8"
            },
            {
              "absolutePath": "contracts/interfaces/IAMM.sol",
              "file": "../../interfaces/IAMM.sol",
              "id": 631,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 1257,
              "src": "57:47:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 630,
                    "name": "IAMM",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "65:4:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/adaptors/IUniswapV3.sol",
              "file": "../../core/adaptors/IUniswapV3.sol",
              "id": 633,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 628,
              "src": "105:62:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 632,
                    "name": "IUniswapV3",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 603,
                    "src": "113:10:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/adaptors/IUniswapV3.sol",
              "file": "../../core/adaptors/IUniswapV3.sol",
              "id": 635,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 628,
              "src": "168:63:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 634,
                    "name": "ISwapRouter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 627,
                    "src": "176:11:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 637,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 113,
              "src": "232:67:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 636,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 112,
                    "src": "240:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
              "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
              "id": 638,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 590,
              "src": "300:70:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 640,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 364,
              "src": "371:70:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 639,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "379:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 641,
                    "name": "IAMM",
                    "nameLocations": [
                      "474:4:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "474:4:8"
                  },
                  "id": 642,
                  "nodeType": "InheritanceSpecifier",
                  "src": "474:4:8"
                },
                {
                  "baseName": {
                    "id": 643,
                    "name": "Ownable",
                    "nameLocations": [
                      "480:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "480:7:8"
                  },
                  "id": 644,
                  "nodeType": "InheritanceSpecifier",
                  "src": "480:7:8"
                }
              ],
              "canonicalName": "UniswapV3ViaRouter",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                112,
                418,
                1256
              ],
              "name": "UniswapV3ViaRouter",
              "nameLocation": "452:18:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 647,
                  "mutability": "constant",
                  "name": "router",
                  "nameLocation": "610:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "585:76:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307832363236363634633236303333333645353742323731633543306232364634323137343165343831",
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "619:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x2626664c2603336E57B271c5C0b26F421741e481"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 650,
                  "mutability": "constant",
                  "name": "wewe",
                  "nameLocation": "692:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "667:74:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307836623962623336353139353338653043303733383934453936344539303137324531633042343146",
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "699:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x6b9bb36519538e0C073894E964E90172E1c0B41F"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "ddca3f43",
                  "id": 652,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "762:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "748:17:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 661,
                    "nodeType": "Block",
                    "src": "796:28:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 657,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "806:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3130303030",
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "812:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "806:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 660,
                        "nodeType": "ExpressionStatement",
                        "src": "806:11:8"
                      }
                    ]
                  },
                  "id": 662,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 655,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 654,
                        "name": "Ownable",
                        "nameLocations": [
                          "786:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 112,
                        "src": "786:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "786:9:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "783:2:8"
                  },
                  "returnParameters": {
                    "id": 656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:0:8"
                  },
                  "scope": 799,
                  "src": "772:52:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 694,
                    "nodeType": "Block",
                    "src": "878:245:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 669,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 664,
                                  "src": "978:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "986:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "978:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 672,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 664,
                                  "src": "993:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "353030",
                                  "id": 673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1001:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_500_by_1",
                                    "typeString": "int_const 500"
                                  },
                                  "value": "500"
                                },
                                "src": "993:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "978:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 676,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "1008:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "33303030",
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1016:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3000_by_1",
                                  "typeString": "int_const 3000"
                                },
                                "value": "3000"
                              },
                              "src": "1008:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "978:42:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 680,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 664,
                              "src": "1024:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1032:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "1024:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "978:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 689,
                        "nodeType": "IfStatement",
                        "src": "974:122:8",
                        "trueBody": {
                          "id": 688,
                          "nodeType": "Block",
                          "src": "1039:57:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "556e697377617076333a20496e76616c696420666565",
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1060:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bf282cf94f2826a4d3c2b7ed23f3d348a187c44c25b6569a0dbb5fa6b3cf2ce1",
                                      "typeString": "literal_string \"Uniswapv3: Invalid fee\""
                                    },
                                    "value": "Uniswapv3: Invalid fee"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_bf282cf94f2826a4d3c2b7ed23f3d348a187c44c25b6569a0dbb5fa6b3cf2ce1",
                                      "typeString": "literal_string \"Uniswapv3: Invalid fee\""
                                    }
                                  ],
                                  "id": 684,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "1053:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 686,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1053:32:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 687,
                              "nodeType": "ExpressionStatement",
                              "src": "1053:32:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 690,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "1106:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 691,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "1112:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "src": "1106:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 693,
                        "nodeType": "ExpressionStatement",
                        "src": "1106:10:8"
                      }
                    ]
                  },
                  "functionSelector": "eabb5622",
                  "id": 695,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 667,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 666,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "868:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "868:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "868:9:8"
                    }
                  ],
                  "name": "setFee",
                  "nameLocation": "839:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "853:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 695,
                        "src": "846:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "846:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "845:13:8"
                  },
                  "returnParameters": {
                    "id": 668,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "878:0:8"
                  },
                  "scope": 799,
                  "src": "830:293:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1245
                  ],
                  "body": {
                    "id": 728,
                    "nodeType": "Block",
                    "src": "1284:169:8",
                    "statements": [
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "1302:9:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 728,
                            "src": "1294:17:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1294:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 718,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 711,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "1320:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 712,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "1327:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 713,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1338:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1342:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1338:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 715,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "1350:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1358:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 710,
                            "name": "_swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "1314:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,address,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1314:46:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1294:66:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 720,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "1384:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 721,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "1392:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 722,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "1403:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 723,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 701,
                              "src": "1410:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 719,
                            "name": "Swapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "1376:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,uint256,address,address)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1376:44:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 725,
                        "nodeType": "EmitStatement",
                        "src": "1371:49:8"
                      },
                      {
                        "expression": {
                          "id": 726,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 709,
                          "src": "1437:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 707,
                        "id": 727,
                        "nodeType": "Return",
                        "src": "1430:16:8"
                      }
                    ]
                  },
                  "functionSelector": "a2c554d3",
                  "id": 729,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "1138:4:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1160:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "1152:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1184:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "1176:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1207:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "1199:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "1241:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "1226:24:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1226:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1142:114:8"
                  },
                  "returnParameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 729,
                        "src": "1275:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1275:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1274:9:8"
                  },
                  "scope": 799,
                  "src": "1129:324:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "1650:1123:8",
                    "statements": [
                      {
                        "assignments": [
                          746
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 746,
                            "mutability": "mutable",
                            "name": "swapRouter",
                            "nameLocation": "1672:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "1660:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$627",
                              "typeString": "contract ISwapRouter"
                            },
                            "typeName": {
                              "id": 745,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 744,
                                "name": "ISwapRouter",
                                "nameLocations": [
                                  "1660:11:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 627,
                                "src": "1660:11:8"
                              },
                              "referencedDeclaration": 627,
                              "src": "1660:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISwapRouter_$627",
                                "typeString": "contract ISwapRouter"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 750,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "307832363236363634633236303333333645353742323731633543306232364634323137343165343831",
                              "id": 748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1697:42:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x2626664c2603336E57B271c5C0b26F421741e481"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 747,
                            "name": "ISwapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "1685:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$627_$",
                              "typeString": "type(contract ISwapRouter)"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1685:55:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$627",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1660:80:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "1851:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 755,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 733,
                              "src": "1860:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 758,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1874:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UniswapV3ViaRouter_$799",
                                    "typeString": "contract UniswapV3ViaRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UniswapV3ViaRouter_$799",
                                    "typeString": "contract UniswapV3ViaRouter"
                                  }
                                ],
                                "id": 757,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1866:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 756,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1866:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1866:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 760,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "1881:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 751,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "1819:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$589_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1834:16:8",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 470,
                            "src": "1819:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1819:71:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "1819:71:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 766,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "1974:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 769,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 746,
                                  "src": "1991:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$627",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$627",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1983:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 767,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1983:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1983:19:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 771,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "2004:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 763,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "1947:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$589_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1962:11:8",
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 562,
                            "src": "1947:26:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1947:66:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "1947:66:8"
                      },
                      {
                        "assignments": [
                          778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 778,
                            "mutability": "mutable",
                            "name": "params",
                            "nameLocation": "2303:6:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "2261:48:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams"
                            },
                            "typeName": {
                              "id": 777,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 776,
                                "name": "ISwapRouter.ExactInputSingleParams",
                                "nameLocations": [
                                  "2261:11:8",
                                  "2273:22:8"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 618,
                                "src": "2261:34:8"
                              },
                              "referencedDeclaration": 618,
                              "src": "2261:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_storage_ptr",
                                "typeString": "struct ISwapRouter.ExactInputSingleParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 789,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 781,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 731,
                              "src": "2370:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 782,
                              "name": "wewe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "2401:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 783,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "2424:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "id": 784,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 735,
                              "src": "2452:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 785,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "2546:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 786,
                              "name": "amountOutMinimum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 739,
                              "src": "2586:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2635:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 779,
                              "name": "ISwapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "2312:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$627_$",
                                "typeString": "type(contract ISwapRouter)"
                              }
                            },
                            "id": 780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2324:22:8",
                            "memberName": "ExactInputSingleParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 618,
                            "src": "2312:34:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$618_storage_ptr_$",
                              "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "2361:7:8",
                            "2391:8:8",
                            "2419:3:8",
                            "2441:9:8",
                            "2536:8:8",
                            "2568:16:8",
                            "2616:17:8"
                          ],
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "amountIn",
                            "amountOutMinimum",
                            "sqrtPriceLimitX96"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "2312:335:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2261:386:8"
                      },
                      {
                        "expression": {
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 790,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 742,
                            "src": "2719:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 793,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 778,
                                "src": "2759:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ExactInputSingleParams_$618_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                }
                              ],
                              "expression": {
                                "id": 791,
                                "name": "swapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 746,
                                "src": "2731:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISwapRouter_$627",
                                  "typeString": "contract ISwapRouter"
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2742:16:8",
                              "memberName": "exactInputSingle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 626,
                              "src": "2731:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_struct$_ExactInputSingleParams_$618_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) external returns (uint256)"
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2731:35:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2719:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 796,
                        "nodeType": "ExpressionStatement",
                        "src": "2719:47:8"
                      }
                    ]
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_swap",
                  "nameLocation": "1468:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 740,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "1491:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1483:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1483:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 733,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1516:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1508:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1508:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1538:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1530:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1530:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 737,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1565:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1557:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 739,
                        "mutability": "mutable",
                        "name": "amountOutMinimum",
                        "nameLocation": "1591:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1583:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 738,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1473:140:8"
                  },
                  "returnParameters": {
                    "id": 743,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 742,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1639:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1631:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1631:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1630:19:8"
                  },
                  "scope": 799,
                  "src": "1459:1314:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 800,
              "src": "443:2332:8",
              "usedErrors": []
            }
          ],
          "src": "32:2744:8"
        },
        "id": 8
      },
      "contracts/core/merge/Eater.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/Eater.sol",
          "exportedSymbols": {
            "Eater": [
              1025
            ],
            "IERC20": [
              363
            ],
            "IWeweReceiver": [
              1301
            ],
            "Ownable": [
              112
            ],
            "Pausable": [
              220
            ],
            "ReentrancyGuard": [
              285
            ]
          },
          "id": 1026,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 803,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1026,
              "sourceUnit": 364,
              "src": "59:70:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 802,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "67:6:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 805,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1026,
              "sourceUnit": 113,
              "src": "130:67:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 804,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 112,
                    "src": "138:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 807,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1026,
              "sourceUnit": 221,
              "src": "198:71:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 806,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "206:8:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 809,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1026,
              "sourceUnit": 286,
              "src": "270:85:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 808,
                    "name": "ReentrancyGuard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 285,
                    "src": "278:15:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
              "file": "../../interfaces/IWeweReceiver.sol",
              "id": 810,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1026,
              "sourceUnit": 1302,
              "src": "356:44:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 811,
                    "name": "IWeweReceiver",
                    "nameLocations": [
                      "429:13:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1301,
                    "src": "429:13:9"
                  },
                  "id": 812,
                  "nodeType": "InheritanceSpecifier",
                  "src": "429:13:9"
                },
                {
                  "baseName": {
                    "id": 813,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "444:15:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 285,
                    "src": "444:15:9"
                  },
                  "id": 814,
                  "nodeType": "InheritanceSpecifier",
                  "src": "444:15:9"
                },
                {
                  "baseName": {
                    "id": 815,
                    "name": "Pausable",
                    "nameLocations": [
                      "461:8:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 220,
                    "src": "461:8:9"
                  },
                  "id": 816,
                  "nodeType": "InheritanceSpecifier",
                  "src": "461:8:9"
                },
                {
                  "baseName": {
                    "id": 817,
                    "name": "Ownable",
                    "nameLocations": [
                      "471:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 112,
                    "src": "471:7:9"
                  },
                  "id": 818,
                  "nodeType": "InheritanceSpecifier",
                  "src": "471:7:9"
                }
              ],
              "canonicalName": "Eater",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1025,
              "linearizedBaseContracts": [
                1025,
                112,
                220,
                418,
                285,
                1301
              ],
              "name": "Eater",
              "nameLocation": "420:5:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "502:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "485:22:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 822,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "530:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "513:23:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "e1f26f22",
                  "id": 824,
                  "mutability": "mutable",
                  "name": "wewe",
                  "nameLocation": "557:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "542:19:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 849,
                    "nodeType": "Block",
                    "src": "609:174:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 830,
                                "name": "rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 826,
                                "src": "627:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "634:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "627:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a2052617465206d7573742062652067726561746572207468616e2030",
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "637:36:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f4281e2a04a1e1357e47cd4c75fcaf306a2360a0f45e2665764b2a1efc4de50c",
                                "typeString": "literal_string \"Eater: Rate must be greater than 0\""
                              },
                              "value": "Eater: Rate must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f4281e2a04a1e1357e47cd4c75fcaf306a2360a0f45e2665764b2a1efc4de50c",
                                "typeString": "literal_string \"Eater: Rate must be greater than 0\""
                              }
                            ],
                            "id": 829,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "619:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "619:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "ExpressionStatement",
                        "src": "619:55:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 836,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "689:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 837,
                            "name": "rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 826,
                            "src": "698:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "689:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 848,
                        "nodeType": "IfStatement",
                        "src": "685:92:9",
                        "trueBody": {
                          "id": 847,
                          "nodeType": "Block",
                          "src": "704:73:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 839,
                                  "name": "_rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "718:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 840,
                                  "name": "rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 826,
                                  "src": "726:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "718:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 842,
                              "nodeType": "ExpressionStatement",
                              "src": "718:12:9"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 844,
                                    "name": "rate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 826,
                                    "src": "761:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 843,
                                  "name": "RateChanged",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "749:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "749:17:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 846,
                              "nodeType": "EmitStatement",
                              "src": "744:22:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 850,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRate",
                  "nameLocation": "577:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "594:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "586:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:14:9"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "609:0:9"
                  },
                  "scope": 1025,
                  "src": "568:215:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 910,
                    "nodeType": "Block",
                    "src": "873:376:9",
                    "statements": [
                      {
                        "assignments": [
                          862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 862,
                            "mutability": "mutable",
                            "name": "weweToTransfer",
                            "nameLocation": "891:14:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "883:22:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 861,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "883:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 869,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 863,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 852,
                                  "src": "909:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 864,
                                  "name": "_rate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "918:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "909:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 866,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "908:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "927:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "908:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "883:47:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 871,
                                "name": "weweToTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 862,
                                "src": "961:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 878,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1010:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Eater_$1025",
                                          "typeString": "contract Eater"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Eater_$1025",
                                          "typeString": "contract Eater"
                                        }
                                      ],
                                      "id": 877,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1002:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 876,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1002:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1002:13:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 873,
                                        "name": "wewe",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 824,
                                        "src": "986:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 872,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "979:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "979:12:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$363",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "992:9:9",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 320,
                                  "src": "979:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "979:37:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "961:55:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a20496e73756666696369656e7420746f6b656e2062616c616e636520746f207472616e73666572",
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1030:47:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6fff524f507ecf61abe1fdafa351d8d0f5ecb04310282e4d66a638fb704e9f7",
                                "typeString": "literal_string \"Eater: Insufficient token balance to transfer\""
                              },
                              "value": "Eater: Insufficient token balance to transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a6fff524f507ecf61abe1fdafa351d8d0f5ecb04310282e4d66a638fb704e9f7",
                                "typeString": "literal_string \"Eater: Insufficient token balance to transfer\""
                              }
                            ],
                            "id": 870,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "940:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:147:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "940:147:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 889,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "1125:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 892,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1139:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$1025",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$1025",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1131:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 890,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1131:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1131:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 894,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "1146:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 886,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 854,
                                  "src": "1105:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 885,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1098:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1098:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1112:12:9",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "1098:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1098:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "1098:55:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 901,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "1185:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 902,
                              "name": "weweToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "1191:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 898,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "1170:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 897,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1163:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1163:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1176:8:9",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "1163:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:43:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 904,
                        "nodeType": "ExpressionStatement",
                        "src": "1163:43:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 906,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "1229:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 907,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "1237:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 905,
                            "name": "Merged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "1222:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1222:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 909,
                        "nodeType": "EmitStatement",
                        "src": "1217:25:9"
                      }
                    ]
                  },
                  "id": 911,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 859,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 858,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "859:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "859:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "859:13:9"
                    }
                  ],
                  "name": "_merge",
                  "nameLocation": "798:6:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "813:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "805:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "805:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "829:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "821:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "844:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 911,
                        "src": "836:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "804:45:9"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "873:0:9"
                  },
                  "scope": 1025,
                  "src": "789:460:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 944,
                    "nodeType": "Block",
                    "src": "1291:181:9",
                    "statements": [
                      {
                        "assignments": [
                          917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 917,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "1309:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 944,
                            "src": "1301:15:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 916,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1301:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 927,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 924,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1350:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$1025",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$1025",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1342:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 922,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1342:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1342:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 919,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "1326:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 918,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1319:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1319:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1332:9:9",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "1319:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1319:37:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1301:55:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 929,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 917,
                                "src": "1374:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1384:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1374:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45617465723a204e6f2062616c616e636520746f207377656570",
                              "id": 932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1387:28:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e72d135eac75cef95ab73191830654ce1661cc9d6bb69b1b577638911a2b17fd",
                                "typeString": "literal_string \"Eater: No balance to sweep\""
                              },
                              "value": "Eater: No balance to sweep"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e72d135eac75cef95ab73191830654ce1661cc9d6bb69b1b577638911a2b17fd",
                                "typeString": "literal_string \"Eater: No balance to sweep\""
                              }
                            ],
                            "id": 928,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1366:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1366:50:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 934,
                        "nodeType": "ExpressionStatement",
                        "src": "1366:50:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 939,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1448:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1448:7:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 941,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 917,
                              "src": "1457:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 936,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "1433:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 935,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "1426:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1426:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1439:8:9",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 330,
                            "src": "1426:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1426:39:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 943,
                        "nodeType": "ExpressionStatement",
                        "src": "1426:39:9"
                      }
                    ]
                  },
                  "functionSelector": "35faa416",
                  "id": 945,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 914,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 913,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1281:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1281:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1281:9:9"
                    }
                  ],
                  "name": "sweep",
                  "nameLocation": "1264:5:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1269:2:9"
                  },
                  "returnParameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1291:0:9"
                  },
                  "scope": 1025,
                  "src": "1255:217:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1300
                  ],
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "1683:264:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 962,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 822,
                                "src": "1768:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 965,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1786:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 964,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1778:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 963,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1778:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1778:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1768:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "47656e6572696345617465723a20546f6b656e2061646472657373206e6f7420736574",
                              "id": 968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1790:37:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3fbf59243852d45b9b5e8542e1bdc631a8e45f89176ef73c01951ed5f5a739bc",
                                "typeString": "literal_string \"GenericEater: Token address not set\""
                              },
                              "value": "GenericEater: Token address not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3fbf59243852d45b9b5e8542e1bdc631a8e45f89176ef73c01951ed5f5a739bc",
                                "typeString": "literal_string \"GenericEater: Token address not set\""
                              }
                            ],
                            "id": 961,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1760:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1760:68:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "1760:68:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 972,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 950,
                              "src": "1919:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 973,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "1927:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 974,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "1935:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 971,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "1912:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1912:28:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 976,
                        "nodeType": "ExpressionStatement",
                        "src": "1912:28:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 946,
                    "nodeType": "StructuredDocumentation",
                    "src": "1478:46:9",
                    "text": "@notice Wewe token approveAndCall function"
                  },
                  "functionSelector": "8f4ffcb1",
                  "id": 978,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 957,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 956,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "1656:12:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 250,
                        "src": "1656:12:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1656:12:9"
                    },
                    {
                      "id": 959,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 958,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1669:13:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1669:13:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1669:13:9"
                    }
                  ],
                  "name": "receiveApproval",
                  "nameLocation": "1538:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 955,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1571:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1563:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1593:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1585:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1585:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1609:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1609:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 954,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 978,
                        "src": "1626:14:9",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 953,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1626:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1553:93:9"
                  },
                  "returnParameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1683:0:9"
                  },
                  "scope": 1025,
                  "src": "1529:418:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "1995:104:9",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 983,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "2009:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2009:8:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 992,
                          "nodeType": "Block",
                          "src": "2060:33:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 989,
                                  "name": "_pause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 203,
                                  "src": "2074:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2074:8:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 991,
                              "nodeType": "ExpressionStatement",
                              "src": "2074:8:9"
                            }
                          ]
                        },
                        "id": 993,
                        "nodeType": "IfStatement",
                        "src": "2005:88:9",
                        "trueBody": {
                          "id": 988,
                          "nodeType": "Block",
                          "src": "2019:35:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 985,
                                  "name": "_unpause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "2033:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2033:10:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 987,
                              "nodeType": "ExpressionStatement",
                              "src": "2033:10:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "c4ae3168",
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 981,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 980,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1985:9:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1985:9:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1985:9:9"
                    }
                  ],
                  "name": "togglePause",
                  "nameLocation": "1962:11:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1973:2:9"
                  },
                  "returnParameters": {
                    "id": 982,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1995:0:9"
                  },
                  "scope": 1025,
                  "src": "1953:146:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1013,
                    "nodeType": "Block",
                    "src": "2148:77:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1004,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2184:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2188:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2184:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1008,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2204:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Eater_$1025",
                                    "typeString": "contract Eater"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Eater_$1025",
                                    "typeString": "contract Eater"
                                  }
                                ],
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2196:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1006,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2196:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2196:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1010,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 997,
                              "src": "2211:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1001,
                                  "name": "wewe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "2165:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1000,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "2158:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2158:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2171:12:9",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 362,
                            "src": "2158:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2158:60:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1012,
                        "nodeType": "ExpressionStatement",
                        "src": "2158:60:9"
                      }
                    ]
                  },
                  "id": 1014,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deposit",
                  "nameLocation": "2114:8:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 998,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 997,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2131:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1014,
                        "src": "2123:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 996,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2123:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2122:16:9"
                  },
                  "returnParameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2148:0:9"
                  },
                  "scope": 1025,
                  "src": "2105:120:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "adc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8",
                  "id": 1020,
                  "name": "Merged",
                  "nameLocation": "2237:6:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1016,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2252:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "2244:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2244:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1018,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2276:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1020,
                        "src": "2260:23:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1017,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2260:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2243:41:9"
                  },
                  "src": "2231:54:9"
                },
                {
                  "anonymous": false,
                  "eventSelector": "595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f10",
                  "id": 1024,
                  "name": "RateChanged",
                  "nameLocation": "2296:11:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1022,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRate",
                        "nameLocation": "2316:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "2308:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1021,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2307:17:9"
                  },
                  "src": "2290:35:9"
                }
              ],
              "scope": 1026,
              "src": "402:1925:9",
              "usedErrors": []
            }
          ],
          "src": "33:2295:9"
        },
        "id": 9
      },
      "contracts/core/merge/GenericMerge.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/GenericMerge.sol",
          "exportedSymbols": {
            "Eater": [
              1025
            ],
            "GenericMerge": [
              1150
            ],
            "IERC20": [
              363
            ],
            "IERC20Metadata": [
              388
            ],
            "IMergeV2": [
              1287
            ]
          },
          "id": 1151,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1027,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "absolutePath": "contracts/interfaces/IMergeV2.sol",
              "file": "../../interfaces/IMergeV2.sol",
              "id": 1028,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1151,
              "sourceUnit": 1288,
              "src": "58:39:10",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/Eater.sol",
              "file": "./Eater.sol",
              "id": 1030,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1151,
              "sourceUnit": 1026,
              "src": "98:34:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1029,
                    "name": "Eater",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1025,
                    "src": "106:5:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 1032,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1151,
              "sourceUnit": 389,
              "src": "133:97:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1031,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 388,
                    "src": "141:14:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1034,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1151,
              "sourceUnit": 364,
              "src": "231:70:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1033,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "239:6:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1035,
                    "name": "Eater",
                    "nameLocations": [
                      "328:5:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1025,
                    "src": "328:5:10"
                  },
                  "id": 1036,
                  "nodeType": "InheritanceSpecifier",
                  "src": "328:5:10"
                },
                {
                  "baseName": {
                    "id": 1037,
                    "name": "IMergeV2",
                    "nameLocations": [
                      "335:8:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1287,
                    "src": "335:8:10"
                  },
                  "id": 1038,
                  "nodeType": "InheritanceSpecifier",
                  "src": "335:8:10"
                }
              ],
              "canonicalName": "GenericMerge",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1150,
              "linearizedBaseContracts": [
                1150,
                1287,
                1025,
                112,
                220,
                418,
                285,
                1301
              ],
              "name": "GenericMerge",
              "nameLocation": "312:12:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1278
                  ],
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "402:30:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1043,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 822,
                          "src": "419:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1042,
                        "id": 1044,
                        "nodeType": "Return",
                        "src": "412:13:10"
                      }
                    ]
                  },
                  "functionSelector": "21df0da7",
                  "id": 1046,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "359:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1039,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "367:2:10"
                  },
                  "returnParameters": {
                    "id": 1042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "393:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "393:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "392:9:10"
                  },
                  "scope": 1150,
                  "src": "350:82:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1065,
                    "nodeType": "Block",
                    "src": "480:74:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1053,
                            "name": "_rate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 820,
                            "src": "490:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "313030",
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "498:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "490:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1056,
                        "nodeType": "ExpressionStatement",
                        "src": "490:11:10"
                      },
                      {
                        "expression": {
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1057,
                            "name": "wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 824,
                            "src": "511:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1058,
                            "name": "_wewe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1048,
                            "src": "518:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "511:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1060,
                        "nodeType": "ExpressionStatement",
                        "src": "511:12:10"
                      },
                      {
                        "expression": {
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1061,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "533:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1062,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "542:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "533:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "533:14:10"
                      }
                    ]
                  },
                  "id": 1066,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1048,
                        "mutability": "mutable",
                        "name": "_wewe",
                        "nameLocation": "458:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "450:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "450:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1050,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "473:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "465:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "465:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "449:30:10"
                  },
                  "returnParameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "480:0:10"
                  },
                  "scope": 1150,
                  "src": "438:116:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1268
                  ],
                  "body": {
                    "id": 1073,
                    "nodeType": "Block",
                    "src": "611:29:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1071,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 820,
                          "src": "628:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1070,
                        "id": 1072,
                        "nodeType": "Return",
                        "src": "621:12:10"
                      }
                    ]
                  },
                  "functionSelector": "679aefce",
                  "id": 1074,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "569:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1067,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "576:2:10"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1074,
                        "src": "602:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "602:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "601:9:10"
                  },
                  "scope": 1150,
                  "src": "560:80:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1273
                  ],
                  "body": {
                    "id": 1085,
                    "nodeType": "Block",
                    "src": "696:31:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1082,
                              "name": "rate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "715:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1081,
                            "name": "_setRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "706:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "706:14:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1084,
                        "nodeType": "ExpressionStatement",
                        "src": "706:14:10"
                      }
                    ]
                  },
                  "functionSelector": "34fcf437",
                  "id": 1086,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1079,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1078,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "686:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "686:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "686:9:10"
                    }
                  ],
                  "name": "setRate",
                  "nameLocation": "655:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "671:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1086,
                        "src": "663:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "663:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "662:14:10"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "696:0:10"
                  },
                  "scope": 1150,
                  "src": "646:81:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1286
                  ],
                  "body": {
                    "id": 1106,
                    "nodeType": "Block",
                    "src": "762:116:10",
                    "statements": [
                      {
                        "assignments": [
                          1090
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1090,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "780:7:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1106,
                            "src": "772:15:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1089,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "772:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1098,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1095,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "815:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "819:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "815:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1092,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "797:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1091,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "790:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "790:14:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "805:9:10",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "790:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "790:36:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "772:54:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1100,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "843:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1101,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "852:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1102,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "860:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "864:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "860:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1099,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "836:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "836:35:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "836:35:10"
                      }
                    ]
                  },
                  "functionSelector": "ea9f2417",
                  "id": 1107,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "742:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "750:2:10"
                  },
                  "returnParameters": {
                    "id": 1088,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "762:0:10"
                  },
                  "scope": 1150,
                  "src": "733:145:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1283
                  ],
                  "body": {
                    "id": 1136,
                    "nodeType": "Block",
                    "src": "924:197:10",
                    "statements": [
                      {
                        "assignments": [
                          1113
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1113,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "942:7:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1136,
                            "src": "934:15:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1112,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "934:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1121,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1118,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "977:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "981:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "977:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1115,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "959:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1114,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "952:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "952:14:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "967:9:10",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "952:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "952:36:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "934:54:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1123,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1113,
                                "src": "1006:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1124,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1109,
                                "src": "1017:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1006:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "47656e657269634d657267653a20496e73756666696369656e742062616c616e636520746f20656174",
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1025:43:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_56f84ab3557aa002e3821e289449209d21d11b7ab04217ed57ab1b5127489f80",
                                "typeString": "literal_string \"GenericMerge: Insufficient balance to eat\""
                              },
                              "value": "GenericMerge: Insufficient balance to eat"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_56f84ab3557aa002e3821e289449209d21d11b7ab04217ed57ab1b5127489f80",
                                "typeString": "literal_string \"GenericMerge: Insufficient balance to eat\""
                              }
                            ],
                            "id": 1122,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "998:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:71:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1128,
                        "nodeType": "ExpressionStatement",
                        "src": "998:71:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1130,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "1087:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1131,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "1095:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1132,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1103:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1107:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1103:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1129,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "1080:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1080:34:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1135,
                        "nodeType": "ExpressionStatement",
                        "src": "1080:34:10"
                      }
                    ]
                  },
                  "functionSelector": "24a47aeb",
                  "id": 1137,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "893:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "907:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1137,
                        "src": "899:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "898:16:10"
                  },
                  "returnParameters": {
                    "id": 1111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "924:0:10"
                  },
                  "scope": 1150,
                  "src": "884:237:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1263
                  ],
                  "body": {
                    "id": 1148,
                    "nodeType": "Block",
                    "src": "1229:33:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1145,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1139,
                              "src": "1248:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1144,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1014,
                            "src": "1239:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:16:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1147,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:16:10"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 1149,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1141,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1219:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "1219:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1219:9:10"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "1186:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1202:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "1194:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1194:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1193:16:10"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1229:0:10"
                  },
                  "scope": 1150,
                  "src": "1177:85:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1151,
              "src": "303:961:10",
              "usedErrors": []
            }
          ],
          "src": "32:1233:10"
        },
        "id": 10
      },
      "contracts/core/merge/MergeWithMarket.sol": {
        "ast": {
          "absolutePath": "contracts/core/merge/MergeWithMarket.sol",
          "exportedSymbols": {
            "GenericMerge": [
              1150
            ],
            "IAMM": [
              1256
            ],
            "IERC20": [
              363
            ],
            "MergeWithMarket": [
              1230
            ]
          },
          "id": 1231,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1152,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "contracts/interfaces/IAMM.sol",
              "file": "../../interfaces/IAMM.sol",
              "id": 1153,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1231,
              "sourceUnit": 1257,
              "src": "58:35:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/core/merge/GenericMerge.sol",
              "file": "./GenericMerge.sol",
              "id": 1155,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1231,
              "sourceUnit": 1151,
              "src": "94:48:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1154,
                    "name": "GenericMerge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1150,
                    "src": "102:12:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1157,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1231,
              "sourceUnit": 364,
              "src": "143:70:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1156,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 363,
                    "src": "151:6:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1158,
                    "name": "GenericMerge",
                    "nameLocations": [
                      "243:12:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1150,
                    "src": "243:12:11"
                  },
                  "id": 1159,
                  "nodeType": "InheritanceSpecifier",
                  "src": "243:12:11"
                }
              ],
              "canonicalName": "MergeWithMarket",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1230,
              "linearizedBaseContracts": [
                1230,
                1150,
                1287,
                1025,
                112,
                220,
                418,
                285,
                1301
              ],
              "name": "MergeWithMarket",
              "nameLocation": "224:15:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1170,
                    "nodeType": "Block",
                    "src": "331:2:11",
                    "statements": []
                  },
                  "id": 1171,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1166,
                          "name": "_wewe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1161,
                          "src": "317:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1167,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1163,
                          "src": "324:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1168,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1165,
                        "name": "GenericMerge",
                        "nameLocations": [
                          "304:12:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1150,
                        "src": "304:12:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "304:26:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "_wewe",
                        "nameLocation": "282:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1171,
                        "src": "274:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1163,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "297:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1171,
                        "src": "289:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "289:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:30:11"
                  },
                  "returnParameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "331:0:11"
                  },
                  "scope": 1230,
                  "src": "262:71:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1228,
                    "nodeType": "Block",
                    "src": "422:541:11",
                    "statements": [
                      {
                        "assignments": [
                          1182
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1182,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "440:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1228,
                            "src": "432:15:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1181,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "432:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1190,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1187,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "475:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "479:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "475:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1184,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "457:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1183,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "450:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "450:14:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "465:9:11",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 320,
                            "src": "450:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "450:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "432:54:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1192,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1182,
                                "src": "504:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1193,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1173,
                                "src": "515:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "504:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726765576974684d61726b65743a20496e73756666696369656e742062616c616e636520746f20656174",
                              "id": 1195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "523:46:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_14316091a0acd06bdcbd1cb846c07ec8b7c7c010fa4af4507e0230cdc45ce5bf",
                                "typeString": "literal_string \"MergeWithMarket: Insufficient balance to eat\""
                              },
                              "value": "MergeWithMarket: Insufficient balance to eat"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_14316091a0acd06bdcbd1cb846c07ec8b7c7c010fa4af4507e0230cdc45ce5bf",
                                "typeString": "literal_string \"MergeWithMarket: Insufficient balance to eat\""
                              }
                            ],
                            "id": 1191,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "496:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "496:74:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1197,
                        "nodeType": "ExpressionStatement",
                        "src": "496:74:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1199,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "640:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1200,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "648:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1201,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "656:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "660:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "656:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1198,
                            "name": "_merge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "633:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address)"
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "633:34:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1204,
                        "nodeType": "ExpressionStatement",
                        "src": "633:34:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1211,
                                  "name": "amm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1176,
                                  "src": "817:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAMM_$1256",
                                    "typeString": "contract IAMM"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAMM_$1256",
                                    "typeString": "contract IAMM"
                                  }
                                ],
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "809:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1209,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "809:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "809:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1213,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "823:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1206,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "793:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1205,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "786:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "786:14:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$363",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "801:7:11",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 350,
                            "src": "786:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "786:44:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "786:44:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1219,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1173,
                              "src": "915:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1220,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 822,
                              "src": "923:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1223,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "939:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MergeWithMarket_$1230",
                                    "typeString": "contract MergeWithMarket"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MergeWithMarket_$1230",
                                    "typeString": "contract MergeWithMarket"
                                  }
                                ],
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "931:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1221,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "931:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "931:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1225,
                              "name": "extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1178,
                              "src": "946:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 1216,
                              "name": "amm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1176,
                              "src": "906:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAMM_$1256",
                                "typeString": "contract IAMM"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "910:4:11",
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1245,
                            "src": "906:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address,address,bytes memory) external returns (uint256)"
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "906:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1227,
                        "nodeType": "ExpressionStatement",
                        "src": "906:50:11"
                      }
                    ]
                  },
                  "functionSelector": "213897fe",
                  "id": 1229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAndSell",
                  "nameLocation": "348:12:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1179,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1173,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "369:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "361:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "361:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "amm",
                        "nameLocation": "382:3:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "377:8:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAMM_$1256",
                          "typeString": "contract IAMM"
                        },
                        "typeName": {
                          "id": 1175,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1174,
                            "name": "IAMM",
                            "nameLocations": [
                              "377:4:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "377:4:11"
                          },
                          "referencedDeclaration": 1256,
                          "src": "377:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAMM_$1256",
                            "typeString": "contract IAMM"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1178,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "402:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "387:24:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "387:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "360:52:11"
                  },
                  "returnParameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "422:0:11"
                  },
                  "scope": 1230,
                  "src": "339:624:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1231,
              "src": "215:750:11",
              "usedErrors": []
            }
          ],
          "src": "32:934:11"
        },
        "id": 11
      },
      "contracts/interfaces/IAMM.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IAMM.sol",
          "exportedSymbols": {
            "IAMM": [
              1256
            ]
          },
          "id": 1257,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1232,
              "literals": [
                "solidity",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAMM",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1256,
              "linearizedBaseContracts": [
                1256
              ],
              "name": "IAMM",
              "nameLocation": "67:4:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a2c554d3",
                  "id": 1245,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "87:4:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "109:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "101:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "101:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1236,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "133:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "125:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "125:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "156:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "148:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "148:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1240,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "190:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "175:24:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "175:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "91:114:12"
                  },
                  "returnParameters": {
                    "id": 1244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1243,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1245,
                        "src": "224:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "224:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "223:9:12"
                  },
                  "scope": 1256,
                  "src": "78:155:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9cd20ed773bdbb537c6e6ab86e6a1068c4271b9ef6cc9a5e1c08bba87abaa926",
                  "id": 1255,
                  "name": "Swapped",
                  "nameLocation": "245:7:12",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1247,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "261:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "253:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "253:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1249,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "277:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "269:17:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1251,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "296:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "288:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "288:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1253,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "319:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "303:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "252:77:12"
                  },
                  "src": "239:91:12"
                }
              ],
              "scope": 1257,
              "src": "57:275:12",
              "usedErrors": []
            }
          ],
          "src": "32:301:12"
        },
        "id": 12
      },
      "contracts/interfaces/IMergeV2.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IMergeV2.sol",
          "exportedSymbols": {
            "IMergeV2": [
              1287
            ]
          },
          "id": 1288,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1258,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IMergeV2",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1287,
              "linearizedBaseContracts": [
                1287
              ],
              "name": "IMergeV2",
              "nameLocation": "68:8:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "b6b55f25",
                  "id": 1263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "92:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1260,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "108:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "100:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1259,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "100:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "99:16:13"
                  },
                  "returnParameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "124:0:13"
                  },
                  "scope": 1287,
                  "src": "83:42:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "679aefce",
                  "id": 1268,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRate",
                  "nameLocation": "139:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "146:2:13"
                  },
                  "returnParameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1268,
                        "src": "172:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:9:13"
                  },
                  "scope": 1287,
                  "src": "130:51:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "34fcf437",
                  "id": 1273,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRate",
                  "nameLocation": "195:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1270,
                        "mutability": "mutable",
                        "name": "rate",
                        "nameLocation": "211:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "203:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "202:14:13"
                  },
                  "returnParameters": {
                    "id": 1272,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "225:0:13"
                  },
                  "scope": 1287,
                  "src": "186:40:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "21df0da7",
                  "id": 1278,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getToken",
                  "nameLocation": "240:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "248:2:13"
                  },
                  "returnParameters": {
                    "id": 1277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1276,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1278,
                        "src": "274:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1275,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:9:13"
                  },
                  "scope": 1287,
                  "src": "231:52:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "24a47aeb",
                  "id": 1283,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "merge",
                  "nameLocation": "297:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1281,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1280,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "311:6:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1283,
                        "src": "303:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "303:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "302:16:13"
                  },
                  "returnParameters": {
                    "id": 1282,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "327:0:13"
                  },
                  "scope": 1287,
                  "src": "288:40:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "ea9f2417",
                  "id": 1286,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mergeAll",
                  "nameLocation": "342:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1284,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "350:2:13"
                  },
                  "returnParameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "361:0:13"
                  },
                  "scope": 1287,
                  "src": "333:29:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1288,
              "src": "58:306:13",
              "usedErrors": []
            }
          ],
          "src": "32:333:13"
        },
        "id": 13
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IWeweReceiver.sol",
          "exportedSymbols": {
            "IWeweReceiver": [
              1301
            ]
          },
          "id": 1302,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1289,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IWeweReceiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1301,
              "linearizedBaseContracts": [
                1301
              ],
              "name": "IWeweReceiver",
              "nameLocation": "68:13:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "8f4ffcb1",
                  "id": 1300,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "receiveApproval",
                  "nameLocation": "97:15:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "121:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "113:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "113:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "135:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "127:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "127:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1295,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "151:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "143:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "143:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1297,
                        "mutability": "mutable",
                        "name": "extraData",
                        "nameLocation": "173:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "158:24:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1296,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "158:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "112:71:14"
                  },
                  "returnParameters": {
                    "id": 1299,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:0:14"
                  },
                  "scope": 1301,
                  "src": "88:105:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1302,
              "src": "58:137:14",
              "usedErrors": []
            }
          ],
          "src": "32:164:14"
        },
        "id": 14
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "TransferHelper": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f3b9ed8cad49dd333c3f02840f16764ef57657c07b8331ba7d67e79e8bddc73564736f6c63430008130033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB9 0xED DUP13 0xAD 0x49 0xDD CALLER EXTCODECOPY EXTCODEHASH MUL DUP5 0xF AND PUSH23 0x4EF57657C07B8331BA7D67E79E8BDDC73564736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "129:2408:6:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220f3b9ed8cad49dd333c3f02840f16764ef57657c07b8331ba7d67e79e8bddc73564736f6c63430008130033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB9 0xED DUP13 0xAD 0x49 0xDD CALLER EXTCODECOPY EXTCODEHASH MUL DUP5 0xF AND PUSH23 0x4EF57657C07B8331BA7D67E79E8BDDC73564736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "129:2408:6:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}"
        }
      },
      "contracts/core/adaptors/IUniswapV3.sol": {
        "ISwapRouter": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenIn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenOut",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountIn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountOutMinimum",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint160",
                      "name": "sqrtPriceLimitX96",
                      "type": "uint160"
                    }
                  ],
                  "internalType": "struct ISwapRouter.ExactInputSingleParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "exactInputSingle",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": "04e45aaf"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/adaptors/IUniswapV3.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/adaptors/IUniswapV3.sol\":{\"keccak256\":\"0xc575e19c1c85986e801f258958952ed616d9bc853e5c1268f1ac70765c0a97ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://708d76a2f2247e278268613e310cc0964708ba6d901156627c90145899686572\",\"dweb:/ipfs/QmQDshFpndGkSLQgMNmTtg16cEcpxtVDozteqwhKLeedw2\"]}},\"version\":1}"
        },
        "IUniswapV3": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getPool(address,address,uint24)": "1698ee82"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/adaptors/IUniswapV3.sol\":\"IUniswapV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/core/adaptors/IUniswapV3.sol\":{\"keccak256\":\"0xc575e19c1c85986e801f258958952ed616d9bc853e5c1268f1ac70765c0a97ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://708d76a2f2247e278268613e310cc0964708ba6d901156627c90145899686572\",\"dweb:/ipfs/QmQDshFpndGkSLQgMNmTtg16cEcpxtVDozteqwhKLeedw2\"]}},\"version\":1}"
        }
      },
      "contracts/core/adaptors/UniswapV3ViaRouter.sol": {
        "UniswapV3ViaRouter": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "Swapped",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint24",
                  "name": "_fee",
                  "type": "uint24"
                }
              ],
              "name": "setFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234610067576000543360018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160b81b0319163362ffffff60a01b19161761027160a41b17600055610733908161006d8239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c8063715018a6146105b65780638da5cb5b1461058f578063a2c554d31461021a578063ddca3f43146101f6578063eabb56221461012b5763f2fde38b1461006157600080fd5b34610127576020366003190112610127576001600160a01b03600435818116929083900361012357610091610610565b82156100d1575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8380fd5b5080fd5b5034610127576020366003190112610127576004359062ffffff821680830361012357610156610610565b606481141590816101e9575b816101dc575b816101cf575b506101935750815462ffffff60a01b191660a09190911b62ffffff60a01b1617815580f35b5162461bcd60e51b8152602060048201526016602482015275556e697377617076333a20496e76616c69642066656560501b6044820152606490fd5b612710915014153861016e565b610bb88114159150610168565b6101f48114159150610162565b503461012757816003193601126101275762ffffff6020925460a01c169051908152f35b50903461048f57608036600319011261048f57602435916001600160a01b038316600435818503610123576044356001600160a01b038116929083900361058b5767ffffffffffffffff6064358181116105875736602382011215610587578060040135828111610583573691016024011161057f57845196602097888101906323b872dd60e01b82528660248201523060448201528560648201526064815260a081018181108582111761051157885251889182919082855af16102dd6106a0565b8161054f575b50156105255785518881019063095ea7b360e01b8252732626664c2603336e57b271c5c0b26f421741e481602482015285604482015260448152608081018181108582111761051157885251889283929083905af16103406106a0565b816104e1575b50156104b85762ffffff865460a01c1685519160e0830190838210908211176104a4578652828252736b9bb36519538e0c073894e964e90172e1c0b41f88830190815282870191825233606084019081526080840186815260a085018a815260c086018b81528a516304e45aaf60e01b815296516001600160a01b039081166004890152945185166024880152945162ffffff1660448701529151831660648601525160848501525160a484015290511660c4820152868160e48189732626664c2603336e57b271c5c0b26f421741e4815af1958615610499578096610463575b50507f9cd20ed773bdbb537c6e6ab86e6a1068c4271b9ef6cc9a5e1c08bba87abaa926916060918551918252868883015285820152a251908152f35b909195508682813d8311610492575b61047c8183610668565b8101031261048f57505193816060610427565b80fd5b503d610472565b8551903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b845162461bcd60e51b8152600481018890526002602482015261534160f01b6044820152606490fd5b805180159250899083156104f9575b50505038610346565b61050993508201810191016106e0565b3888816104f0565b634e487b7160e01b8a52604160045260248afd5b855162461bcd60e51b815260048101899052600360248201526229aa2360e91b6044820152606490fd5b8051801592508a908315610567575b505050386102e3565b61057793508201810191016106e0565b38898161055e565b8580fd5b8780fd5b8680fd5b8480fd5b5034610127578160031936011261012757905490516001600160a01b039091168152602090f35b823461048f578060031936011261048f576105cf610610565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b6000546001600160a01b0316330361062457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761068a57604052565b634e487b7160e01b600052604160045260246000fd5b3d156106db573d9067ffffffffffffffff821161068a57604051916106cf601f8201601f191660200184610668565b82523d6000602084013e565b606090565b908160209103126106f8575180151581036106f85790565b600080fdfea2646970667358221220f6b52fe3884a8a38142314e1f9ca1c458556dbf289b4d0ba48500c27f80e4f2f64736f6c63430008130033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x67 JUMPI PUSH1 0x0 SLOAD CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND CALLER PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND OR PUSH2 0x271 PUSH1 0xA4 SHL OR PUSH1 0x0 SSTORE PUSH2 0x733 SWAP1 DUP2 PUSH2 0x6D DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xA2C554D3 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xEABB5622 EQ PUSH2 0x12B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x123 JUMPI PUSH2 0x91 PUSH2 0x610 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xD1 JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP1 DUP4 SUB PUSH2 0x123 JUMPI PUSH2 0x156 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x64 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x1E9 JUMPI JUMPDEST DUP2 PUSH2 0x1DC JUMPI JUMPDEST DUP2 PUSH2 0x1CF JUMPI JUMPDEST POP PUSH2 0x193 JUMPI POP DUP2 SLOAD PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH3 0xFFFFFF PUSH1 0xA0 SHL AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E697377617076333A20496E76616C696420666565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2710 SWAP2 POP EQ ISZERO CODESIZE PUSH2 0x16E JUMP JUMPDEST PUSH2 0xBB8 DUP2 EQ ISZERO SWAP2 POP PUSH2 0x168 JUMP JUMPDEST PUSH2 0x1F4 DUP2 EQ ISZERO SWAP2 POP PUSH2 0x162 JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH3 0xFFFFFF PUSH1 0x20 SWAP3 SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x48F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x48F JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 CALLDATALOAD DUP2 DUP6 SUB PUSH2 0x123 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x58B JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x587 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x587 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x583 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x57F JUMPI DUP5 MLOAD SWAP7 PUSH1 0x20 SWAP8 DUP9 DUP2 ADD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP6 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x511 JUMPI DUP9 MSTORE MLOAD DUP9 SWAP2 DUP3 SWAP2 SWAP1 DUP3 DUP6 GAS CALL PUSH2 0x2DD PUSH2 0x6A0 JUMP JUMPDEST DUP2 PUSH2 0x54F JUMPI JUMPDEST POP ISZERO PUSH2 0x525 JUMPI DUP6 MLOAD DUP9 DUP2 ADD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH20 0x2626664C2603336E57B271C5C0B26F421741E481 PUSH1 0x24 DUP3 ADD MSTORE DUP6 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x511 JUMPI DUP9 MSTORE MLOAD DUP9 SWAP3 DUP4 SWAP3 SWAP1 DUP4 SWAP1 GAS CALL PUSH2 0x340 PUSH2 0x6A0 JUMP JUMPDEST DUP2 PUSH2 0x4E1 JUMPI JUMPDEST POP ISZERO PUSH2 0x4B8 JUMPI PUSH3 0xFFFFFF DUP7 SLOAD PUSH1 0xA0 SHR AND DUP6 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x4A4 JUMPI DUP7 MSTORE DUP3 DUP3 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP9 DUP4 ADD SWAP1 DUP2 MSTORE DUP3 DUP8 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP7 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP12 DUP2 MSTORE DUP11 MLOAD PUSH4 0x4E45AAF PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP10 ADD MSTORE SWAP5 MLOAD DUP6 AND PUSH1 0x24 DUP9 ADD MSTORE SWAP5 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP8 ADD MSTORE SWAP2 MLOAD DUP4 AND PUSH1 0x64 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE SWAP1 MLOAD AND PUSH1 0xC4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0xE4 DUP2 DUP10 PUSH20 0x2626664C2603336E57B271C5C0B26F421741E481 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x499 JUMPI DUP1 SWAP7 PUSH2 0x463 JUMPI JUMPDEST POP POP PUSH32 0x9CD20ED773BDBB537C6E6AB86E6A1068C4271B9EF6CC9A5E1C08BBA87ABAA926 SWAP2 PUSH1 0x60 SWAP2 DUP6 MLOAD SWAP2 DUP3 MSTORE DUP7 DUP9 DUP4 ADD MSTORE DUP6 DUP3 ADD MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP6 POP DUP7 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x492 JUMPI JUMPDEST PUSH2 0x47C DUP2 DUP4 PUSH2 0x668 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x48F JUMPI POP MLOAD SWAP4 DUP2 PUSH1 0x60 PUSH2 0x427 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x472 JUMP JUMPDEST DUP6 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP10 SWAP1 DUP4 ISZERO PUSH2 0x4F9 JUMPI JUMPDEST POP POP POP CODESIZE PUSH2 0x346 JUMP JUMPDEST PUSH2 0x509 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x6E0 JUMP JUMPDEST CODESIZE DUP9 DUP2 PUSH2 0x4F0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP11 SWAP1 DUP4 ISZERO PUSH2 0x567 JUMPI JUMPDEST POP POP POP CODESIZE PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x577 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x6E0 JUMP JUMPDEST CODESIZE DUP10 DUP2 PUSH2 0x55E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x48F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x48F JUMPI PUSH2 0x5CF PUSH2 0x610 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x624 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x68A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x6CF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x668 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6F8 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6F8 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xB5 0x2F 0xE3 DUP9 0x4A DUP11 CODESIZE EQ 0x23 EQ 0xE1 0xF9 0xCA SHR GASLIMIT DUP6 JUMP 0xDB CALLCODE DUP10 0xB4 0xD0 0xBA BASEFEE POP 0xC 0x27 0xF8 0xE 0x4F 0x2F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "443:2332:8:-:0;;;;;;;2518:6:0;443:2332:8;734:10:5;443:2332:8;;;;;;;2566:40:0;2518:6;2566:40;;-1:-1:-1;;;;;;443:2332:8;734:10:5;-1:-1:-1;;;;443:2332:8;;-1:-1:-1;;;443:2332:8;2518:6:0;443:2332:8;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 1760,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 1696,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 1552,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "604060808152600436101561001357600080fd5b600090813560e01c8063715018a6146105b65780638da5cb5b1461058f578063a2c554d31461021a578063ddca3f43146101f6578063eabb56221461012b5763f2fde38b1461006157600080fd5b34610127576020366003190112610127576001600160a01b03600435818116929083900361012357610091610610565b82156100d1575082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b8380fd5b5080fd5b5034610127576020366003190112610127576004359062ffffff821680830361012357610156610610565b606481141590816101e9575b816101dc575b816101cf575b506101935750815462ffffff60a01b191660a09190911b62ffffff60a01b1617815580f35b5162461bcd60e51b8152602060048201526016602482015275556e697377617076333a20496e76616c69642066656560501b6044820152606490fd5b612710915014153861016e565b610bb88114159150610168565b6101f48114159150610162565b503461012757816003193601126101275762ffffff6020925460a01c169051908152f35b50903461048f57608036600319011261048f57602435916001600160a01b038316600435818503610123576044356001600160a01b038116929083900361058b5767ffffffffffffffff6064358181116105875736602382011215610587578060040135828111610583573691016024011161057f57845196602097888101906323b872dd60e01b82528660248201523060448201528560648201526064815260a081018181108582111761051157885251889182919082855af16102dd6106a0565b8161054f575b50156105255785518881019063095ea7b360e01b8252732626664c2603336e57b271c5c0b26f421741e481602482015285604482015260448152608081018181108582111761051157885251889283929083905af16103406106a0565b816104e1575b50156104b85762ffffff865460a01c1685519160e0830190838210908211176104a4578652828252736b9bb36519538e0c073894e964e90172e1c0b41f88830190815282870191825233606084019081526080840186815260a085018a815260c086018b81528a516304e45aaf60e01b815296516001600160a01b039081166004890152945185166024880152945162ffffff1660448701529151831660648601525160848501525160a484015290511660c4820152868160e48189732626664c2603336e57b271c5c0b26f421741e4815af1958615610499578096610463575b50507f9cd20ed773bdbb537c6e6ab86e6a1068c4271b9ef6cc9a5e1c08bba87abaa926916060918551918252868883015285820152a251908152f35b909195508682813d8311610492575b61047c8183610668565b8101031261048f57505193816060610427565b80fd5b503d610472565b8551903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b845162461bcd60e51b8152600481018890526002602482015261534160f01b6044820152606490fd5b805180159250899083156104f9575b50505038610346565b61050993508201810191016106e0565b3888816104f0565b634e487b7160e01b8a52604160045260248afd5b855162461bcd60e51b815260048101899052600360248201526229aa2360e91b6044820152606490fd5b8051801592508a908315610567575b505050386102e3565b61057793508201810191016106e0565b38898161055e565b8580fd5b8780fd5b8680fd5b8480fd5b5034610127578160031936011261012757905490516001600160a01b039091168152602090f35b823461048f578060031936011261048f576105cf610610565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b6000546001600160a01b0316330361062457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761068a57604052565b634e487b7160e01b600052604160045260246000fd5b3d156106db573d9067ffffffffffffffff821161068a57604051916106cf601f8201601f191660200184610668565b82523d6000602084013e565b606090565b908160209103126106f8575180151581036106f85790565b600080fdfea2646970667358221220f6b52fe3884a8a38142314e1f9ca1c458556dbf289b4d0ba48500c27f80e4f2f64736f6c63430008130033",
              "opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xA2C554D3 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0xEABB5622 EQ PUSH2 0x12B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x123 JUMPI PUSH2 0x91 PUSH2 0x610 JUMP JUMPDEST DUP3 ISZERO PUSH2 0xD1 JUMPI POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x127 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH3 0xFFFFFF DUP3 AND DUP1 DUP4 SUB PUSH2 0x123 JUMPI PUSH2 0x156 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x64 DUP2 EQ ISZERO SWAP1 DUP2 PUSH2 0x1E9 JUMPI JUMPDEST DUP2 PUSH2 0x1DC JUMPI JUMPDEST DUP2 PUSH2 0x1CF JUMPI JUMPDEST POP PUSH2 0x193 JUMPI POP DUP2 SLOAD PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH3 0xFFFFFF PUSH1 0xA0 SHL AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E697377617076333A20496E76616C696420666565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2710 SWAP2 POP EQ ISZERO CODESIZE PUSH2 0x16E JUMP JUMPDEST PUSH2 0xBB8 DUP2 EQ ISZERO SWAP2 POP PUSH2 0x168 JUMP JUMPDEST PUSH2 0x1F4 DUP2 EQ ISZERO SWAP2 POP PUSH2 0x162 JUMP JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI PUSH3 0xFFFFFF PUSH1 0x20 SWAP3 SLOAD PUSH1 0xA0 SHR AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x48F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x48F JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 CALLDATALOAD DUP2 DUP6 SUB PUSH2 0x123 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x58B JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x587 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x587 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0x583 JUMPI CALLDATASIZE SWAP2 ADD PUSH1 0x24 ADD GT PUSH2 0x57F JUMPI DUP5 MLOAD SWAP7 PUSH1 0x20 SWAP8 DUP9 DUP2 ADD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP7 PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP6 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x511 JUMPI DUP9 MSTORE MLOAD DUP9 SWAP2 DUP3 SWAP2 SWAP1 DUP3 DUP6 GAS CALL PUSH2 0x2DD PUSH2 0x6A0 JUMP JUMPDEST DUP2 PUSH2 0x54F JUMPI JUMPDEST POP ISZERO PUSH2 0x525 JUMPI DUP6 MLOAD DUP9 DUP2 ADD SWAP1 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP3 MSTORE PUSH20 0x2626664C2603336E57B271C5C0B26F421741E481 PUSH1 0x24 DUP3 ADD MSTORE DUP6 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR PUSH2 0x511 JUMPI DUP9 MSTORE MLOAD DUP9 SWAP3 DUP4 SWAP3 SWAP1 DUP4 SWAP1 GAS CALL PUSH2 0x340 PUSH2 0x6A0 JUMP JUMPDEST DUP2 PUSH2 0x4E1 JUMPI JUMPDEST POP ISZERO PUSH2 0x4B8 JUMPI PUSH3 0xFFFFFF DUP7 SLOAD PUSH1 0xA0 SHR AND DUP6 MLOAD SWAP2 PUSH1 0xE0 DUP4 ADD SWAP1 DUP4 DUP3 LT SWAP1 DUP3 GT OR PUSH2 0x4A4 JUMPI DUP7 MSTORE DUP3 DUP3 MSTORE PUSH20 0x6B9BB36519538E0C073894E964E90172E1C0B41F DUP9 DUP4 ADD SWAP1 DUP2 MSTORE DUP3 DUP8 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x60 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP7 DUP2 MSTORE PUSH1 0xA0 DUP6 ADD DUP11 DUP2 MSTORE PUSH1 0xC0 DUP7 ADD DUP12 DUP2 MSTORE DUP11 MLOAD PUSH4 0x4E45AAF PUSH1 0xE0 SHL DUP2 MSTORE SWAP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP10 ADD MSTORE SWAP5 MLOAD DUP6 AND PUSH1 0x24 DUP9 ADD MSTORE SWAP5 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP8 ADD MSTORE SWAP2 MLOAD DUP4 AND PUSH1 0x64 DUP7 ADD MSTORE MLOAD PUSH1 0x84 DUP6 ADD MSTORE MLOAD PUSH1 0xA4 DUP5 ADD MSTORE SWAP1 MLOAD AND PUSH1 0xC4 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0xE4 DUP2 DUP10 PUSH20 0x2626664C2603336E57B271C5C0B26F421741E481 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x499 JUMPI DUP1 SWAP7 PUSH2 0x463 JUMPI JUMPDEST POP POP PUSH32 0x9CD20ED773BDBB537C6E6AB86E6A1068C4271B9EF6CC9A5E1C08BBA87ABAA926 SWAP2 PUSH1 0x60 SWAP2 DUP6 MLOAD SWAP2 DUP3 MSTORE DUP7 DUP9 DUP4 ADD MSTORE DUP6 DUP3 ADD MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP6 POP DUP7 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x492 JUMPI JUMPDEST PUSH2 0x47C DUP2 DUP4 PUSH2 0x668 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x48F JUMPI POP MLOAD SWAP4 DUP2 PUSH1 0x60 PUSH2 0x427 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x472 JUMP JUMPDEST DUP6 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP10 SWAP1 DUP4 ISZERO PUSH2 0x4F9 JUMPI JUMPDEST POP POP POP CODESIZE PUSH2 0x346 JUMP JUMPDEST PUSH2 0x509 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x6E0 JUMP JUMPDEST CODESIZE DUP9 DUP2 PUSH2 0x4F0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP11 SWAP1 DUP4 ISZERO PUSH2 0x567 JUMPI JUMPDEST POP POP POP CODESIZE PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x577 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x6E0 JUMP JUMPDEST CODESIZE DUP10 DUP2 PUSH2 0x55E JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x127 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x127 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x48F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x48F JUMPI PUSH2 0x5CF PUSH2 0x610 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x624 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x68A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x6DB JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x6CF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x668 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x6F8 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x6F8 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xB5 0x2F 0xE3 DUP9 0x4A DUP11 CODESIZE EQ 0x23 EQ 0xE1 0xF9 0xCA SHR GASLIMIT DUP6 JUMP 0xDB CALLCODE DUP10 0xB4 0xD0 0xBA BASEFEE POP 0xC 0x27 0xF8 0xE 0x4F 0x2F PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
              "sourceMap": "443:2332:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;443:2332:8;;;;-1:-1:-1;;;;;443:2332:8;;;;;;;;;;;;1063:62:0;;:::i;:::-;2162:22;;443:2332:8;;-1:-1:-1;443:2332:8;;-1:-1:-1;;;;;;443:2332:8;;;;;;;2566:40:0;443:2332:8;;2566:40:0;443:2332:8;;;;-1:-1:-1;;;443:2332:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;443:2332:8;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;443:2332:8;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;986:3:8;978:11;;;:26;;;;443:2332;978:42;;;443:2332;978:59;;;443:2332;974:122;;;-1:-1:-1;443:2332:8;;-1:-1:-1;;;;443:2332:8;;;;;;-1:-1:-1;;;443:2332:8;;;;;;974:122;443:2332;-1:-1:-1;;;1053:32:8;;443:2332;;1053:32;;443:2332;;;;;;-1:-1:-1;;;443:2332:8;;;;986:3;;1053:32;978:59;1032:5;1024:13;;;;978:59;;;:42;1016:4;1008:12;;;;-1:-1:-1;978:42:8;;:26;1001:3;993:11;;;;-1:-1:-1;978:26:8;;443:2332;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;443:2332:8;;;;;;;-1:-1:-1;;;;;443:2332:8;;;;;;;;;;;-1:-1:-1;;;;;443:2332:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:69:6;;;;782:28;;;;759:69;;;443:2332:8;759:69:6;;443:2332:8;1874:4;443:2332;;;;;;;;;;759:69:6;;443:2332:8;699:42;;;;;;;;;;;;;748:81:6;699:42:8;;;;748:81:6;699:42:8;748:81:6;;;;;:::i;:::-;847:57;;;443:2332:8;;;;;;;2032:58:6;;;2055:23;;;;2032:58;;1697:42:8;443:2332;2032:58:6;;443:2332:8;;;;;;;2032:58:6;;443:2332:8;699:42;;;;;;;;;;;;;2021:70:6;699:42:8;;;;;;;2021:70:6;;;;:::i;:::-;2109:57;;;443:2332:8;;;;;;699:42;;443:2332;699:42;443:2332;;;699:42;443:2332;699:42;;;;;;;;;;;;;;;;;;2312:335;;;699:42;;;2312:335;;;699:42;;;1338:10;443:2332;2312:335;;699:42;;;443:2332;2312:335;;699:42;;;443:2332;2312:335;;699:42;;;2312:335;;;699:42;;;443:2332;;-1:-1:-1;;;2731:35:8;;699:42;;-1:-1:-1;;;;;443:2332:8;;;;2731:35;;443:2332;699:42;;443:2332;;;699:42;;443:2332;699:42;;443:2332;;;699:42;;443:2332;699:42;;443:2332;;;699:42;;443:2332;699:42;443:2332;699:42;;443:2332;699:42;;;;443:2332;699:42;;443:2332;699:42;;;443:2332;2312:335;443:2332;699:42;443:2332;2312:335;1697:42;2731:35;;;;;;;;;;;443:2332;;;1376:44;443:2332;;;;;;;;;;;;;;;;;1376:44;443:2332;;;;;2731:35;;;;;;;;;;;;;;;;;;:::i;:::-;;;699:42;;;;-1:-1:-1;699:42:8;;;443:2332;2731:35;;699:42;443:2332;;2731:35;;;;;;443:2332;;699:42;;;;;;;;;-1:-1:-1;;;699:42:8;;;443:2332;699:42;443:2332;699:42;;443:2332;;;-1:-1:-1;;;443:2332:8;;;;;;;;;;;;;-1:-1:-1;;;443:2332:8;;;;;;;2109:57:6;443:2332:8;;2121:16:6;;;-1:-1:-1;2121:16:6;;:44;;;;2109:57;;;;;;;2121:44;2141:24;;-1:-1:-1;2141:24:6;;;;;;;:::i;:::-;2121:44;;;;;699:42:8;-1:-1:-1;;;699:42:8;;;443:2332;699:42;443:2332;699:42;;443:2332;;;-1:-1:-1;;;443:2332:8;;;;;;;;;;;;;-1:-1:-1;;;443:2332:8;;;;;;;847:57:6;443:2332:8;;859:16:6;;;-1:-1:-1;859:16:6;;:44;;;;847:57;;;;;;;859:44;879:24;;-1:-1:-1;879:24:6;;;;;;;:::i;:::-;859:44;;;;;443:2332:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;443:2332:8;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;443:2332:8;;-1:-1:-1;;;;;;443:2332:8;;;;;;-1:-1:-1;;;;;443:2332:8;2566:40:0;443:2332:8;;2566:40:0;443:2332:8;;1359:130:0;1273:6;443:2332:8;-1:-1:-1;;;;;443:2332:8;734:10:5;1422:23:0;443:2332:8;;1359:130:0:o;443:2332:8:-;;;;;;;;;;;;;;;;;;;;;;;;;699:42;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;443:2332;;;;;;;;;;;;;;;699:42;;;;-1:-1:-1;;699:42:8;443:2332;;;699:42;:::i;:::-;443:2332;;;-1:-1:-1;443:2332:8;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;443:2332:8;"
            },
            "methodIdentifiers": {
              "fee()": "ddca3f43",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setFee(uint24)": "eabb5622",
              "swap(uint256,address,address,bytes)": "a2c554d3",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_fee\",\"type\":\"uint24\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/adaptors/UniswapV3ViaRouter.sol\":\"UniswapV3ViaRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/core/adaptors/IUniswapV3.sol\":{\"keccak256\":\"0xc575e19c1c85986e801f258958952ed616d9bc853e5c1268f1ac70765c0a97ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://708d76a2f2247e278268613e310cc0964708ba6d901156627c90145899686572\",\"dweb:/ipfs/QmQDshFpndGkSLQgMNmTtg16cEcpxtVDozteqwhKLeedw2\"]},\"contracts/core/adaptors/UniswapV3ViaRouter.sol\":{\"keccak256\":\"0x52025d450697d7d5f99ed9346fba937f08555836bc2ef2af71408721cfdaa752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9ffc0be3a9e5224301bd46e398a77efec209ab41ed9c1f54960f65d2d9615a\",\"dweb:/ipfs/QmW1awS6h1qXaAcRageK4pqvNKWHM7MHK5cQdFJfQo5Wnj\"]},\"contracts/interfaces/IAMM.sol\":{\"keccak256\":\"0x955bf32e57ff51881796c2e2e0eb91b0d414e34618792b2aadf2197b62529b4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efac0a3f30deddc86bc6a1b01fbf0fdba1f85bdef49004b571f2e0b4e983bfd1\",\"dweb:/ipfs/QmYufh3HPEFKQuFpaGUFVbCvxJxYDYbKaUMSMKh6NVrVrw\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/Eater.sol": {
        "Eater": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/Eater.sol\":\"Eater\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x61dc76c5f99c11e66003c819e44a6632373c0b1a28439d7170a6a18ca2ec9745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dba78697427e16a13bfc5be2ea96ea317d26e7cb530a7727e50ff3539e618b6\",\"dweb:/ipfs/QmfVwv7cfqoCY3v67HtNf2wXzLF36wrVAb8pmCtYHBA9a7\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/GenericMerge.sol": {
        "GenericMerge": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_wewe",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 259,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080346100e857601f610f2938819003918201601f19168301916001600160401b038311848410176100ed5780849260409485528339810103126100e857610052602061004b83610103565b9201610103565b6001600081815581546001600160a81b0319811633600881811b610100600160a81b03169290921790945560405195946001600160a01b03949093909290911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360646002558160018060a01b0319931683600454161760045516906003541617600355610e1190816101188239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e85756fe6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610c8a5750806324a47aeb14610ba057806334fcf43714610aed57806335faa416146109985780635c975abb14610974578063679aefce14610955578063715018a6146108f15780638da5cb5b146108c05780638f4ffcb1146105ae57838163b6b55f251461052157508063c4ae31681461043e578063e1f26f2214610417578063ea9f24171461019a5763f2fde38b146100bf57600080fd5b34610196576020366003190112610196576100d8610caf565b6100e0610cca565b6001600160a01b0381811693909290841561014457505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103335788966103e4575b506101ef610d75565b6002548087029087820414871517156103d157606490049385838554169160248a5180948193825230898301525afa9081156103c7578991610396575b50841161033d5784875180926323b872dd60e01b8252818b816102538c30338c8501610db9565b03925af1801561033357918593916102a1989593610316575b508154855163a9059cbb60e01b815233938101938452602084019490945292978893919091169183918a918391604090910190565b03925af193841561030c577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c893946102df575b50519283523392a280f35b6102fe90833d8511610305575b6102f68183610d25565b810190610d5d565b50386102d4565b503d6102ec565b81513d87823e3d90fd5b61032c90853d8711610305576102f68183610d25565b503861026c565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d83116103c0575b6103ad8183610d25565b810103126103bc57513861022c565b8880fd5b503d6103a3565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d8311610410575b6103fc8183610d25565b8101031261040c575194386101e6565b8780fd5b503d6103f2565b50346101965782600319360112610196575490516001600160a01b03909116815260209150f35b5034610196578260031936011261019657610457610cca565b60015460ff8116156104e057506001549060ff8216156104a6575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893610511610d75565b60ff19161760015551338152a180f35b808484346105aa5760203660031901126105aa57610572602091610543610cca565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501610db9565b03925af19081156105a15750610586575080f35b61059d9060203d8111610305576102f68183610d25565b5080f35b513d84823e3d90fd5b5050fd5b5034610196576080366003190112610196576105c8610caf565b602480359290916001600160a01b0391604435838116036108bc5760643567ffffffffffffffff8082116103bc57366023830112156103bc57818301359081116103bc573691018501116108bc57600287541461087a576002875561062b610d75565b826003541690811561082c5761063f610d75565b60025480870290878204148715171561081a5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610810578b916107df575b508411610788575085885180926323b872dd60e01b8252818c816106ae8d308c8b8501610db9565b03925af180156103c75791610702989391879361076b575b508054845163a9059cbb60e01b81526001600160a01b03871692810192835260208301939093529198899287169183918c918391604090910190565b03925af1958615610761577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c89596610744575b50519485521692a26001815580f35b61075a90853d8711610305576102f68183610d25565b5038610735565b81513d89823e3d90fd5b61078190843d8611610305576102f68183610d25565b50386106c6565b82602d608492898c519362461bcd60e51b85528401528201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d8311610809575b6107f68183610d25565b81010312610805575138610686565b8a80fd5b503d6107ec565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346108ed57816003193601126108ed57600154905160089190911c6001600160a01b03168152602090f35b5080fd5b833461095257806003193601126109525761090a610cca565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108ed57816003193601126108ed576020906002549051908152f35b5050346108ed57816003193601126108ed5760209060ff6001541690519015158152f35b509190346108ed57816003193601126108ed576109b3610cca565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610ae3578697610ab0575b508615610a6d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af1908115610a645750610a47578280f35b81610a5d92903d10610305576102f68183610d25565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610adc575b610ac88183610d25565b81010312610ad8575195386109ee565b8580fd5b503d610abe565b84513d88823e3d90fd5b50903461019657602036600319011261019657813591610b0b610cca565b8215610b5357508160025403610b1f578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b503461019657602080600319360112610c865760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa80156103c75787918a91610c55575b5010610c00576101ef610d75565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610c7f575b610c6e8183610d25565b810103126103bc5786905138610bf2565b503d610c64565b8380fd5b8490346108ed57816003193601126108ed576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610cc557565b600080fd5b60015460081c6001600160a01b03163303610ce157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610d4757604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610cc557518015158103610cc55790565b60ff60015416610d8157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea2646970667358221220b0ba7ea01899734e38fa1aafd554889c41bff36d3ca9ed6e66754529fa69001664736f6c63430008130033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x1F PUSH2 0xF29 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE8 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP3 ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH2 0xE11 SWAP1 DUP2 PUSH2 0x118 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE8 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xC8A JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xAED JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5AE JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x521 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x19A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0xD8 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x144 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x333 JUMPI DUP9 SWAP7 PUSH2 0x3E4 JUMPI JUMPDEST POP PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3C7 JUMPI DUP10 SWAP2 PUSH2 0x396 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x33D JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x253 DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x333 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x2A1 SWAP9 SWAP6 SWAP4 PUSH2 0x316 JUMPI JUMPDEST POP DUP2 SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP8 DUP9 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP11 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x30C JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP4 SWAP5 PUSH2 0x2DF JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2FE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x305 JUMPI JUMPDEST PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD5D JUMP JUMPDEST POP CODESIZE PUSH2 0x2D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EC JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x26C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3C0 JUMPI JUMPDEST PUSH2 0x3AD DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI MLOAD CODESIZE PUSH2 0x22C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3A3 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x410 JUMPI JUMPDEST PUSH2 0x3FC DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40C JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1E6 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x457 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4A6 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x511 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x572 PUSH1 0x20 SWAP2 PUSH2 0x543 PUSH2 0xCCA JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5A1 JUMPI POP PUSH2 0x586 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x59D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x5C8 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x8BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x3BC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3BC JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3BC JUMPI CALLDATASIZE SWAP2 ADD DUP6 ADD GT PUSH2 0x8BC JUMPI PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x87A JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x62B PUSH2 0xD75 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x82C JUMPI PUSH2 0x63F PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x810 JUMPI DUP12 SWAP2 PUSH2 0x7DF JUMPI JUMPDEST POP DUP5 GT PUSH2 0x788 JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x6AE DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3C7 JUMPI SWAP2 PUSH2 0x702 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x76B JUMPI JUMPDEST POP DUP1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP9 DUP10 SWAP3 DUP8 AND SWAP2 DUP4 SWAP2 DUP13 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x761 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 PUSH2 0x744 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x75A SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x735 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x781 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x6C6 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x809 JUMPI JUMPDEST PUSH2 0x7F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x805 JUMPI MLOAD CODESIZE PUSH2 0x686 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EC JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x952 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x952 JUMPI PUSH2 0x90A PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH2 0x9B3 PUSH2 0xCCA JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xAE3 JUMPI DUP7 SWAP8 PUSH2 0xAB0 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA64 JUMPI POP PUSH2 0xA47 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xA5D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xADC JUMPI JUMPDEST PUSH2 0xAC8 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD8 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x9EE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xABE JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB0B PUSH2 0xCCA JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xB1F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC86 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xC55 JUMPI JUMPDEST POP LT PUSH2 0xC00 JUMPI PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xC7F JUMPI JUMPDEST PUSH2 0xC6E DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xBF2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC64 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCC5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD47 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xCC5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xCC5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xBA PUSH31 0xA01899734E38FA1AAFD554889C41BFF36D3CA9ED6E66754529FA6900166473 PUSH16 0x6C634300081300330000000000000000 ",
              "sourceMap": "303:961:10:-:0;;;;;;;;;;;;;-1:-1:-1;;303:961:10;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;303:961:10;;;;;-1:-1:-1;;;;;;303:961:10;;734:10:5;303:961:10;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;;;-1:-1:-1;;;;;303:961:10;;;734:10:5;;303:961:10;;;;;;2566:40:0;;-1:-1:-1;2566:40:0;498:3:10;490:11;303:961;;;;;;;;;;;511:12;303:961;;;511:12;303:961;;;533:14;303:961;;;533:14;303:961;;;;;;;;;-1:-1:-1;303:961:10;;;;;;-1:-1:-1;303:961:10;;;;;-1:-1:-1;303:961:10;;;;-1:-1:-1;;;;;303:961:10;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3247,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3421,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 3513,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3365,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 3274,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 3445,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816321df0da714610c8a5750806324a47aeb14610ba057806334fcf43714610aed57806335faa416146109985780635c975abb14610974578063679aefce14610955578063715018a6146108f15780638da5cb5b146108c05780638f4ffcb1146105ae57838163b6b55f251461052157508063c4ae31681461043e578063e1f26f2214610417578063ea9f24171461019a5763f2fde38b146100bf57600080fd5b34610196576020366003190112610196576100d8610caf565b6100e0610cca565b6001600160a01b0381811693909290841561014457505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019657826003193601126101965760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103335788966103e4575b506101ef610d75565b6002548087029087820414871517156103d157606490049385838554169160248a5180948193825230898301525afa9081156103c7578991610396575b50841161033d5784875180926323b872dd60e01b8252818b816102538c30338c8501610db9565b03925af1801561033357918593916102a1989593610316575b508154855163a9059cbb60e01b815233938101938452602084019490945292978893919091169183918a918391604090910190565b03925af193841561030c577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c893946102df575b50519283523392a280f35b6102fe90833d8511610305575b6102f68183610d25565b810190610d5d565b50386102d4565b503d6102ec565b81513d87823e3d90fd5b61032c90853d8711610305576102f68183610d25565b503861026c565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d60248201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d83116103c0575b6103ad8183610d25565b810103126103bc57513861022c565b8880fd5b503d6103a3565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d8311610410575b6103fc8183610d25565b8101031261040c575194386101e6565b8780fd5b503d6103f2565b50346101965782600319360112610196575490516001600160a01b03909116815260209150f35b5034610196578260031936011261019657610457610cca565b60015460ff8116156104e057506001549060ff8216156104a6575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25893610511610d75565b60ff19161760015551338152a180f35b808484346105aa5760203660031901126105aa57610572602091610543610cca565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501610db9565b03925af19081156105a15750610586575080f35b61059d9060203d8111610305576102f68183610d25565b5080f35b513d84823e3d90fd5b5050fd5b5034610196576080366003190112610196576105c8610caf565b602480359290916001600160a01b0391604435838116036108bc5760643567ffffffffffffffff8082116103bc57366023830112156103bc57818301359081116103bc573691018501116108bc57600287541461087a576002875561062b610d75565b826003541690811561082c5761063f610d75565b60025480870290878204148715171561081a5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610810578b916107df575b508411610788575085885180926323b872dd60e01b8252818c816106ae8d308c8b8501610db9565b03925af180156103c75791610702989391879361076b575b508054845163a9059cbb60e01b81526001600160a01b03871692810192835260208301939093529198899287169183918c918391604090910190565b03925af1958615610761577fadc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c89596610744575b50519485521692a26001815580f35b61075a90853d8711610305576102f68183610d25565b5038610735565b81513d89823e3d90fd5b61078190843d8611610305576102f68183610d25565b50386106c6565b82602d608492898c519362461bcd60e51b85528401528201527f45617465723a20496e73756666696369656e7420746f6b656e2062616c616e6360448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d8311610809575b6107f68183610d25565b81010312610805575138610686565b8a80fd5b503d6107ec565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346108ed57816003193601126108ed57600154905160089190911c6001600160a01b03168152602090f35b5080fd5b833461095257806003193601126109525761090a610cca565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108ed57816003193601126108ed576020906002549051908152f35b5050346108ed57816003193601126108ed5760209060ff6001541690519015158152f35b509190346108ed57816003193601126108ed576109b3610cca565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610ae3578697610ab0575b508615610a6d57600154845163a9059cbb60e01b81526001600160a01b0360089290921c90921616918101918252602082018790529291849184919082908890829060400103925af1908115610a645750610a47578280f35b81610a5d92903d10610305576102f68183610d25565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610adc575b610ac88183610d25565b81010312610ad8575195386109ee565b8580fd5b503d610abe565b84513d88823e3d90fd5b50903461019657602036600319011261019657813591610b0b610cca565b8215610b5357508160025403610b1f578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b503461019657602080600319360112610c865760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa80156103c75787918a91610c55575b5010610c00576101ef610d75565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610c7f575b610c6e8183610d25565b810103126103bc5786905138610bf2565b503d610c64565b8380fd5b8490346108ed57816003193601126108ed576003546001600160a01b03168152602090f35b600435906001600160a01b0382168203610cc557565b600080fd5b60015460081c6001600160a01b03163303610ce157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff821117610d4757604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610cc557518015158103610cc55790565b60ff60015416610d8157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fea2646970667358221220b0ba7ea01899734e38fa1aafd554889c41bff36d3ca9ed6e66754529fa69001664736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x21DF0DA7 EQ PUSH2 0xC8A JUMPI POP DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xAED JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x998 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x955 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8C0 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x5AE JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x521 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x19A JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0xD8 PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xE0 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x144 JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x333 JUMPI DUP9 SWAP7 PUSH2 0x3E4 JUMPI JUMPDEST POP PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3C7 JUMPI DUP10 SWAP2 PUSH2 0x396 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x33D JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x253 DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x333 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x2A1 SWAP9 SWAP6 SWAP4 PUSH2 0x316 JUMPI JUMPDEST POP DUP2 SLOAD DUP6 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP8 DUP9 SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP11 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x30C JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP4 SWAP5 PUSH2 0x2DF JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2FE SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x305 JUMPI JUMPDEST PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xD5D JUMP JUMPDEST POP CODESIZE PUSH2 0x2D4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EC JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x32C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x26C JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3C0 JUMPI JUMPDEST PUSH2 0x3AD DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI MLOAD CODESIZE PUSH2 0x22C JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3A3 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x410 JUMPI JUMPDEST PUSH2 0x3FC DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x40C JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1E6 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3F2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x196 JUMPI PUSH2 0x457 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4E0 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x4A6 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x511 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x5AA JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x5AA JUMPI PUSH2 0x572 PUSH1 0x20 SWAP2 PUSH2 0x543 PUSH2 0xCCA JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5A1 JUMPI POP PUSH2 0x586 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x59D SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI PUSH2 0x5C8 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x8BC JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x3BC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3BC JUMPI DUP2 DUP4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x3BC JUMPI CALLDATASIZE SWAP2 ADD DUP6 ADD GT PUSH2 0x8BC JUMPI PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x87A JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x62B PUSH2 0xD75 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x82C JUMPI PUSH2 0x63F PUSH2 0xD75 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x81A JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x810 JUMPI DUP12 SWAP2 PUSH2 0x7DF JUMPI JUMPDEST POP DUP5 GT PUSH2 0x788 JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x6AE DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0xDB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3C7 JUMPI SWAP2 PUSH2 0x702 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x76B JUMPI JUMPDEST POP DUP1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 SWAP9 DUP10 SWAP3 DUP8 AND SWAP2 DUP4 SWAP2 DUP13 SWAP2 DUP4 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x761 JUMPI PUSH32 0xADC41BA80FFA0859AAB1D7CF405A6633A6AF94FC3D10E5B0E0BF46CDCC0FD9C8 SWAP6 SWAP7 PUSH2 0x744 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x75A SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x735 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x781 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP CODESIZE PUSH2 0x6C6 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x45617465723A20496E73756666696369656E7420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x809 JUMPI JUMPDEST PUSH2 0x7F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x805 JUMPI MLOAD CODESIZE PUSH2 0x686 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x7EC JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x952 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x952 JUMPI PUSH2 0x90A PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH2 0x9B3 PUSH2 0xCCA JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xAE3 JUMPI DUP7 SWAP8 PUSH2 0xAB0 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0xA6D JUMPI PUSH1 0x1 SLOAD DUP5 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHR SWAP1 SWAP3 AND AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP2 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xA64 JUMPI POP PUSH2 0xA47 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0xA5D SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x305 JUMPI PUSH2 0x2F6 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xADC JUMPI JUMPDEST PUSH2 0xAC8 DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAD8 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x9EE JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xABE JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x196 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB0B PUSH2 0xCCA JUMP JUMPDEST DUP3 ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xB1F JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x196 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC86 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xC55 JUMPI JUMPDEST POP LT PUSH2 0xC00 JUMPI PUSH2 0x1EF PUSH2 0xD75 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xC7F JUMPI JUMPDEST PUSH2 0xC6E DUP2 DUP4 PUSH2 0xD25 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3BC JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xBF2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC64 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP5 SWAP1 CALLVALUE PUSH2 0x8ED JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8ED JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCC5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCE1 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD47 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xCC5 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xCC5 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0xD81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xBA PUSH31 0xA01899734E38FA1AAFD554889C41BFF36D3CA9ED6E66754529FA6900166473 PUSH16 0x6C634300081300330000000000000000 ",
              "sourceMap": "303:961:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;303:961:10;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;303:961:10;;;;;;;2162:22:0;;303:961:10;;-1:-1:-1;;303:961:10;;;-1:-1:-1;;;;;;303:961:10;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;2566:40:0;;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;790:36:10;;;815:10;790:36;;;303:961;;;790:36;;-1:-1:-1;;;;;303:961:10;;;790:36;303:961;;;;790:36;;;;;;;;;;;303:961;1204:72:1;;;:::i;:::-;918:5:9;303:961:10;;;;;;;;;;;;;;;927:3:9;303:961:10;;;;;;;;;;;;979:37:9;;;;;;1010:4;979:37;;;303:961:10;979:37:9;;;;;;;;;;;303:961:10;961:55:9;;;303:961:10;;;;;;;;;;1098:55:9;;1010:4;;;1098:55;1010:4;;815:10:10;1098:55:9;;;;:::i;:::-;;;;;;;;;;;;;1163:43;1098:55;;;;;303:961:10;-1:-1:-1;303:961:10;;;;-1:-1:-1;;;1163:43:9;;815:10:10;1163:43:9;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:43:9;;;;;;;;;;1222:20;1163:43;;;;303:961:10;;;;;;815:10;1222:20:9;;303:961:10;;1163:43:9;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;303:961:10;;;;;;;;;1098:55:9;;;;;;;;;;;;;:::i;:::-;;;;;;303:961:10;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;927:3:9;303:961:10;;;;;;979:37:9;;;;;;;;;;;;;;;;:::i;:::-;;;303:961:10;;;;;979:37:9;;;303:961:10;;;;979:37:9;;;;;;303:961:10;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;790:36;;;;;;;;;;;;;;;;;:::i;:::-;;;303:961;;;;;790:36;;;;303:961;;;;790:36;;;;;303:961;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;;-1:-1:-1;303:961:10;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;303:961:10;;;;;;;;1685:7:1;303:961:10;;;;;;;;-1:-1:-1;;;303:961:10;1685:7:1;303:961:10;;734:10:5;303:961:10;;2521:22:1;;303:961:10;;2521:22:1;303:961:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;2005:88:9;303:961:10;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;303:961:10;;1685:7:1;303:961:10;;734:10:5;303:961:10;;2274:20:1;303:961:10;;;;;;;;;;;-1:-1:-1;;303:961:10;;;;2158:60:9;303:961:10;1063:62:0;;;:::i;:::-;303:961:10;;;;-1:-1:-1;;;2158:60:9;;303:961:10;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;;2204:4:9;;2184:10;;2158:60;;;:::i;:::-;;;;;;;;;;;;;303:961:10;;;2158:60:9;;;303:961:10;2158:60:9;;;;;;;;;:::i;:::-;;303:961:10;;2158:60:9;303:961:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;303:961:10;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;303:961:10;;2468:19:2;1759:1;;;;;1204:72:1;;:::i;:::-;303:961:10;;;;1768:20:9;;;303:961:10;;1204:72:1;;:::i;:::-;1759:1:2;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:37:9;;1010:4;979:37;;;303:961:10;;;;979:37:9;;;;;;;;;;;;;;303:961:10;961:55:9;;;303:961:10;;;;;;;;;;;1098:55:9;;1010:4;;;1098:55;1010:4;;1098:55;;;;;:::i;:::-;;;;;;;;;;1163:43;1098:55;;;;;;;303:961:10;-1:-1:-1;303:961:10;;;;-1:-1:-1;;;1163:43:9;;-1:-1:-1;;;;;303:961:10;;1163:43:9;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1163:43:9;;;;;;;;;;1222:20;1163:43;;;;303:961:10;;;;;;;1222:20:9;;303:961:10;1759:1:2;;303:961:10;;1163:43:9;;;;;;;;;;;;;:::i;:::-;;;;;;303:961:10;;;;;;;;;1098:55:9;;;;;;;;;;;;;:::i;:::-;;;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;979:37:9;;;;;;;;;;;;;;;;:::i;:::-;;;303:961:10;;;;;979:37:9;;;303:961:10;;;;979:37:9;;;;;;303:961:10;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;1759:1:2;303:961:10;;;;;;;;;;;1759:1:2;;;;;;;303:961:10;1759:1:2;303:961:10;;;1759:1:2;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;303:961:10;;-1:-1:-1;;;;;;303:961:10;;;;;;;;;-1:-1:-1;;;;;303:961:10;2566:40:0;303:961:10;;2566:40:0;303:961:10;;;;;;;;;;;;;;;;;;;;;628:5;303:961;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;303:961:10;;;;-1:-1:-1;;;1319:37:9;;1350:4;1319:37;;;303:961:10;;1319:37:9;;303:961:10;-1:-1:-1;;;;;303:961:10;;;;;1319:37:9;303:961:10;;;;1319:37:9;;;;;;;;;;;303:961:10;1374:11:9;;;303:961:10;;;;;;-1:-1:-1;;;1426:39:9;;-1:-1:-1;;;;;303:961:10;;;;;;;;;1426:39:9;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;1426:39:9;;;;;;;;;;;;303:961:10;;;1426:39:9;;;;;;-1:-1:-1;1426:39:9;;;;;;:::i;:::-;;;;303:961:10;;;1426:39:9;303:961:10;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;;;;;;;;;;1319:37:9;;;;;;;;;;;;;;;;;:::i;:::-;;;303:961:10;;;;;1319:37:9;;;;303:961:10;;;;1319:37:9;;;;;;303:961:10;;;;;;;;;;;;;;;;;-1:-1:-1;;303:961:10;;;;;;1063:62:0;;;:::i;:::-;627:8:9;;303:961:10;;;;689:5:9;303:961:10;689:13:9;685:92;;303:961:10;;;685:92:9;1759:1:2;303:961:10;1759:1:2;749:17:9;1759:1:2;689:5:9;1759:1:2;303:961:10;;;;749:17:9;685:92;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;952:36:10;;;977:10;952:36;;;303:961;;;;;;;;-1:-1:-1;;;;;303:961:10;;;;952:36;303:961;;;;952:36;;;;;;;;;;;;303:961;1006:17;;303:961;;1204:72:1;;:::i;303:961:10:-;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;952:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;303:961;;;;;;;952:36;;;;;;;;303:961;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;:::o;:::-;;;;1359:130:0;303:961:10;;;;-1:-1:-1;;;;;303:961:10;734:10:5;1422:23:0;303:961:10;;1359:130:0:o;303:961:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1767:106:1:-;303:961:10;1685:7:1;303:961:10;;;;1767:106:1:o;303:961:10:-;;;-1:-1:-1;;;303:961:10;;;;;;;;;;;;-1:-1:-1;;;303:961:10;;;;;;;;-1:-1:-1;;;;;303:961:10;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wewe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/GenericMerge.sol\":\"GenericMerge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x61dc76c5f99c11e66003c819e44a6632373c0b1a28439d7170a6a18ca2ec9745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dba78697427e16a13bfc5be2ea96ea317d26e7cb530a7727e50ff3539e618b6\",\"dweb:/ipfs/QmfVwv7cfqoCY3v67HtNf2wXzLF36wrVAb8pmCtYHBA9a7\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x6b01c30fcdcac50ccce22675ba3b286ef187b39f4d00410cc570a1d6e2b180a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://330fb548f1f109195b1f29452d1598f396b2a8c8da6aca0f19ecabef3ed4bc39\",\"dweb:/ipfs/QmcKjJpkaE1Dz6E48cMDXc3aBGAwdyr957HHrKMFRwSsGY\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/core/merge/MergeWithMarket.sol": {
        "MergeWithMarket": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_wewe",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Merged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IAMM",
                  "name": "amm",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "mergeAndSell",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sweep",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "togglePause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "wewe",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 259,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080346100e857601f6112d738819003918201601f19168301916001600160401b038311848410176100ed5780849260409485528339810103126100e857610052602061004b83610103565b9201610103565b6001600081815581546001600160a81b0319811633600881811b610100600160a81b03169290921790945560405195946001600160a01b03949093909290911c8416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360646002558160018060a01b03199316836004541617600455169060035416176003556111bf90816101188239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100e85756fe6080604081815260048036101561001557600080fd5b600092833560e01c908163213897fe14610c245750806321df0da714610bfb57806324a47aeb14610b1157806334fcf43714610a5e57806335faa4161461091b5780635c975abb146108f7578063679aefce146108d8578063715018a6146108745780638da5cb5b146108435780638f4ffcb11461058157838163b6b55f25146104f457508063c4ae316814610411578063e1f26f22146103ea578063ea9f2417146101a55763f2fde38b146100ca57600080fd5b346101a15760203660031901126101a1576100e3611007565b6100eb61101d565b6001600160a01b0381811693909290841561014f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50346101a157826003193601126101a15760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103185788966103b7575b506101fa6110e3565b6002548087029087820414871517156103a457606490049385838554169160248a5180948193825230898301525afa90811561039a578991610369575b5084116103225784875180926323b872dd60e01b8252818b8161025e8c30338c8501611127565b03925af1801561031857918593916102989895936102fb575b508154169088855180998195829463a9059cbb60e01b8452339084016110c8565b03925af19384156102f15760008051602061116a83398151915293946102c4575b50519283523392a280f35b6102e390833d85116102ea575b6102db8183611078565b8101906110b0565b50386102b9565b503d6102d1565b81513d87823e3d90fd5b61031190853d87116102ea576102db8183611078565b5038610277565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d602482015260008051602061114a83398151915260448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d8311610393575b6103808183611078565b8101031261038f575138610237565b8880fd5b503d610376565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d83116103e3575b6103cf8183611078565b810103126103df575194386101f1565b8780fd5b503d6103c5565b50346101a157826003193601126101a1575490516001600160a01b03909116815260209150f35b50346101a157826003193601126101a15761042a61101d565b60015460ff8116156104b357506001549060ff821615610479575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258936104e46110e3565b60ff19161760015551338152a180f35b8084843461057d57602036600319011261057d5761054560209161051661101d565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501611127565b03925af19081156105745750610559575080f35b6105709060203d81116102ea576102db8183611078565b5080f35b513d84823e3d90fd5b5050fd5b50346101a15760803660031901126101a15761059b611007565b602480359290916001600160a01b03916044358381160361083f5760643567ffffffffffffffff81116103df576105d59036908301610fd4565b505060028754146107fd57600287556105ec6110e3565b82600354169081156107af576106006110e3565b60025480870290878204148715171561079d5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610793578b91610762575b50841161071d575085885180926323b872dd60e01b8252818c8161066f8d308c8b8501611127565b03925af1801561039a57916106a99893918793610700575b50848a878354169286519b8c958694859363a9059cbb60e01b855284016110c8565b03925af19586156106f65760008051602061116a83398151915295966106d9575b50519485521692a26001815580f35b6106ef90853d87116102ea576102db8183611078565b50386106ca565b81513d89823e3d90fd5b61071690843d86116102ea576102db8183611078565b5038610687565b82602d608492898c519362461bcd60e51b855284015282015260008051602061114a83398151915260448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d831161078c575b6107798183611078565b81010312610788575138610647565b8a80fd5b503d61076f565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b505034610870578160031936011261087057600154905160089190911c6001600160a01b03168152602090f35b5080fd5b83346108d557806003193601126108d55761088d61101d565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108705781600319360112610870576020906002549051908152f35b50503461087057816003193601126108705760209060ff6001541690519015158152f35b5091903461087057816003193601126108705761093661101d565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610a54578697610a21575b5086156109de576109a49392859287899360015460081c169186519788958694859363a9059cbb60e01b855284016110c8565b03925af19081156109d557506109b8578280f35b816109ce92903d106102ea576102db8183611078565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610a4d575b610a398183611078565b81010312610a4957519538610971565b8580fd5b503d610a2f565b84513d88823e3d90fd5b5090346101a15760203660031901126101a157813591610a7c61101d565b8215610ac457508160025403610a90578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b50346101a157602080600319360112610bf75760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa801561039a5787918a91610bc6575b5010610b71576101fa6110e3565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610bf0575b610bdf8183611078565b8101031261038f5786905138610b63565b503d610bd5565b8380fd5b50503461087057816003193601126108705760035490516001600160a01b039091168152602090f35b92905034610bf7576060366003190112610bf7576001600160a01b03916024908135848116918035918390036103df5760443567ffffffffffffffff811161038f57610c739036908301610fd4565b909680600354166370a0823160e01b90818b5233858c015260209a8b818a81855afa908d8215610fc957908892610f98575b5010610f4157610cb36110e3565b600254808702908782041487151715610f2f5760649004918b84875416918a8c51809481938252308b8301525afa908115610f25578d91610ef4575b508211610eae5788516323b872dd60e01b81528c95949392918c908290818981610d1d8d3033848f01611127565b03925af18015610ea45786928d92610d5592610e87575b5084875416908c5194858094819363a9059cbb60e01b8352338c84016110c8565b03925af18015610e6057610e6a575b50875185815260008051602061116a8339815191528b3392a2600354885163095ea7b360e01b8152908b9082908416818881610da38c8e8c84016110c8565b03925af18015610e6057928b989796959492819260a495610e43575b50600354169a8a519b8c998a98899663a2c554d360e01b885287015285015230604485015260806064850152816084850152848401378181018301849052601f01601f191681010301925af19081156109d55750610e1b578280f35b813d8311610e3c575b610e2e8183611078565b810103126108d55738808280f35b503d610e24565b610e59908b3d8d116102ea576102db8183611078565b5038610dbf565b89513d87823e3d90fd5b610e80908b3d8d116102ea576102db8183611078565b5038610d64565b610e9d90843d86116102ea576102db8183611078565b5038610d34565b8a513d88823e3d90fd5b885162461bcd60e51b81528086018c9052602d818a015260008051602061114a83398151915260448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508b81813d8311610f1e575b610f0b8183611078565b81010312610f1a575138610cef565b8c80fd5b503d610f01565b8a513d8f823e3d90fd5b634e487b7160e01b8d5260118652888dfd5b885162461bcd60e51b81528086018c9052602c818a01527f4d65726765576974684d61726b65743a20496e73756666696369656e7420626160448201526b1b185b98d9481d1bc819585d60a21b6064820152608490fd5b8092508d8092503d8311610fc2575b610fb18183611078565b81010312610f1a5786905138610ca5565b503d610fa7565b8b51903d90823e3d90fd5b9181601f840112156110025782359167ffffffffffffffff8311611002576020838186019501011161100257565b600080fd5b600435906001600160a01b038216820361100257565b60015460081c6001600160a01b0316330361103457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761109a57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312611002575180151581036110025790565b6001600160a01b039091168152602081019190915260400190565b60ff600154166110ef57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fe45617465723a20496e73756666696369656e7420746f6b656e2062616c616e63adc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8a2646970667358221220ecc550b5f055519d981446bfb997c6fa7f9cf2ebc057805e125dd0a1b1cf5ad264736f6c63430008130033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xE8 JUMPI PUSH1 0x1F PUSH2 0x12D7 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE8 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP3 ADD PUSH2 0x103 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SHR DUP5 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x64 PUSH1 0x2 SSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE AND SWAP1 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH2 0x11BF SWAP1 DUP2 PUSH2 0x118 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE8 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x213897FE EQ PUSH2 0xC24 JUMPI POP DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xBFB JUMPI DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xB11 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xA5E JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x8F7 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x874 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x843 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x581 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x4F4 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1A5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0xE3 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x14F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x318 JUMPI DUP9 SWAP7 PUSH2 0x3B7 JUMPI JUMPDEST POP PUSH2 0x1FA PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x39A JUMPI DUP10 SWAP2 PUSH2 0x369 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x322 JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x25E DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x318 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x298 SWAP9 SWAP6 SWAP4 PUSH2 0x2FB JUMPI JUMPDEST POP DUP2 SLOAD AND SWAP1 DUP9 DUP6 MLOAD DUP1 SWAP10 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x116A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP5 PUSH2 0x2C4 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2E3 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x2EA JUMPI JUMPDEST PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST POP CODESIZE PUSH2 0x2B9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2D1 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x311 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0x277 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x114A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x393 JUMPI JUMPDEST PUSH2 0x380 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x38F JUMPI MLOAD CODESIZE PUSH2 0x237 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x376 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E3 JUMPI JUMPDEST PUSH2 0x3CF DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DF JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1F1 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3C5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x42A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4B3 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x479 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x4E4 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x57D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x57D JUMPI PUSH2 0x545 PUSH1 0x20 SWAP2 PUSH2 0x516 PUSH2 0x101D JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI POP PUSH2 0x559 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x570 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x59B PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x83F JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3DF JUMPI PUSH2 0x5D5 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xFD4 JUMP JUMPDEST POP POP PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x7FD JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x5EC PUSH2 0x10E3 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x7AF JUMPI PUSH2 0x600 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x79D JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x793 JUMPI DUP12 SWAP2 PUSH2 0x762 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x71D JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x66F DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x39A JUMPI SWAP2 PUSH2 0x6A9 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x700 JUMPI JUMPDEST POP DUP5 DUP11 DUP8 DUP4 SLOAD AND SWAP3 DUP7 MLOAD SWAP12 DUP13 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x116A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH2 0x6D9 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x6EF SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0x6CA JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x716 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0x687 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x114A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x78C JUMPI JUMPDEST PUSH2 0x779 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x788 JUMPI MLOAD CODESIZE PUSH2 0x647 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x76F JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8D5 JUMPI PUSH2 0x88D PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH2 0x936 PUSH2 0x101D JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xA54 JUMPI DUP7 SWAP8 PUSH2 0xA21 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9A4 SWAP4 SWAP3 DUP6 SWAP3 DUP8 DUP10 SWAP4 PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND SWAP2 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D5 JUMPI POP PUSH2 0x9B8 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x9CE SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA4D JUMPI JUMPDEST PUSH2 0xA39 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA49 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x971 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA2F JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xA7C PUSH2 0x101D JUMP JUMPDEST DUP3 ISZERO PUSH2 0xAC4 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xA90 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF7 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x39A JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xBC6 JUMPI JUMPDEST POP LT PUSH2 0xB71 JUMPI PUSH2 0x1FA PUSH2 0x10E3 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xBF0 JUMPI JUMPDEST PUSH2 0xBDF DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x38F JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xB63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBD5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP3 SWAP1 POP CALLVALUE PUSH2 0xBF7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xBF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD DUP5 DUP2 AND SWAP2 DUP1 CALLDATALOAD SWAP2 DUP4 SWAP1 SUB PUSH2 0x3DF JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x38F JUMPI PUSH2 0xC73 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP1 SWAP7 DUP1 PUSH1 0x3 SLOAD AND PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP12 MSTORE CALLER DUP6 DUP13 ADD MSTORE PUSH1 0x20 SWAP11 DUP12 DUP2 DUP11 DUP2 DUP6 GAS STATICCALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0xFC9 JUMPI SWAP1 DUP9 SWAP3 PUSH2 0xF98 JUMPI JUMPDEST POP LT PUSH2 0xF41 JUMPI PUSH2 0xCB3 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xF2F JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP12 DUP5 DUP8 SLOAD AND SWAP2 DUP11 DUP13 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP12 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xF25 JUMPI DUP14 SWAP2 PUSH2 0xEF4 JUMPI JUMPDEST POP DUP3 GT PUSH2 0xEAE JUMPI DUP9 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE DUP13 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP13 SWAP1 DUP3 SWAP1 DUP2 DUP10 DUP2 PUSH2 0xD1D DUP14 ADDRESS CALLER DUP5 DUP16 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xEA4 JUMPI DUP7 SWAP3 DUP14 SWAP3 PUSH2 0xD55 SWAP3 PUSH2 0xE87 JUMPI JUMPDEST POP DUP5 DUP8 SLOAD AND SWAP1 DUP13 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP13 DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE6A JUMPI JUMPDEST POP DUP8 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x116A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 CALLER SWAP3 LOG2 PUSH1 0x3 SLOAD DUP9 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP12 SWAP1 DUP3 SWAP1 DUP5 AND DUP2 DUP9 DUP2 PUSH2 0xDA3 DUP13 DUP15 DUP13 DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xE60 JUMPI SWAP3 DUP12 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP3 DUP2 SWAP3 PUSH1 0xA4 SWAP6 PUSH2 0xE43 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD AND SWAP11 DUP11 MLOAD SWAP12 DUP13 SWAP10 DUP11 SWAP9 DUP10 SWAP7 PUSH4 0xA2C554D3 PUSH1 0xE0 SHL DUP9 MSTORE DUP8 ADD MSTORE DUP6 ADD MSTORE ADDRESS PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD MSTORE DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D5 JUMPI POP PUSH2 0xE1B JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE3C JUMPI JUMPDEST PUSH2 0xE2E DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8D5 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0xE24 JUMP JUMPDEST PUSH2 0xE59 SWAP1 DUP12 RETURNDATASIZE DUP14 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0xDBF JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xE80 SWAP1 DUP12 RETURNDATASIZE DUP14 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xE9D SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0xD34 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP13 SWAP1 MSTORE PUSH1 0x2D DUP2 DUP11 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x114A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP12 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xF1E JUMPI JUMPDEST PUSH2 0xF0B DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF1A JUMPI MLOAD CODESIZE PUSH2 0xCEF JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xF01 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP14 MSTORE PUSH1 0x11 DUP7 MSTORE DUP9 DUP14 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP13 SWAP1 MSTORE PUSH1 0x2C DUP2 DUP11 ADD MSTORE PUSH32 0x4D65726765576974684D61726B65743A20496E73756666696369656E74206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B185B98D9481D1BC819585D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP14 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xFC2 JUMPI JUMPDEST PUSH2 0xFB1 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF1A JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xCA5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFA7 JUMP JUMPDEST DUP12 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1002 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1002 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1002 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1002 JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1034 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x109A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1002 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1002 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x10EF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID GASLIMIT PUSH2 0x7465 PUSH19 0x3A20496E73756666696369656E7420746F6B65 PUSH15 0x2062616C616E63ADC41BA80FFA0859 0xAA 0xB1 0xD7 0xCF BLOCKHASH GAS PUSH7 0x33A6AF94FC3D10 0xE5 0xB0 0xE0 0xBF CHAINID 0xCD 0xCC 0xF 0xD9 0xC8 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xC5 POP 0xB5 CREATE SSTORE MLOAD SWAP14 SWAP9 EQ CHAINID 0xBF 0xB9 SWAP8 0xC6 STATICCALL PUSH32 0x9CF2EBC057805E125DD0A1B1CF5AD264736F6C63430008130033000000000000 ",
              "sourceMap": "215:750:11:-:0;;;;;;;;;;;;;-1:-1:-1;;215:750:11;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;215:750:11;;;;;-1:-1:-1;;;;;;215:750:11;;734:10:5;215:750:11;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;-1:-1:-1;;;;;215:750:11;;;734:10:5;;215:750:11;;;;;;2566:40:0;;-1:-1:-1;2566:40:0;498:3:10;490:11;215:750:11;;;;;;;;;;;511:12:10;215:750:11;;;511:12:10;215:750:11;;;533:14:10;215:750:11;;;533:14:10;215:750:11;;;;;;;;;-1:-1:-1;215:750:11;;;;;;-1:-1:-1;215:750:11;;;;;-1:-1:-1;215:750:11;;;;-1:-1:-1;;;;;215:750:11;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 4103,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 4272,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bytes_calldata": {
                  "entryPoint": 4052,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 4391,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 4296,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 4216,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 4125,
                  "id": 54,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 4323,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c908163213897fe14610c245750806321df0da714610bfb57806324a47aeb14610b1157806334fcf43714610a5e57806335faa4161461091b5780635c975abb146108f7578063679aefce146108d8578063715018a6146108745780638da5cb5b146108435780638f4ffcb11461058157838163b6b55f25146104f457508063c4ae316814610411578063e1f26f22146103ea578063ea9f2417146101a55763f2fde38b146100ca57600080fd5b346101a15760203660031901126101a1576100e3611007565b6100eb61101d565b6001600160a01b0381811693909290841561014f57505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50346101a157826003193601126101a15760035482516370a0823160e01b808252338483015290926020926001600160a01b039081168486602481845afa9586156103185788966103b7575b506101fa6110e3565b6002548087029087820414871517156103a457606490049385838554169160248a5180948193825230898301525afa90811561039a578991610369575b5084116103225784875180926323b872dd60e01b8252818b8161025e8c30338c8501611127565b03925af1801561031857918593916102989895936102fb575b508154169088855180998195829463a9059cbb60e01b8452339084016110c8565b03925af19384156102f15760008051602061116a83398151915293946102c4575b50519283523392a280f35b6102e390833d85116102ea575b6102db8183611078565b8101906110b0565b50386102b9565b503d6102d1565b81513d87823e3d90fd5b61031190853d87116102ea576102db8183611078565b5038610277565b87513d8a823e3d90fd5b865162461bcd60e51b8152808401869052602d602482015260008051602061114a83398151915260448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508581813d8311610393575b6103808183611078565b8101031261038f575138610237565b8880fd5b503d610376565b88513d8b823e3d90fd5b634e487b7160e01b895260118452602489fd5b9095508481813d83116103e3575b6103cf8183611078565b810103126103df575194386101f1565b8780fd5b503d6103c5565b50346101a157826003193601126101a1575490516001600160a01b03909116815260209150f35b50346101a157826003193601126101a15761042a61101d565b60015460ff8116156104b357506001549060ff821615610479575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b602091509160017f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258936104e46110e3565b60ff19161760015551338152a180f35b8084843461057d57602036600319011261057d5761054560209161051661101d565b805484516323b872dd60e01b81529586936001600160a01b039092169284928391803590309033908501611127565b03925af19081156105745750610559575080f35b6105709060203d81116102ea576102db8183611078565b5080f35b513d84823e3d90fd5b5050fd5b50346101a15760803660031901126101a15761059b611007565b602480359290916001600160a01b03916044358381160361083f5760643567ffffffffffffffff81116103df576105d59036908301610fd4565b505060028754146107fd57600287556105ec6110e3565b82600354169081156107af576106006110e3565b60025480870290878204148715171561079d5760649004918482541695885180976370a0823160e01b82523085830152818360209a8b935afa908115610793578b91610762575b50841161071d575085885180926323b872dd60e01b8252818c8161066f8d308c8b8501611127565b03925af1801561039a57916106a99893918793610700575b50848a878354169286519b8c958694859363a9059cbb60e01b855284016110c8565b03925af19586156106f65760008051602061116a83398151915295966106d9575b50519485521692a26001815580f35b6106ef90853d87116102ea576102db8183611078565b50386106ca565b81513d89823e3d90fd5b61071690843d86116102ea576102db8183611078565b5038610687565b82602d608492898c519362461bcd60e51b855284015282015260008051602061114a83398151915260448201526c32903a37903a3930b739b332b960991b6064820152fd5b90508781813d831161078c575b6107798183611078565b81010312610788575138610647565b8a80fd5b503d61076f565b8a513d8d823e3d90fd5b634e487b7160e01b8952601182528589fd5b60849060238660208a519362461bcd60e51b85528401528201527f47656e6572696345617465723a20546f6b656e2061646472657373206e6f74206044820152621cd95d60ea1b6064820152fd5b606490601f85602089519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b505034610870578160031936011261087057600154905160089190911c6001600160a01b03168152602090f35b5080fd5b83346108d557806003193601126108d55761088d61101d565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346108705781600319360112610870576020906002549051908152f35b50503461087057816003193601126108705760209060ff6001541690519015158152f35b5091903461087057816003193601126108705761093661101d565b825481516370a0823160e01b8152308186015293602092916001600160a01b0390811691908487602481865afa968715610a54578697610a21575b5086156109de576109a49392859287899360015460081c169186519788958694859363a9059cbb60e01b855284016110c8565b03925af19081156109d557506109b8578280f35b816109ce92903d106102ea576102db8183611078565b5081808280f35b513d85823e3d90fd5b835162461bcd60e51b8152808301869052601a60248201527f45617465723a204e6f2062616c616e636520746f2073776565700000000000006044820152606490fd5b9096508481813d8311610a4d575b610a398183611078565b81010312610a4957519538610971565b8580fd5b503d610a2f565b84513d88823e3d90fd5b5090346101a15760203660031901126101a157813591610a7c61101d565b8215610ac457508160025403610a90578280f35b816020917f595a30f13a69b616c4d568e2a2b7875fdfe86e4300a049953c76ee278f8f3f109360025551908152a138808280f35b6020608492519162461bcd60e51b8352820152602260248201527f45617465723a2052617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b50346101a157602080600319360112610bf75760035483516370a0823160e01b8082523382860152843594909290916001600160a01b03918216908581602481855afa801561039a5787918a91610bc6575b5010610b71576101fa6110e3565b865162461bcd60e51b8152808401869052602960248201527f47656e657269634d657267653a20496e73756666696369656e742062616c616e60448201526818d9481d1bc819585d60ba1b6064820152608490fd5b809250878092503d8311610bf0575b610bdf8183611078565b8101031261038f5786905138610b63565b503d610bd5565b8380fd5b50503461087057816003193601126108705760035490516001600160a01b039091168152602090f35b92905034610bf7576060366003190112610bf7576001600160a01b03916024908135848116918035918390036103df5760443567ffffffffffffffff811161038f57610c739036908301610fd4565b909680600354166370a0823160e01b90818b5233858c015260209a8b818a81855afa908d8215610fc957908892610f98575b5010610f4157610cb36110e3565b600254808702908782041487151715610f2f5760649004918b84875416918a8c51809481938252308b8301525afa908115610f25578d91610ef4575b508211610eae5788516323b872dd60e01b81528c95949392918c908290818981610d1d8d3033848f01611127565b03925af18015610ea45786928d92610d5592610e87575b5084875416908c5194858094819363a9059cbb60e01b8352338c84016110c8565b03925af18015610e6057610e6a575b50875185815260008051602061116a8339815191528b3392a2600354885163095ea7b360e01b8152908b9082908416818881610da38c8e8c84016110c8565b03925af18015610e6057928b989796959492819260a495610e43575b50600354169a8a519b8c998a98899663a2c554d360e01b885287015285015230604485015260806064850152816084850152848401378181018301849052601f01601f191681010301925af19081156109d55750610e1b578280f35b813d8311610e3c575b610e2e8183611078565b810103126108d55738808280f35b503d610e24565b610e59908b3d8d116102ea576102db8183611078565b5038610dbf565b89513d87823e3d90fd5b610e80908b3d8d116102ea576102db8183611078565b5038610d64565b610e9d90843d86116102ea576102db8183611078565b5038610d34565b8a513d88823e3d90fd5b885162461bcd60e51b81528086018c9052602d818a015260008051602061114a83398151915260448201526c32903a37903a3930b739b332b960991b6064820152608490fd5b90508b81813d8311610f1e575b610f0b8183611078565b81010312610f1a575138610cef565b8c80fd5b503d610f01565b8a513d8f823e3d90fd5b634e487b7160e01b8d5260118652888dfd5b885162461bcd60e51b81528086018c9052602c818a01527f4d65726765576974684d61726b65743a20496e73756666696369656e7420626160448201526b1b185b98d9481d1bc819585d60a21b6064820152608490fd5b8092508d8092503d8311610fc2575b610fb18183611078565b81010312610f1a5786905138610ca5565b503d610fa7565b8b51903d90823e3d90fd5b9181601f840112156110025782359167ffffffffffffffff8311611002576020838186019501011161100257565b600080fd5b600435906001600160a01b038216820361100257565b60015460081c6001600160a01b0316330361103457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761109a57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312611002575180151581036110025790565b6001600160a01b039091168152602081019190915260400190565b60ff600154166110ef57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b6001600160a01b0391821681529116602082015260408101919091526060019056fe45617465723a20496e73756666696369656e7420746f6b656e2062616c616e63adc41ba80ffa0859aab1d7cf405a6633a6af94fc3d10e5b0e0bf46cdcc0fd9c8a2646970667358221220ecc550b5f055519d981446bfb997c6fa7f9cf2ebc057805e125dd0a1b1cf5ad264736f6c63430008130033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x213897FE EQ PUSH2 0xC24 JUMPI POP DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0xBFB JUMPI DUP1 PUSH4 0x24A47AEB EQ PUSH2 0xB11 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xA5E JUMPI DUP1 PUSH4 0x35FAA416 EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x8F7 JUMPI DUP1 PUSH4 0x679AEFCE EQ PUSH2 0x8D8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x874 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x843 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x581 JUMPI DUP4 DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x4F4 JUMPI POP DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xE1F26F22 EQ PUSH2 0x3EA JUMPI DUP1 PUSH4 0xEA9F2417 EQ PUSH2 0x1A5 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0xE3 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0xEB PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ISZERO PUSH2 0x14F JUMPI POP POP PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP5 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x318 JUMPI DUP9 SWAP7 PUSH2 0x3B7 JUMPI JUMPDEST POP PUSH2 0x1FA PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x64 SWAP1 DIV SWAP4 DUP6 DUP4 DUP6 SLOAD AND SWAP2 PUSH1 0x24 DUP11 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP10 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x39A JUMPI DUP10 SWAP2 PUSH2 0x369 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x322 JUMPI DUP5 DUP8 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP12 DUP2 PUSH2 0x25E DUP13 ADDRESS CALLER DUP13 DUP6 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x318 JUMPI SWAP2 DUP6 SWAP4 SWAP2 PUSH2 0x298 SWAP9 SWAP6 SWAP4 PUSH2 0x2FB JUMPI JUMPDEST POP DUP2 SLOAD AND SWAP1 DUP9 DUP6 MLOAD DUP1 SWAP10 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE CALLER SWAP1 DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x116A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP5 PUSH2 0x2C4 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x2E3 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x2EA JUMPI JUMPDEST PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x10B0 JUMP JUMPDEST POP CODESIZE PUSH2 0x2B9 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2D1 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x311 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0x277 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x114A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x393 JUMPI JUMPDEST PUSH2 0x380 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x38F JUMPI MLOAD CODESIZE PUSH2 0x237 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x376 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 SWAP6 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x3E3 JUMPI JUMPDEST PUSH2 0x3CF DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x3DF JUMPI MLOAD SWAP5 CODESIZE PUSH2 0x1F1 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x3C5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP2 POP RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x42A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x4B3 JUMPI POP PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x479 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 SWAP2 POP SWAP2 PUSH1 0x1 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP4 PUSH2 0x4E4 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0xFF NOT AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP1 DUP5 DUP5 CALLVALUE PUSH2 0x57D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x57D JUMPI PUSH2 0x545 PUSH1 0x20 SWAP2 PUSH2 0x516 PUSH2 0x101D JUMP JUMPDEST DUP1 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP6 DUP7 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 DUP5 SWAP3 DUP4 SWAP2 DUP1 CALLDATALOAD SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP6 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x574 JUMPI POP PUSH2 0x559 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x570 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI PUSH2 0x59B PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SUB PUSH2 0x83F JUMPI PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x3DF JUMPI PUSH2 0x5D5 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xFD4 JUMP JUMPDEST POP POP PUSH1 0x2 DUP8 SLOAD EQ PUSH2 0x7FD JUMPI PUSH1 0x2 DUP8 SSTORE PUSH2 0x5EC PUSH2 0x10E3 JUMP JUMPDEST DUP3 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x7AF JUMPI PUSH2 0x600 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0x79D JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP5 DUP3 SLOAD AND SWAP6 DUP9 MLOAD DUP1 SWAP8 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS DUP6 DUP4 ADD MSTORE DUP2 DUP4 PUSH1 0x20 SWAP11 DUP12 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x793 JUMPI DUP12 SWAP2 PUSH2 0x762 JUMPI JUMPDEST POP DUP5 GT PUSH2 0x71D JUMPI POP DUP6 DUP9 MLOAD DUP1 SWAP3 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE DUP2 DUP13 DUP2 PUSH2 0x66F DUP14 ADDRESS DUP13 DUP12 DUP6 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x39A JUMPI SWAP2 PUSH2 0x6A9 SWAP9 SWAP4 SWAP2 DUP8 SWAP4 PUSH2 0x700 JUMPI JUMPDEST POP DUP5 DUP11 DUP8 DUP4 SLOAD AND SWAP3 DUP7 MLOAD SWAP12 DUP13 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP6 DUP7 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x116A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH2 0x6D9 JUMPI JUMPDEST POP MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 PUSH1 0x1 DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH2 0x6EF SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0x6CA JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x716 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0x687 JUMP JUMPDEST DUP3 PUSH1 0x2D PUSH1 0x84 SWAP3 DUP10 DUP13 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x114A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x78C JUMPI JUMPDEST PUSH2 0x779 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x788 JUMPI MLOAD CODESIZE PUSH2 0x647 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x76F JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 DUP3 MSTORE DUP6 DUP10 REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x23 DUP7 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x47656E6572696345617465723A20546F6B656E2061646472657373206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x1F DUP6 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x8D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x8D5 JUMPI PUSH2 0x88D PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH2 0x936 PUSH2 0x101D JUMP JUMPDEST DUP3 SLOAD DUP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP2 DUP7 ADD MSTORE SWAP4 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 DUP5 DUP8 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP7 DUP8 ISZERO PUSH2 0xA54 JUMPI DUP7 SWAP8 PUSH2 0xA21 JUMPI JUMPDEST POP DUP7 ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9A4 SWAP4 SWAP3 DUP6 SWAP3 DUP8 DUP10 SWAP4 PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND SWAP2 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D5 JUMPI POP PUSH2 0x9B8 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x9CE SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A204E6F2062616C616E636520746F207377656570000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP7 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA4D JUMPI JUMPDEST PUSH2 0xA39 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA49 JUMPI MLOAD SWAP6 CODESIZE PUSH2 0x971 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA2F JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A1 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xA7C PUSH2 0x101D JUMP JUMPDEST DUP3 ISZERO PUSH2 0xAC4 JUMPI POP DUP2 PUSH1 0x2 SLOAD SUB PUSH2 0xA90 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x20 SWAP2 PUSH32 0x595A30F13A69B616C4D568E2A2B7875FDFE86E4300A049953C76EE278F8F3F10 SWAP4 PUSH1 0x2 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45617465723A2052617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A1 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF7 JUMPI PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE CALLER DUP3 DUP7 ADD MSTORE DUP5 CALLDATALOAD SWAP5 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x39A JUMPI DUP8 SWAP2 DUP11 SWAP2 PUSH2 0xBC6 JUMPI JUMPDEST POP LT PUSH2 0xB71 JUMPI PUSH2 0x1FA PUSH2 0x10E3 JUMP JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x47656E657269634D657267653A20496E73756666696369656E742062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x18D9481D1BC819585D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xBF0 JUMPI JUMPDEST PUSH2 0xBDF DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x38F JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xB63 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xBD5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x870 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x870 JUMPI PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP3 SWAP1 POP CALLVALUE PUSH2 0xBF7 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xBF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD DUP5 DUP2 AND SWAP2 DUP1 CALLDATALOAD SWAP2 DUP4 SWAP1 SUB PUSH2 0x3DF JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x38F JUMPI PUSH2 0xC73 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP1 SWAP7 DUP1 PUSH1 0x3 SLOAD AND PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP1 DUP2 DUP12 MSTORE CALLER DUP6 DUP13 ADD MSTORE PUSH1 0x20 SWAP11 DUP12 DUP2 DUP11 DUP2 DUP6 GAS STATICCALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0xFC9 JUMPI SWAP1 DUP9 SWAP3 PUSH2 0xF98 JUMPI JUMPDEST POP LT PUSH2 0xF41 JUMPI PUSH2 0xCB3 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 DUP8 MUL SWAP1 DUP8 DUP3 DIV EQ DUP8 ISZERO OR ISZERO PUSH2 0xF2F JUMPI PUSH1 0x64 SWAP1 DIV SWAP2 DUP12 DUP5 DUP8 SLOAD AND SWAP2 DUP11 DUP13 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS DUP12 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xF25 JUMPI DUP14 SWAP2 PUSH2 0xEF4 JUMPI JUMPDEST POP DUP3 GT PUSH2 0xEAE JUMPI DUP9 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE DUP13 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP13 SWAP1 DUP3 SWAP1 DUP2 DUP10 DUP2 PUSH2 0xD1D DUP14 ADDRESS CALLER DUP5 DUP16 ADD PUSH2 0x1127 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xEA4 JUMPI DUP7 SWAP3 DUP14 SWAP3 PUSH2 0xD55 SWAP3 PUSH2 0xE87 JUMPI JUMPDEST POP DUP5 DUP8 SLOAD AND SWAP1 DUP13 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER DUP13 DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE6A JUMPI JUMPDEST POP DUP8 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x116A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 CALLER SWAP3 LOG2 PUSH1 0x3 SLOAD DUP9 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP12 SWAP1 DUP3 SWAP1 DUP5 AND DUP2 DUP9 DUP2 PUSH2 0xDA3 DUP13 DUP15 DUP13 DUP5 ADD PUSH2 0x10C8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xE60 JUMPI SWAP3 DUP12 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP3 DUP2 SWAP3 PUSH1 0xA4 SWAP6 PUSH2 0xE43 JUMPI JUMPDEST POP PUSH1 0x3 SLOAD AND SWAP11 DUP11 MLOAD SWAP12 DUP13 SWAP10 DUP11 SWAP9 DUP10 SWAP7 PUSH4 0xA2C554D3 PUSH1 0xE0 SHL DUP9 MSTORE DUP8 ADD MSTORE DUP6 ADD MSTORE ADDRESS PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD MSTORE DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9D5 JUMPI POP PUSH2 0xE1B JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE3C JUMPI JUMPDEST PUSH2 0xE2E DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8D5 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0xE24 JUMP JUMPDEST PUSH2 0xE59 SWAP1 DUP12 RETURNDATASIZE DUP14 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0xDBF JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xE80 SWAP1 DUP12 RETURNDATASIZE DUP14 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0xD64 JUMP JUMPDEST PUSH2 0xE9D SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x2EA JUMPI PUSH2 0x2DB DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST POP CODESIZE PUSH2 0xD34 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP13 SWAP1 MSTORE PUSH1 0x2D DUP2 DUP11 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x114A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x32903A37903A3930B739B332B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP12 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xF1E JUMPI JUMPDEST PUSH2 0xF0B DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF1A JUMPI MLOAD CODESIZE PUSH2 0xCEF JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xF01 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP14 MSTORE PUSH1 0x11 DUP7 MSTORE DUP9 DUP14 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP13 SWAP1 MSTORE PUSH1 0x2C DUP2 DUP11 ADD MSTORE PUSH32 0x4D65726765576974684D61726B65743A20496E73756666696369656E74206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1B185B98D9481D1BC819585D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP14 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0xFC2 JUMPI JUMPDEST PUSH2 0xFB1 DUP2 DUP4 PUSH2 0x1078 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xF1A JUMPI DUP7 SWAP1 MLOAD CODESIZE PUSH2 0xCA5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xFA7 JUMP JUMPDEST DUP12 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1002 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1002 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1002 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1002 JUMPI JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1034 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x109A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1002 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1002 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x10EF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID GASLIMIT PUSH2 0x7465 PUSH19 0x3A20496E73756666696369656E7420746F6B65 PUSH15 0x2062616C616E63ADC41BA80FFA0859 0xAA 0xB1 0xD7 0xCF BLOCKHASH GAS PUSH7 0x33A6AF94FC3D10 0xE5 0xB0 0xE0 0xBF CHAINID 0xCD 0xCC 0xF 0xD9 0xC8 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xC5 POP 0xB5 CREATE SSTORE MLOAD SWAP14 SWAP9 EQ CHAINID 0xBF 0xB9 SWAP8 0xC6 STATICCALL PUSH32 0x9CF2EBC057805E125DD0A1B1CF5AD264736F6C63430008130033000000000000 ",
              "sourceMap": "215:750:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:750:11;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;215:750:11;;;;;;;2162:22:0;;215:750:11;;-1:-1:-1;;215:750:11;;;-1:-1:-1;;;;;;215:750:11;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;2566:40:0;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;790:36:10;;;815:10;790:36;;;215:750:11;;;790:36:10;;-1:-1:-1;;;;;215:750:11;;;790:36:10;215:750:11;;;;790:36:10;;;;;;;;;;;215:750:11;1204:72:1;;;:::i;:::-;918:5:9;215:750:11;;;;;;;;;;;;;;;927:3:9;215:750:11;;;;;;;;;;;;979:37:9;;;;;;1010:4;979:37;;;215:750:11;979:37:9;;;;;;;;;;;215:750:11;961:55:9;;;215:750:11;;;;;;;;;;1098:55:9;;1010:4;;;1098:55;1010:4;;815:10:10;1098:55:9;;;;:::i;:::-;;;;;;;;;;;;;1163:43;1098:55;;;;;215:750:11;;;;;;;;;;;;;;;;;;1163:43:9;;815:10:10;1163:43:9;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1163:43:9;;;;215:750:11;;;;;;815:10:10;1222:20:9;;215:750:11;;1163:43:9;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;215:750:11;;;;;;;;;1098:55:9;;;;;;;;;;;;;:::i;:::-;;;;;;215:750:11;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;215:750:11;;;;-1:-1:-1;;;927:3:9;215:750:11;;;;;;979:37:9;;;;;;;;;;;;;;;;:::i;:::-;;;215:750:11;;;;;979:37:9;;;215:750:11;;;;979:37:9;;;;;;215:750:11;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;790:36:10;;;;;;;;;;;;;;;;;:::i;:::-;;;215:750:11;;;;;790:36:10;;;;215:750:11;;;;790:36:10;;;;;215:750:11;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;;-1:-1:-1;215:750:11;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;1685:7:1;215:750:11;;;;;;;;1685:7:1;215:750:11;;;;;;;;-1:-1:-1;;;215:750:11;1685:7:1;215:750:11;;734:10:5;215:750:11;;2521:22:1;;215:750:11;;2521:22:1;215:750:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;2005:88:9;215:750:11;1204:72:1;;;1685:7;2274:20;1204:72;;;:::i;:::-;-1:-1:-1;;215:750:11;;1685:7:1;215:750:11;;734:10:5;215:750:11;;2274:20:1;215:750:11;;;;;;;;;;;-1:-1:-1;;215:750:11;;;;2158:60:9;215:750:11;1063:62:0;;;:::i;:::-;215:750:11;;;;-1:-1:-1;;;2158:60:9;;215:750:11;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;2204:4:9;;2184:10;;2158:60;;;:::i;:::-;;;;;;;;;;;;;215:750:11;;;2158:60:9;;;215:750:11;2158:60:9;;;;;;;;;:::i;:::-;;215:750:11;;2158:60:9;215:750:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:750:11;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1759:1:2;215:750:11;;2468:19:2;1759:1;;;;;1204:72:1;;:::i;:::-;215:750:11;;;;1768:20:9;;;215:750:11;;1204:72:1;;:::i;:::-;1759:1:2;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;979:37:9;;1010:4;979:37;;;215:750:11;;;;979:37:9;;;;;;;;;;;;;;215:750:11;961:55:9;;;215:750:11;;;;;;;;;;;1098:55:9;;1010:4;;;1098:55;1010:4;;1098:55;;;;;:::i;:::-;;;;;;;;;;1163:43;1098:55;;;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;1163:43:9;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1163:43:9;;;;215:750:11;;;;;;;1222:20:9;;215:750:11;1759:1:2;;215:750:11;;1163:43:9;;;;;;;;;;;;;:::i;:::-;;;;;;215:750:11;;;;;;;;;1098:55:9;;;;;;;;;;;;;:::i;:::-;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;215:750:11;;;;-1:-1:-1;;;215:750:11;;;;;979:37:9;;;;;;;;;;;;;;;;:::i;:::-;;;215:750:11;;;;;979:37:9;;;215:750:11;;;;979:37:9;;;;;;215:750:11;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;1759:1:2;215:750:11;;1759:1:2;215:750:11;;;;;;;;1759:1:2;;;;;;;215:750:11;1759:1:2;215:750:11;;;1759:1:2;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;2518:6;215:750:11;;-1:-1:-1;;;;;;215:750:11;;;;;;;;;-1:-1:-1;;;;;215:750:11;2566:40:0;215:750:11;;2566:40:0;215:750:11;;;;;;;;;;;;;;;;;;;;;628:5:10;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;1685:7:1;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;215:750:11;;;;-1:-1:-1;;;1319:37:9;;1350:4;1319:37;;;215:750:11;;1319:37:9;;215:750:11;-1:-1:-1;;;;;215:750:11;;;;;1319:37:9;215:750:11;;;;1319:37:9;;;;;;;;;;;215:750:11;1374:11:9;;;215:750:11;;1426:39:9;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;1426:39:9;;;;;:::i;:::-;;;;;;;;;;;;;215:750:11;;;1426:39:9;;;;;;-1:-1:-1;1426:39:9;;;;;;:::i;:::-;;;;215:750:11;;;1426:39:9;215:750:11;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;;;;;;;;;1319:37:9;;;;;;;;;;;;;;;;;:::i;:::-;;;215:750:11;;;;;1319:37:9;;;;215:750:11;;;;1319:37:9;;;;;;215:750:11;;;;;;;;;;;;;;;;;-1:-1:-1;;215:750:11;;;;;;1063:62:0;;;:::i;:::-;627:8:9;;215:750:11;;;;689:5:9;215:750:11;689:13:9;685:92;;215:750:11;;;685:92:9;1759:1:2;215:750:11;1759:1:2;749:17:9;1759:1:2;689:5:9;1759:1:2;215:750:11;;;;749:17:9;685:92;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;952:36:10;;;977:10;952:36;;;215:750:11;;;;;;;;-1:-1:-1;;;;;215:750:11;;;;952:36:10;215:750:11;;;;952:36:10;;;;;;;;;;;;215:750:11;1006:17:10;;215:750:11;;1204:72:1;;:::i;215:750:11:-;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;952:36:10;;;;;;;;;;;;;;;;;;:::i;:::-;;;215:750:11;;;;;;;952:36:10;;;;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;;;-1:-1:-1;;215:750:11;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;450:36;;;;475:10;450:36;;;215:750;;450:36;;;;;;;;;;;;;;;;;;;215:750;504:17;;215:750;;1204:72:1;;:::i;:::-;918:5:9;215:750:11;;;;;;;;;;;;;;;927:3:9;215:750:11;;;;;;;;;;;;979:37:9;;;;;;1010:4;979:37;;;215:750:11;979:37:9;;;;;;;;;;;215:750:11;961:55:9;;;215:750:11;;;;-1:-1:-1;;;1098:55:9;;215:750:11;;;;;;;;;;;;;1098:55:9;1010:4;;475:10:11;1098:55:9;;;;:::i;:::-;;;;;;;;;;;;;1163:43;1098:55;;;215:750:11;;;;;;;;;;;;;;;;;;1163:43:9;;475:10:11;1163:43:9;;;;:::i;:::-;;;;;;;;;;;215:750:11;;;;;;;-1:-1:-1;;;;;;;;;;;475:10:11;;1222:20:9;;215:750:11;;;;-1:-1:-1;;;786:44:11;;215:750;;;;;;;;;;786:44;215:750;;786:44;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;215:750;786:44;;;215:750;;;;;;;;;;;;;;;;;;906:50;;;;215:750;;;;1010:4:9;215:750:11;;;;;927:3:9;215:750:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:750:11;;;906:50;;;;;;;;;;;;;215:750;;;906:50;;;;;;;;;;;;:::i;:::-;;;215:750;;;;906:50;;215:750;;;906:50;;;;;786:44;;;;;;;;;;;;;:::i;:::-;;;;;;215:750;;;;;;;;;1163:43:9;;;;;;;;;;;;;:::i;:::-;;;;;1098:55;;;;;;;;;;;;;:::i;:::-;;;;;;215:750:11;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;215:750:11;;;;-1:-1:-1;;;927:3:9;215:750:11;;;;;;979:37:9;;;;;;;;;;;;;;;;:::i;:::-;;;215:750:11;;;;;979:37:9;;;215:750:11;;;;979:37:9;;;;;;215:750:11;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;450:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;215:750;;;;;;;450:36;;;;;;;;;215:750;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;:::o;1359:130:0:-;215:750:11;;;;-1:-1:-1;;;;;215:750:11;734:10:5;1422:23:0;215:750:11;;1359:130:0:o;215:750:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;:::o;1767:106:1:-;215:750:11;1685:7:1;215:750:11;;;;1767:106:1:o;215:750:11:-;;;-1:-1:-1;;;215:750:11;;;;;;;;;;;;-1:-1:-1;;;215:750:11;;;;;;;;-1:-1:-1;;;;;215:750:11;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "mergeAndSell(uint256,address,bytes)": "213897fe",
              "owner()": "8da5cb5b",
              "paused()": "5c975abb",
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1",
              "renounceOwnership()": "715018a6",
              "setRate(uint256)": "34fcf437",
              "sweep()": "35faa416",
              "togglePause()": "c4ae3168",
              "transferOwnership(address)": "f2fde38b",
              "wewe()": "e1f26f22"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wewe\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Merged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IAMM\",\"name\":\"amm\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"mergeAndSell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wewe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveApproval(address,uint256,address,bytes)\":{\"notice\":\"Wewe token approveAndCall function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/merge/MergeWithMarket.sol\":\"MergeWithMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/core/merge/Eater.sol\":{\"keccak256\":\"0x61dc76c5f99c11e66003c819e44a6632373c0b1a28439d7170a6a18ca2ec9745\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dba78697427e16a13bfc5be2ea96ea317d26e7cb530a7727e50ff3539e618b6\",\"dweb:/ipfs/QmfVwv7cfqoCY3v67HtNf2wXzLF36wrVAb8pmCtYHBA9a7\"]},\"contracts/core/merge/GenericMerge.sol\":{\"keccak256\":\"0x6b01c30fcdcac50ccce22675ba3b286ef187b39f4d00410cc570a1d6e2b180a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://330fb548f1f109195b1f29452d1598f396b2a8c8da6aca0f19ecabef3ed4bc39\",\"dweb:/ipfs/QmcKjJpkaE1Dz6E48cMDXc3aBGAwdyr957HHrKMFRwSsGY\"]},\"contracts/core/merge/MergeWithMarket.sol\":{\"keccak256\":\"0x63395bc47b33bc2351f9be1ee268cc9631962d3b1ea9be5fdd4eab111250dbe1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5dbe4c413d437284ebdde486e4da8ca9034ea6ce41f214cca0aebad41608285b\",\"dweb:/ipfs/QmW23o4oygvqyPSHxt8Rd7T9uCY4aSdrHkwidsnjU2cWWn\"]},\"contracts/interfaces/IAMM.sol\":{\"keccak256\":\"0x955bf32e57ff51881796c2e2e0eb91b0d414e34618792b2aadf2197b62529b4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efac0a3f30deddc86bc6a1b01fbf0fdba1f85bdef49004b571f2e0b4e983bfd1\",\"dweb:/ipfs/QmYufh3HPEFKQuFpaGUFVbCvxJxYDYbKaUMSMKh6NVrVrw\"]},\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]},\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IAMM.sol": {
        "IAMM": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "Swapped",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "swap(uint256,address,address,bytes)": "a2c554d3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAMM.sol\":\"IAMM\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAMM.sol\":{\"keccak256\":\"0x955bf32e57ff51881796c2e2e0eb91b0d414e34618792b2aadf2197b62529b4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efac0a3f30deddc86bc6a1b01fbf0fdba1f85bdef49004b571f2e0b4e983bfd1\",\"dweb:/ipfs/QmYufh3HPEFKQuFpaGUFVbCvxJxYDYbKaUMSMKh6NVrVrw\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IMergeV2.sol": {
        "IMergeV2": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "merge",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mergeAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                }
              ],
              "name": "setRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25",
              "getRate()": "679aefce",
              "getToken()": "21df0da7",
              "merge(uint256)": "24a47aeb",
              "mergeAll()": "ea9f2417",
              "setRate(uint256)": "34fcf437"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"merge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mergeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMergeV2.sol\":\"IMergeV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IMergeV2.sol\":{\"keccak256\":\"0x5d0c52389a6979d3b764bc2ba242fd2ae8c9c2e29cd528437a2f96ace6912733\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ac10526233be5f19a8b068d29c90620cc573428b466342355a9966c4609f12\",\"dweb:/ipfs/QmPyjFdid4JSaaHed1aMFygAQ4tuFJJ8v2ByzU4P4E8NKe\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IWeweReceiver.sol": {
        "IWeweReceiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "name": "receiveApproval",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "receiveApproval(address,uint256,address,bytes)": "8f4ffcb1"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWeweReceiver.sol\":\"IWeweReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IWeweReceiver.sol\":{\"keccak256\":\"0x9db633dfb41a6fa9db4f6c081ff3f1516dd54e854bc78562d65da36e292db9ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04fd1d112ba0bda79e814bf56879c03a497f0c10d7b888b69fde0acdd346c3b0\",\"dweb:/ipfs/QmZ67SRYL7YA3Tm1bhkP4tMyDS4vezu2HFigr4hBZYH6C1\"]}},\"version\":1}"
        }
      }
    }
  }
}